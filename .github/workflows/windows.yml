name: Windows (LV2, VST3)

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
 
      - name: Building 
        run: |
          pacman -S --noconfirm git mingw-w64-ucrt-x86_64-toolchain mingw-w64-ucrt-x86_64-cmake mingw-w64-ucrt-x86_64-libsndfile mingw-w64-ucrt-x86_64-rapidjson mingw-w64-ucrt-x86_64-cairo mingw-w64-ucrt-x86_64-lv2 make
          git clone https://github.com/Geonkick-Synthesizer/geonkick.git
          git clone --recursive https://github.com/steinbergmedia/vst3sdk.git
          mkdir -p /d/a/geonkick/build
          cd /d/a/geonkick/build
          cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=./install -DVST3_SDK_PATH=/d/a/geonkick/geonkick/vst3sdk /d/a/geonkick/geonkick/geonkick
          sed -i 's/std:://g' /d/a/geonkick/geonkick/vst3sdk/public.sdk/source/vst/utility/alignedalloc.h
          make VERBOSE=1
          mkdir -p Geonkick.vst3/Contents/x86_64-win
          cp -fr /d/a/geonkick/build/src/plugin/vst/Geonkick.dll  /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/Geonkick.vst3
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libcairo-2.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libgcc_s_seh-1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libstdc++-6.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libfontconfig-1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libfreetype-6.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libpng16-16.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/zlib1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libwinpthread-1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libexpat-1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libiconv-2.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libintl-8.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libbz2-1.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libbrotlidec.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libharfbuzz-0.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libbrotlicommon.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libglib-2.0-0.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libpixman-1-0.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libgraphite2.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          cp -fr /d/a/_temp/msys64/ucrt64/bin/libpcre2-8-0.dll /d/a/geonkick/build/Geonkick.vst3/Contents/x86_64-win/
          mkdir geonkick.lv2
          cp -fr /d/a/geonkick/build/src/plugin/lv2/*.dll /d/a/geonkick/build/geonkick.lv2
          cp -fr /d/a/geonkick/geonkick/geonkick/src/plugin/lv2/geonkick_win.lv2/* /d/a/geonkick/build/geonkick.lv2
          mkdir plugins
          cp -fr geonkick.lv2 plugins
          cp -fr Geonkick.vst3 plugins
          mkdir plugins/presets
          cp -fr /d/a/geonkick/build/presets/AVL-Drumkit plugins/presets
          cp -fr /d/a/geonkick/build/presets/DigitalSamba plugins/presets
          cp -fr /d/a/geonkick/build/presets/DSoS plugins/presets
          cp -fr /d/a/geonkick/build/presets/GeonkickBells plugins/presets
          cp -fr /d/a/geonkick/build/presets/TimeKit plugins/presets
          cp -fr /d/a/geonkick/build/presets/UnfaTutorial plugins/presets

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: geonkick-build
          path: D:\a\geonkick\build\plugins
          
          
  create-msi:
    needs: build
    runs-on: windows-latest
    defaults:
      run:
        shell: pwsh {0}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: geonkick-build
          path: D:\a\geonkick\build\plugins

      - name: Download and Install WiX Toolset
        run: |
          $url = 'https://github.com/wixtoolset/wix3/releases/download/wix3111rtm/wix311.exe'
          $output = 'C:\wix311.exe'
          Invoke-WebRequest -Uri $url -OutFile $output
          Start-Process -Wait -FilePath $output -ArgumentList '/quiet', '/norestart'
          Remove-Item -Path $output

      - name: Create MSI Installer
        run: |
          & "C:\Program Files (x86)\WiX Toolset v3.11\bin\candle.exe" D:\a\geonkick\geonkick\.github\workflows\GeonkickInstall.wxs
          & "C:\Program Files (x86)\WiX Toolset v3.11\bin\light.exe" -out GeonkickInstaller.msi GeonkickInstall.wixobj
          
      - name: Upload Installer
        uses: actions/upload-artifact@v2
        with:
          name: geonkick-installer
          path: GeonkickInstaller.msi
