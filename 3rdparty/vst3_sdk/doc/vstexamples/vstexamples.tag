<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>adelaycontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelaycontroller_8cpp</filename>
    <includes id="adelaycontroller_8h" name="adelaycontroller.h" local="yes" imported="no">adelaycontroller.h</includes>
    <includes id="adelayids_8h" name="adelayids.h" local="yes" imported="no">adelayids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="function">
      <type></type>
      <name>DEF_CLASS_IID</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>ad4b1aebf3c139f29c168a7b0c7513b89</anchor>
      <arglist>(IDelayTestController) tresult ADelayController</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adelaycontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelaycontroller_8h</filename>
    <class kind="class">Steinberg::Vst::IDelayTestController</class>
    <class kind="class">Steinberg::Vst::ADelayController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>adelayids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelayids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="enumvalue">
      <name>kDelayId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea7d4228d4da0ae0131ef1783f79526104</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea57a371feb983eb7350939ef1aab87090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adelayprocessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelayprocessor_8cpp</filename>
    <includes id="adelayprocessor_8h" name="adelayprocessor.h" local="yes" imported="no">adelayprocessor.h</includes>
    <includes id="adelayids_8h" name="adelayids.h" local="yes" imported="no">adelayids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>adelayprocessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelayprocessor_8h</filename>
    <class kind="class">Steinberg::Vst::ADelayProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>again.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>again_8cpp</filename>
    <includes id="again_8h" name="again.h" local="yes" imported="no">again.h</includes>
    <includes id="againprocess_8h" name="againprocess.h" local="yes" imported="no">againprocess.h</includes>
    <includes id="againparamids_8h" name="againparamids.h" local="yes" imported="no">againparamids.h</includes>
    <includes id="againcids_8h" name="againcids.h" local="yes" imported="no">againcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>again.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>again_8h</filename>
    <class kind="class">Steinberg::Vst::AGain</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againaax.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again_aax/source/</path>
    <filename>againaax_8cpp</filename>
    <includes id="againcids_8h" name="againcids.h" local="yes" imported="no">againcids.h</includes>
    <includes id="againparamids_8h" name="againparamids.h" local="yes" imported="no">againparamids.h</includes>
    <member kind="function">
      <type>AAX_Effect_Desc *</type>
      <name>AAXWrapper_GetDescription</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>a6a257b7e7486f4e30b723e2798630c06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>AAX_MIDI_Desc</type>
      <name>effMIDI</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>aecbe923fbe60e46a80a00f852f275acc</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>AAX_Meter_Desc</type>
      <name>effMeters</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>adee80717eee22432f9fb4e19402d2ca2</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>AAX_Plugin_Desc</type>
      <name>effPlugins</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>a69e9ff8c435bb8eed1e2ca65d4c5ffd1</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>AAX_Effect_Desc</type>
      <name>effDesc</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>a3df507746718c13e0db2b2eb888128e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>forceLinkAAXWrapper</name>
      <anchorfile>againaax_8cpp.html</anchorfile>
      <anchor>a08d8594ad5e5ada34107022d3a6e80ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>againcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>AGainVST3Category</name>
      <anchorfile>againcids_8h.html</anchorfile>
      <anchor>a379f45d1d3bc07e8916d65b9b234c936</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>againcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againcontroller_8cpp</filename>
    <includes id="againcontroller_8h" name="againcontroller.h" local="yes" imported="no">againcontroller.h</includes>
    <includes id="againparamids_8h" name="againparamids.h" local="yes" imported="no">againparamids.h</includes>
    <includes id="againuimessagecontroller_8h" name="againuimessagecontroller.h" local="yes" imported="no">againuimessagecontroller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::AGainUIMessageController</class>
    <class kind="class">Steinberg::Vst::AGainController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againentry_8cpp</filename>
    <includes id="again_8h" name="again.h" local="yes" imported="no">again.h</includes>
    <includes id="againsidechain_8h" name="againsidechain.h" local="yes" imported="no">againsidechain.h</includes>
    <includes id="againcontroller_8h" name="againcontroller.h" local="yes" imported="no">againcontroller.h</includes>
    <includes id="againcids_8h" name="againcids.h" local="yes" imported="no">againcids.h</includes>
    <includes id="again_2source_2version_8h" name="again/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginSideChainName</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>a145bc98d1f6c61e9403c3fc8c0b66848</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BEGIN_FACTORY_DEF</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>aa728b26b0b0f9502bc35257f281623cf</anchor>
      <arglist>(&quot;Steinberg Media Technologies&quot;, &quot;http://www.steinberg.net&quot;, &quot;mailto:info@steinberg.de&quot;) DEF_CLASS2(INLINE_UID_FROM_FUID(AGainProcessorUID)</arglist>
    </member>
    <member kind="function">
      <type>AGain Steinberg::Vst::AGain::createInstance</type>
      <name>DEF_CLASS2</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>af6bc07f4634aae694fd576972d55f042</anchor>
      <arglist>(INLINE_UID_FROM_FUID(AGainControllerUID), PClassInfo::kManyInstances, kVstComponentControllerClass, &quot;AGain VST3&quot; &quot;Controller&quot;, 0, &quot;&quot;, &quot;1&quot; &quot;.&quot; &quot;3&quot; &quot;.&quot; &quot;0&quot; &quot;.&quot; &quot;1&quot;, kVstVersionString, Steinberg::Vst::AGainController::createInstance) DEF_CLASS2(INLINE_UID_FROM_FUID(AGainWithSideChainProcessorUID)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kVstAudioEffectClass</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>a747235f6e5700e3fbd1d59010b512b50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AGain</type>
      <name>VST3</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>aa2957643985a01da1edc5c69727584d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AGain</type>
      <name>Fx</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>a5b22b8428105605e67654e907261ab0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>AGain</type>
      <name>kVstVersionString</name>
      <anchorfile>againentry_8cpp.html</anchorfile>
      <anchor>ad55a4f99f6b826bc06bf14e8d8473ca2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>againentry_vst2.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againentry__vst2_8cpp</filename>
    <includes id="againcids_8h" name="againcids.h" local="yes" imported="no">againcids.h</includes>
    <member kind="function">
      <type>::AudioEffect *</type>
      <name>createEffectInstance</name>
      <anchorfile>againentry__vst2_8cpp.html</anchorfile>
      <anchor>acea66abdb15a93b63dd7e2e7777d0271</anchor>
      <arglist>(audioMasterCallback audioMaster)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>againparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againparamids_8h</filename>
    <member kind="enumvalue">
      <name>kGainId</name>
      <anchorfile>againparamids_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7a9006dde2a6fcecd0d0f30fdcaec1ec16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kVuPPMId</name>
      <anchorfile>againparamids_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7ac89effee4c5c335b71019bc4a4fa1133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>againparamids_8h.html</anchorfile>
      <anchor>adf764cbdea00d65edcd07bb9953ad2b7af4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>againprocess.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againprocess_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againsidechain.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againsidechain_8cpp</filename>
    <includes id="againsidechain_8h" name="againsidechain.h" local="yes" imported="no">againsidechain.h</includes>
    <includes id="againprocess_8h" name="againprocess.h" local="yes" imported="no">againprocess.h</includes>
    <includes id="againparamids_8h" name="againparamids.h" local="yes" imported="no">againparamids.h</includes>
    <includes id="againcids_8h" name="againcids.h" local="yes" imported="no">againcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againsidechain.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againsidechain_8h</filename>
    <includes id="again_8h" name="again.h" local="yes" imported="no">again.h</includes>
    <class kind="class">Steinberg::Vst::AGainWithSideChain</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>againuimessagecontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>againuimessagecontroller_8h</filename>
    <class kind="class">Steinberg::Vst::AGainUIMessageController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>audiohost.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/audiohost/source/</path>
    <filename>audiohost_8cpp</filename>
    <includes id="audiohost_8h" name="audiohost.h" local="yes" imported="no">public.sdk/samples/vst-hosting/audiohost/source/audiohost.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::AudioHost</namespace>
    <member kind="function">
      <type>int</type>
      <name>wmain</name>
      <anchorfile>audiohost_8cpp.html</anchorfile>
      <anchor>ae1325efcce4a4b1b4ea52247f0a0a0c1</anchor>
      <arglist>(int argc, wchar_t *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>FUnknown *</type>
      <name>gStandardPluginContext</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>ae321ca2b045da80954622c101138b2b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>audiohost.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/audiohost/source/</path>
    <filename>audiohost_8h</filename>
    <class kind="class">Steinberg::Vst::AudioHost::App</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::AudioHost</namespace>
  </compound>
  <compound kind="file">
    <name>again_auv3/audiounitconfig.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again_auv3/</path>
    <filename>again__auv3_2audiounitconfig_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentType</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aa5487d926fdfe6333497df02061b0758</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentType1</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a476caadf14c9cb14d70ae895e4c5047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentSubType</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ad84fd3bf68b1aeebb32efab604f5dafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentSubType1</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ab4c92ba5e6b1c1d97773bf0cc84125bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentManufacturer</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>abae7faa0480421761493fea8346c1587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentManufacturer1</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a673df5bd51e1927c698e4934cae14c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentDescription</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a4019d8ce3bdbd1f14eb6c6429cb097f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentName</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aec608402638dd0120398bda1074a4eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentTag</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ad8225b98baf3f9d12f5f22981f990d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentVersion</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>af1327eb2e2055860752d5b164adc03cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kSupportedNumChannels</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a3cac5ff5fa6d00c89872bd159c33e552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAudioFileName</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aa9b5ee2bd3eae06aa44950043b4ed2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAudioFileFormat</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a270b560b1a8891081787ed0ba81c6f35</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentFlags</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>af51e79c5ec243a082686a9f441aefafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentFlagsMask</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aaf9e8ddda61d8ddd8ad10c507533643e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUapplicationDelegateClassName</name>
      <anchorfile>again__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a52d31c2d5038d5bcc6c6fce79c4a4c62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_auv3/audiounitconfig.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth_auv3/</path>
    <filename>note__expression__synth__auv3_2audiounitconfig_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentType</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aa5487d926fdfe6333497df02061b0758</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentType1</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a476caadf14c9cb14d70ae895e4c5047f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentSubType</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ad84fd3bf68b1aeebb32efab604f5dafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentSubType1</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ab4c92ba5e6b1c1d97773bf0cc84125bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentManufacturer</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>abae7faa0480421761493fea8346c1587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentManufacturer1</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a673df5bd51e1927c698e4934cae14c98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentDescription</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a4019d8ce3bdbd1f14eb6c6429cb097f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentName</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aec608402638dd0120398bda1074a4eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentTag</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>ad8225b98baf3f9d12f5f22981f990d53</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentVersion</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>af1327eb2e2055860752d5b164adc03cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kSupportedNumChannels</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>a3cac5ff5fa6d00c89872bd159c33e552</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentFlags</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>af51e79c5ec243a082686a9f441aefafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kAUcomponentFlagsMask</name>
      <anchorfile>note__expression__synth__auv3_2audiounitconfig_8h.html</anchorfile>
      <anchor>aaf9e8ddda61d8ddd8ad10c507533643e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>brownnoise.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>brownnoise_8h</filename>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::BrownNoise</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>cids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>cids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PlugVST3Category</name>
      <anchorfile>cids_8h.html</anchorfile>
      <anchor>ab3fb28675e9f2f42c0b9de8aac469a83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>doc.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/</path>
    <filename>doc_8h</filename>
  </compound>
  <compound kind="file">
    <name>editorhost.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/editorhost/source/</path>
    <filename>editorhost_8cpp</filename>
    <includes id="editorhost_8h" name="editorhost.h" local="yes" imported="no">public.sdk/samples/vst-hosting/editorhost/source/editorhost.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::EditorHost</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>ac6189c9d2e3b7153cab8913a42d8c4f4</anchor>
      <arglist>(const ViewRect &amp;r1, const ViewRect &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>a8b3291e5d46b20e550cfdc886ad9ca0f</anchor>
      <arglist>(const ViewRect &amp;r1, const ViewRect &amp;r2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>editorhost.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/editorhost/source/</path>
    <filename>editorhost_8h</filename>
    <class kind="class">Steinberg::Vst::EditorHost::App</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::EditorHost</namespace>
  </compound>
  <compound kind="file">
    <name>editorsizecontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>editorsizecontroller_8cpp</filename>
    <includes id="editorsizecontroller_8h" name="editorsizecontroller.h" local="yes" imported="no">editorsizecontroller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>editorsizecontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>editorsizecontroller_8h</filename>
    <class kind="class">Steinberg::Vst::EditorSizeController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="typedef">
      <type>std::vector&lt; float &gt;</type>
      <name>SizeFactors</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>a3e856c7ffbe25183e8d732833ec765d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>eventlistcheck.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlistcheck_8cpp</filename>
    <includes id="eventlistcheck_8h" name="eventlistcheck.h" local="yes" imported="no">eventlistcheck.h</includes>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>eventlistcheck.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlistcheck_8h</filename>
    <class kind="class">EventListCheck</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>eventlogdatabrowsersource.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlogdatabrowsersource_8cpp</filename>
    <includes id="eventlogdatabrowsersource_8h" name="eventlogdatabrowsersource.h" local="yes" imported="no">eventlogdatabrowsersource.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>eventlogdatabrowsersource.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlogdatabrowsersource_8h</filename>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <class kind="class">VSTGUI::EventLogDataBrowserSource</class>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>eventlogger.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlogger_8cpp</filename>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>eventlogger.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>eventlogger_8h</filename>
    <class kind="class">EventLogger</class>
  </compound>
  <compound kind="file">
    <name>exampletest.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>exampletest_8cpp</filename>
    <includes id="adelaycontroller_8h" name="adelaycontroller.h" local="yes" imported="no">adelaycontroller.h</includes>
    <includes id="adelayprocessor_8h" name="adelayprocessor.h" local="yes" imported="no">adelayprocessor.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>adelay/source/factory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelay_2source_2factory_8cpp</filename>
    <includes id="adelaycontroller_8h" name="adelaycontroller.h" local="yes" imported="no">adelaycontroller.h</includes>
    <includes id="adelayids_8h" name="adelayids.h" local="yes" imported="no">adelayids.h</includes>
    <includes id="adelayprocessor_8h" name="adelayprocessor.h" local="yes" imported="no">adelayprocessor.h</includes>
    <includes id="adelay_2source_2version_8h" name="adelay/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>adelay_2source_2factory_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostchecker/source/factory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostchecker_2source_2factory_8cpp</filename>
    <includes id="hostcheckerprocessor_8h" name="hostcheckerprocessor.h" local="yes" imported="no">hostcheckerprocessor.h</includes>
    <includes id="hostcheckercontroller_8h" name="hostcheckercontroller.h" local="yes" imported="no">hostcheckercontroller.h</includes>
    <includes id="cids_8h" name="cids.h" local="yes" imported="no">cids.h</includes>
    <includes id="hostchecker_2source_2version_8h" name="hostchecker/source/version.h" local="yes" imported="no">version.h</includes>
  </compound>
  <compound kind="file">
    <name>note_expression_synth/source/factory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth_2source_2factory_8cpp</filename>
    <includes id="note__expression__synth__processor_8h" name="note_expression_synth_processor.h" local="yes" imported="no">note_expression_synth_processor.h</includes>
    <includes id="note__expression__synth__controller_8h" name="note_expression_synth_controller.h" local="yes" imported="no">note_expression_synth_controller.h</includes>
    <includes id="note__expression__synth__ui_8h" name="note_expression_synth_ui.h" local="yes" imported="no">note_expression_synth_ui.h</includes>
    <includes id="note__expression__synth_2source_2version_8h" name="note_expression_synth/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>note__expression__synth_2source_2factory_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pitchnames/source/factory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnames_2source_2factory_8cpp</filename>
    <includes id="pitchnames_8h" name="pitchnames.h" local="yes" imported="no">pitchnames.h</includes>
    <includes id="pitchnames_2source_2version_8h" name="pitchnames/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>pitchnames_2source_2factory_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>filter.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>filter_8h</filename>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Filter</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
    <member kind="define">
      <type>#define</type>
      <name>M_PI</name>
      <anchorfile>filter_8h.html</anchorfile>
      <anchor>ae71449b1cc6e6250b91f539153a7a0d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>helpers.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>helpers_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SWAP64_LE</name>
      <anchorfile>helpers_8h.html</anchorfile>
      <anchor>ade1a3ec1bf5bc01667a482c680134845</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP64_BE</name>
      <anchorfile>helpers_8h.html</anchorfile>
      <anchor>ab3f54cfbdfad0fd58fe4011c3c2e910b</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP32_LE</name>
      <anchorfile>helpers_8h.html</anchorfile>
      <anchor>a0faa4705eccbf4e94518f95a501eb98e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SWAP32_BE</name>
      <anchorfile>helpers_8h.html</anchorfile>
      <anchor>a8d62d5d71f81615c8b3f63790fb02176</anchor>
      <arglist>(x)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostcheck.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheck_8cpp</filename>
    <includes id="hostcheck_8h" name="hostcheck.h" local="yes" imported="no">hostcheck.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>hostcheck.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheck_8h</filename>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <includes id="processsetupcheck_8h" name="processsetupcheck.h" local="yes" imported="no">processsetupcheck.h</includes>
    <includes id="processcontextcheck_8h" name="processcontextcheck.h" local="yes" imported="no">processcontextcheck.h</includes>
    <includes id="eventlistcheck_8h" name="eventlistcheck.h" local="yes" imported="no">eventlistcheck.h</includes>
    <includes id="parameterchangescheck_8h" name="parameterchangescheck.h" local="yes" imported="no">parameterchangescheck.h</includes>
    <class kind="class">HostCheck</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>hostcheckercontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheckercontroller_8cpp</filename>
    <includes id="hostcheckercontroller_8h" name="hostcheckercontroller.h" local="yes" imported="no">hostcheckercontroller.h</includes>
    <includes id="cids_8h" name="cids.h" local="yes" imported="no">cids.h</includes>
    <includes id="editorsizecontroller_8h" name="editorsizecontroller.h" local="yes" imported="no">editorsizecontroller.h</includes>
    <includes id="eventlogdatabrowsersource_8h" name="eventlogdatabrowsersource.h" local="yes" imported="no">eventlogdatabrowsersource.h</includes>
    <includes id="hostcheckerprocessor_8h" name="hostcheckerprocessor.h" local="yes" imported="no">hostcheckerprocessor.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_CHECK_MSG</name>
      <anchorfile>hostcheckercontroller_8cpp.html</anchorfile>
      <anchor>a98c988832e2260b6ef35064afc5c07e9</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>THREAD_CHECK_EXIT</name>
      <anchorfile>hostcheckercontroller_8cpp.html</anchorfile>
      <anchor>a0468a21b96e7fbd1d36311275775d9a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostcheckercontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheckercontroller_8h</filename>
    <includes id="eventlogdatabrowsersource_8h" name="eventlogdatabrowsersource.h" local="yes" imported="no">eventlogdatabrowsersource.h</includes>
    <includes id="hostcheck_8h" name="hostcheck.h" local="yes" imported="no">hostcheck.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <class kind="class">Steinberg::Vst::HostCheckerController</class>
    <class kind="struct">Steinberg::Vst::HostCheckerController::ScoreEntry</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::HostChecker</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="enumvalue">
      <name>kParam1Tag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a62b2022052e868671bb75cd58084574f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kGeneratePeaksTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ade4c107478667f79e5aff7cf216143c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLatencyTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a895c3f08d5334358ee7628f412529369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04accae6362415ab072a25d0f720df50d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCanResizeTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a7f4718263113cc1893694bc352eac2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kScoreTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a549f60a171e154b6a8a5fc3fd29a9dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamWhichCouldBeHiddenTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a0bef0d6212b8144c2b717ef8fd375d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriggerHiddenTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a79b0ada10bec303a481a3c7dc8ef13a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriggerProgressTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a19ba37e132970966dad81b0a71234d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProgressValueTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ace7e68fad1a025ca53d2f6b5a1e5e44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCopy2ClipboardTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04abdd12f264dfee05446ae8e7ecb53a35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartNoteExpressionChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a2c5ab865b4fe4c09237ba13ff1855be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartKeyswitchChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a838ced30e9360ac386775eb2166b322e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartParamValuesChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a11e59c0c9b5f181b1a7cc9255dd75168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartParamTitlesChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a4aa199a87ec77535f30478d62ddc5d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProcessWarnTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ae8cff5408066b4167241eedf3679cf3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLastTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a93e21950be830dbb0584b13931e8ec91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUnitId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a390c94ed7f81f33a64dc96dd65c24aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUnit2Id</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ae08509ca4981dea660e42a45553830b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int32</type>
      <name>kMaxLatency</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>ae3d4ad032b2586752aaefe7d98b3b352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a82a59297717d21868266e8a4fd1da4f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnBitCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a72e8435dc9b0315802adde434a4fcd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnStepCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a4bc22a30a6391416bcaa23b915d31916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostcheckerprocessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheckerprocessor_8cpp</filename>
    <includes id="hostcheckerprocessor_8h" name="hostcheckerprocessor.h" local="yes" imported="no">hostcheckerprocessor.h</includes>
    <includes id="cids_8h" name="cids.h" local="yes" imported="no">cids.h</includes>
    <includes id="hostcheckercontroller_8h" name="hostcheckercontroller.h" local="yes" imported="no">hostcheckercontroller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_CHECK_MSG</name>
      <anchorfile>hostcheckerprocessor_8cpp.html</anchorfile>
      <anchor>a98c988832e2260b6ef35064afc5c07e9</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>THREAD_CHECK_EXIT</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>a0468a21b96e7fbd1d36311275775d9a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostcheckerprocessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostcheckerprocessor_8h</filename>
    <includes id="hostcheck_8h" name="hostcheck.h" local="yes" imported="no">hostcheck.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
    <class kind="class">Steinberg::Vst::HostCheckerProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>logevents.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>logevents_8h</filename>
    <class kind="struct">LogEvent</class>
    <member kind="define">
      <type>#define</type>
      <name>SETUP_CONTEXT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>adfcd222e817c0d2841fc4adaf1353850</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STATE</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aacd2cf60f504e45efada9aec028ee3cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AUDIO_BUFFER</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a987df35cd56a96cf7e2c4e63ffb0e38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EVENT_LIST</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a2cd9d1eb177a484140e69f47afd55568</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAM_CHANGE</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aab4457bfe7f68d261eb606601c698cf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCESS_DATA</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a79bbc9918c2c113a446503e386a2747c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCESS_CONTEXT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a7f0a527dddc93495221e8603c29df7f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>THREAD_CONTEXT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a75fdd038db87810b8297b0289230a80e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FEATURE_SUPPORT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>ad76f3128fb1f4ed00962293d7839e901</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HOST_FEATURE_SUPPORT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>ad535885ce8f80d2d5eddc5423e73393e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FEATURE_PROCESSOR_SUPPORT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aac9b17824a28a84dfef658574649e37c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PROCESS</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aa4a759ebcb6194d2d4a86b05f4889388</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONTROL</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a553a124e1d5855773c74cb5561dec040</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ERR</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a96fad55b3f5adf08c39e4c877cf185e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_WARN</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aea3f57d6dcc5b4ac957e2679e87dde27</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_INFO</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>aeb4f36db01bd128c7afeac5889dac311</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_EVENT_LIST</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a3ff8f70a8e7742a391579647a740b0cc</anchor>
      <arglist>(LOG_DEF)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_ID</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>ad0f48101b43e62a857a56e15651ee234</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_SEVER</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc507aa9af80c3191815907e53ecd31c</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_DESC</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a53f9f6500f910d315237711949181611</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LOG_CONTEXT</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>a779b90f0bd4c9d431184500eff9a3a83</anchor>
      <arglist>(a, b, c, d, e)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>eLogIds</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessorControllerConnection</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a2e74dd2d4479078ccf9333ecfe6bcb96</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidActivateAuxBus</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ade2fd859f4246b466d837beed36a5703</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateInitializedMissing</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a6074c9d44c45f389e3a8f4f21de8c50d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateSetupMissing</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5398d25c9a56babb7ceb5fcae0a18b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateActivatedMissing</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1d7f0cf2ffc82eab61b4f15288519c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateProcessingMissing</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a3dff2e7ce12fdc6cddaa2a9b5a0034e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateSetActiveWrong</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a433a047f28392a6722bad05aa96d51d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidStateSetProcessingWrong</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a88f9e8a6cf8b769cfd7570b9b63e3f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetActiveFalseRedundant</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae009f638d133fe3534d2b05fa03eca2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetActiveTrueRedundant</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7bc60418c5752754be819dc1e7117219</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetProcessingFalseRedundant</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1714d54c69c49d2db1d702c892f9cc7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetProcessingTrueRedundant</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a08e0dc10c5f5e8a5914cc4492b95c7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextPointerNull</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a42372ee37193ead81243de46e0c893b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidSymbolicSampleSize</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a25c95c63ff95d5efed461887f2a3a9e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidProcessMode</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7143c2172ae868d9546cee73deda7af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidBlockSize</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ac28f350d90314b1c5701947ef08c0229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessPlaybackChangedDiscontinuityDetected</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46afa7549a1300416c3b116bd7dc6261c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessDiscontinuityDetected</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46afe4e78aa1bb756056e704e737c098d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessPlaybackChangedContinuousDiscontinuityDetected</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a02f2c32c63ec29184beffe72dad2d9fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContinuousDiscontinuityDetected</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ac488f17e2ed31ee0ab63781b95a1e578</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidProcessContextSampleRate</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46acb67860eccd2ae0d167ab51c0dff17fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNullPointerToChannelBuf</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae1e7066b76b319163016fb295fe87ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNullPointerToAuxChannelBuf</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a75167ff761bc619af55ae8f389fed047</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNullPointerToAudioBusBuffer</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ac259cd881ad45c5f84417ae2b2297461</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdAudioBufNotMatchComponentBusCount</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab7f1167909bec3d223696cc8b3114baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidAudioBufNumOfChannels</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a88345749f4e5e9376688e63c19c8fd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdUnknownEventType</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad776f0f81bb9dc8fa1353a3a1650fc4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidEventVelocityValue</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46acca55d9df20a4e82dbd4db7a92b7bc2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidEventPitchValue</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a73f220a3862445c7acfe5b72114f0614</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidEventSampleOffset</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a924101eab13391e8771bd435a70339a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidEventBusIndex</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad8388900bd8dc4ae7e352291c138856d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidNoteOnChannelIndex</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab92829d7917ac3fcf489894ad5e0f702</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidNoteOffChannelIndex</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a069716843c18a7b2f9f5b3e3b578eed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidPolyPressChannelIndex</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a37a3b49d8d583654041f9d98d4039ab5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNumInputEventExceedsLimit</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aab8ffc8ae70ff83cfbde8f31b1e97cfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdCouldNotGetAnInputEvent</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad2a3b26b23e5ec504aa7a1a902831ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdEventsAreNotSortedBySampleOffset</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae0638e74becbe60160d6e5ce75435b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdEventsAreNotSortedByPpqPosition</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae34000d1f71bab2842d76a94d098e47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNoteOnWithPitchAlreadyTriggered</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a50d33f4e41ea697afd5e6de21eecb313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNoteOnWithIdAlreadyTriggered</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7a7533221ac8175ac3c2e43cd11c91fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNoteOffWithIdNeverTriggered</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a8f460bf093b255c24ac4ba42f521e045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNoteOffWithPitchNeverTriggered</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aeb6f321b4804b03d006eb11118742676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdNoteExpressValNotNormalized</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0575a52841d1413897ba65aa355f3169</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidParamValue</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a328a9cf01b1397773be38d1c942bb6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidParameterCount</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a8a749f5e585c0e8d5a5633a3411dfba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInvalidParameterID</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46adee54c3df6fcfa0c41e8cd424043d946</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParameterIDMoreThanOneTimeinList</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad9d97dbdcf985eac72280f9983f621df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParameterChangesPointerIsNull</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1d045ed3ac0800837d4fcaf28817436b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParameterQueueIsNullForValidIndex</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad233a38b271fa3f0c07d6a538c82e83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParametersAreNotSortedBySampleOffset</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7d1350ab452e31a07e0673f031b3bcdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParametersHaveSameSampleOffset</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae7f3dc2a418f6ea1bab85a972eda397e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdinitializeCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7f66488000db44efaad8cc07bab51b78</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdterminateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46abff4951b11cabb42cc2b0c1e598fa2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdQueryInterfaceCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a09172c737e206e1263840124748c6d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetComponentHandlerCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa493a95d6ef3a58d65dac2896a1f9e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetComponentStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a4853909ba7df32fb0a0158cda2bfa124</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdConnectCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a4cf580877d507636ce9c112fb04c5feb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab3842339582a18f8cb41e16c53ee3267</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aca1afe39327f279398708024c7e29d2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdnotifyCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a180684080d224f158db9db1677bbf87b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetUnitByBusCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad4ac4154568b783b60d67d7cab1018a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetUnitCountCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7035ce9d1b0a6b614f111dcaa43507b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetParamNormalizedCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5b1eea04e108e63b1ac4d9c8e74ed842</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdBeginEditCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a05bece7a61fa00437be330e853a75b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdEndEditCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a91387530ef8e1791e63d888a93f01f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdBeginEditFromHostCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af3bea643844eb0c57d358eb70f3467f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdEndEditFromHostCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aae5dfe2163fb903e90f3679e2a897229</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdCreateViewCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab40d3f236012290e3b1572368e095bf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdOnLiveMIDIControllerInputCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a63fd414005dd9bcb25dd39782bc57d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetNoteExpressionCountCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46abdde3c71e26acc95d638c4055f9f8816</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetNoteExpressionInfoCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a026bc622b5b78782da47ea94c0b3867d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetNoteExpressionValueByStringCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad0f0741ac0b5b0b84ae7b018e676c73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetNoteExpressionStringByValueCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a95d20e430d1a0d0396fc1b0527d6e066</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetPhysicalUIMappingCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a4c9589b28fb7332c00e9ef98ef55c89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetKeyswitchCountCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a98ef2b1dc12d11998a06eae2bf8467fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetKeyswitchInfoCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a70d051ae35337b0444bac06b65561027</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetAutomationStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a79bbf3350b5dffa6cca95dfd09e1c38b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetKnobModeCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a83f75293e28e11d27f32f5740feb866b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdopenHelpCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a747d6f9b9a90e80084e21018c21f2216</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdopenAboutBoxCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46adc2efd7b31ea8e73a8b3c98f59435469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetChannelContextInfosCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a73957dc0b8034f8f55dc0ad5e37f24cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetMidiControllerAssignmentCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a19f7469ee8384e94b962e3588106b01a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdgetXmlRepresentationStreamCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46afec60cafa5c31c26c63e39fff7781ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetActiveCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a11da6aa621784b650ffc431bb7e61562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessorSetStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a3fafa41f6907e2a0afe4330fa79efe07</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessorGetStateCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a8aaba1346adc001dc4b22c6e6473ec18</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdactivateBusCalledinWrongThread</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae16ab34219b4abc2f254f946006316a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetActiveCalledSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aade9ee606f9b1485aa22ee7f5e37ab60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIAttributeListInSetStateSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab097977874ae5e9bed9b65a775930054</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdRestartParamValuesChangedSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aeccfd4192fdc46a8bd097c8b959c6d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdRestartParamTitlesChangedSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0a58d11decd442d3211e0e1522761622</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdRestartNoteExpressionChangedSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab851a37c0cf95a3d3f877f28b2cc2461</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdRestartKeyswitchChangedSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a358fc8d97f26fa55f07cecbc62145f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIComponentHandler2Supported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab2994939d630dfd4081481ffd7b5d731</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIComponentHandler2SetDirtySupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5604b4224fc889037bd7d1c202515419</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIComponentHandler2RequestOpenEditorSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5b98172cce849afe514457278bc7288f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIComponentHandler3Supported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab44edf53109403e5d131bf50ff55eca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIComponentHandlerBusActivationSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a156c451382cadc1afb4f34f6cac35981</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIProgressSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aeccac95af4f90b8e1c75a232cc79fad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugInterfaceSupportSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a2d860595e720d7111f10a428c1c2b1e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugFrameonResizeViewSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1aefcbcf0463d7bf0f8f7b7161f7a747</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPrefetchableSupportSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa6e9ee7941dbfaa2697fb36147470c67</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdAudioPresentationLatencySamplesSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0f126be06bac7a5f43c0f3c32bd6768f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIProcessContextRequirementsSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad930eef435e7c1251e1bbf3a072b1aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessModeOfflineSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ada2386900b172fa9403dd8c7d6eb3817</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessModeRealtimeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a6b28e1f91be9a6079ee6a4d874e1c0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessModePrefetchSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af27ed1b0cdf7b4cc3095c7a5dc8a640a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextPlayingSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a68520d7f668a4261ccc4c65438a74173</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextRecordingSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a23f63ed55ecad92cb966b332c2def0a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextCycleActiveSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af33d93b9e051e5b7080765a406f7a037</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextSystemTimeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ad728ef3fc8631f49b0b235283b3db489</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextContTimeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0cdbc3e359813290e319b4eb9c5c703b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextTimeMusicSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab2d08d32ce0535d2c8a356d3e4bba666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextBarPositionSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a85f8edc9779ec16325e33111c2e45052</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextCycleSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1b2283d71b7ad4059a26d57ca72c27bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextTempoSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a426444fb84f79b9c6a1f91475f7824ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextTimeSigSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af09380bb9a9b6b4fb14e45a94479c5f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextChordSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a9d91a480296e3378e7235199aeb85f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextSmpteSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46affe18458d30a2a66c98826f47c435a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdProcessContextClockSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a6f02d992be8c806f62b9bbb60657a20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdCanProcessSampleSize32</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa7e14181470bfb902fd7b2d61576e6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdCanProcessSampleSize64</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a32e02c954b712c7597b893717c4e6676</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetTailSamples</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a921c506b1bcbba5d8bccf1dbe3536594</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetLatencySamples</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae0ee7a7b76b8da4e49438c17d6537883</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetBusArrangements</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a15b1fb7f49958076f321cdeb7befc917</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSetBusArrangements</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae046d7c37ee58daad22f1843b7a919ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetRoutingInfo</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a9409a0e3747cf4df1287cb09c5f76cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdActivateAuxBus</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a30d3957e2d258ad72fd2795658006619</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdParametersFlushSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ac5f8138d781ddfb3a79391690f174e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSilentFlagsSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0d6e5bf3a4de523c42bb71f5c31ff7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdSilentFlagsSCSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa26196d83bcafdaa6dae199297379046</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIEditController2Supported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a30c505ab3dd463ca785a89d69ba5d4c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdsetKnobModeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a432f67f6a32cca1342656ae2d0b9bb9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdopenHelpSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a52f6f15909bf474402add52e7d801149</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdopenAboutBoxSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a141a0217f49469de43d69a1fb30d2acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIMidiMappingSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a0e0c10ec27ae314ef6dafa6ded605ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdUnitSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a787c0136f46821baec45152c468407f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetUnitByBusSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa392ddebd5fded35801d16213835d80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdChannelContextSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a6658d3808b2305e38656d8156178dac2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdINoteExpressionControllerSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aeb5b2e4c0904288f6fdd62b96bbf40e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetNoteExpressionStringByValueSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1c12154d026d1b1cc8b08f6495bab69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdGetNoteExpressionValueByStringSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5cfcaea470100a606467bbf0e42aefe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdINoteExpressionPhysicalUIMappingSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa87306b213ff1ac232fc006e746bdda7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIKeyswitchControllerSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a3ce8600eb13dfcdd97d686c27d9890ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIMidiLearnSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46adf82c6e8f4e174dbcfc54f59afe50b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIMidiLearn_onLiveMIDIControllerInputSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1abe2730e8344db5e5243e84987edaba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIXmlRepresentationControllerSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1a7d888565f939d607393df7ac38f438</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIAutomationStateSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae9fc5c75cff407d888117c27e2656eb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIEditControllerHostEditingSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a372a76180c616d9934f058ca624f8be4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIEditControllerHostEditingMisused</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa64318f163741a2b46e6d6be3919ac39</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewonSizeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a936d56540180b5f1ab5c981b354375b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewcanResizeSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af9c366449111f37cd95482993a6e0dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewcheckSizeConstraintSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a3cbb98fef5b3c02d57922500bcbf8e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewsetFrameSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a147943e18caa0f6f5fd9f6123e590715</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewOnWheelCalled</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a7b19887d370482d5c4c2b0ebe1eac038</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewOnKeyDownSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5f0ec8778771e51399a1700e016b7f57</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewOnKeyUpSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1acac65302aa5192bcaa70d55f0596ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewOnFocusCalled</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46af126e9f9da5d03a320057ae84e44d141</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewsetContentScaleFactorSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a10780bd74e20d8bf0c31b100dbe7dde5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewmultipleAttachSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46afcc95c47f081b009269f1136bd6ece46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewCalledSync</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ac378b712a17479518fae523d789378c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewCalledBeforeOpen</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a91d973e15b52f7f4e7e90ec4bcccbed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewKeyCalledBeforeAttach</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46abbd3adebbfdea3a53d20c65db5adce51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewNotCalled</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ae60e595aa437c08884e7ece02c3d158d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewCalledAsync</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a4f95de0b10fb65dd04515513c5519538</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewattachedWithoutRemoved</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46ab86864ad824f7fe4f0ffbab542eaef13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIPlugViewremovedWithoutAttached</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a5fb9550c3dfb27797071bc17ef7adabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIParameterFinderSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a1ed1e56eea06bb5be4b31c77f3ca3060</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdIParameterFunctionNameSupported</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aa972d9a1b7865c1232278a3acde538f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLogIdInformLatencyChanged</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46aea5987edd85d670fe157a6bde424efb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumLogEvents</name>
      <anchorfile>logevents_8h.html</anchorfile>
      <anchor>afc84f29132b630b33d341d0769a66d46a017971e2dcae41d78c3e0892d77fa9ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>logscale.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/common/</path>
    <filename>logscale_8h</filename>
    <class kind="class">Steinberg::Vst::LogScale</class>
    <class kind="class">Steinberg::Vst::LogScaleParameter</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/validator/source/</path>
    <filename>main_8cpp</filename>
    <includes id="validator_8h" name="validator.h" local="yes" imported="no">validator.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>InitModule</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>a02cfb08432768bde2f63589cd3fb4a6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>DeinitModule</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>acfa434568d573f05a44fbc6dd35910ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>moduleHandle</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>ab302317af2233cef9ab2bd2a2d89b60f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>main.m</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/InterAppAudio/InterAppAudioExample/</path>
    <filename>main_8m</filename>
    <includes id="VSTInterAppAudioAppDelegate_8h" name="VSTInterAppAudioAppDelegate.h" local="yes" imported="yes">VSTInterAppAudioAppDelegate.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8m.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaAmbienceController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaAmbienceController_8cpp</filename>
    <includes id="mdaAmbienceController_8h" name="mdaAmbienceController.h" local="yes" imported="no">mdaAmbienceController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaAmbienceController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaAmbienceController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaAmbienceProcessor_8h" name="mdaAmbienceProcessor.h" local="yes" imported="no">mdaAmbienceProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::AmbienceController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaAmbienceProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaAmbienceProcessor_8cpp</filename>
    <includes id="mdaAmbienceProcessor_8h" name="mdaAmbienceProcessor.h" local="yes" imported="no">mdaAmbienceProcessor.h</includes>
    <includes id="mdaAmbienceController_8h" name="mdaAmbienceController.h" local="yes" imported="no">mdaAmbienceController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaAmbienceProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaAmbienceProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::AmbienceProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBandistoController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBandistoController_8cpp</filename>
    <includes id="mdaBandistoController_8h" name="mdaBandistoController.h" local="yes" imported="no">mdaBandistoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBandistoController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBandistoController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaBandistoProcessor_8h" name="mdaBandistoProcessor.h" local="yes" imported="no">mdaBandistoProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::BandistoController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBandistoProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBandistoProcessor_8cpp</filename>
    <includes id="mdaBandistoProcessor_8h" name="mdaBandistoProcessor.h" local="yes" imported="no">mdaBandistoProcessor.h</includes>
    <includes id="mdaBandistoController_8h" name="mdaBandistoController.h" local="yes" imported="no">mdaBandistoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBandistoProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBandistoProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::BandistoProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBaseController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBaseController_8cpp</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaParameter_8h" name="mdaParameter.h" local="yes" imported="no">mdaParameter.h</includes>
    <includes id="helpers_8h" name="helpers.h" local="yes" imported="no">helpers.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBaseController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBaseController_8h</filename>
    <includes id="mdaParameter_8h" name="mdaParameter.h" local="yes" imported="no">mdaParameter.h</includes>
    <class kind="class">Steinberg::Vst::mda::BaseController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBaseProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBaseProcessor_8cpp</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="helpers_8h" name="helpers.h" local="yes" imported="no">helpers.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>kSilenceThreshold</name>
      <anchorfile>mdaBaseProcessor_8cpp.html</anchorfile>
      <anchor>a6fe41a4a3dfe5045e3cbea2da1acba76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaBaseProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBaseProcessor_8h</filename>
    <class kind="class">Steinberg::Vst::mda::Processor</class>
    <class kind="class">Steinberg::Vst::mda::SampleAccurateBaseProcessor</class>
    <class kind="struct">Steinberg::Vst::mda::SynthData</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="typedef">
      <type>SampleAccurateBaseProcessor</type>
      <name>BaseProcessor</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1mda.html</anchorfile>
      <anchor>aa0936cf0a422e298f98238f76edfcc44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaBeatBoxController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBeatBoxController_8cpp</filename>
    <includes id="mdaBeatBoxController_8h" name="mdaBeatBoxController.h" local="yes" imported="no">mdaBeatBoxController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBeatBoxController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBeatBoxController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaBeatBoxProcessor_8h" name="mdaBeatBoxProcessor.h" local="yes" imported="no">mdaBeatBoxProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::BeatBoxController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBeatBoxProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBeatBoxProcessor_8cpp</filename>
    <includes id="mdaBeatBoxProcessor_8h" name="mdaBeatBoxProcessor.h" local="yes" imported="no">mdaBeatBoxProcessor.h</includes>
    <includes id="mdaBeatBoxController_8h" name="mdaBeatBoxController.h" local="yes" imported="no">mdaBeatBoxController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaBeatBoxProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaBeatBoxProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::BeatBoxProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaComboController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaComboController_8cpp</filename>
    <includes id="mdaComboController_8h" name="mdaComboController.h" local="yes" imported="no">mdaComboController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaComboController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaComboController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaComboProcessor_8h" name="mdaComboProcessor.h" local="yes" imported="no">mdaComboProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ComboController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaComboProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaComboProcessor_8cpp</filename>
    <includes id="mdaComboProcessor_8h" name="mdaComboProcessor.h" local="yes" imported="no">mdaComboProcessor.h</includes>
    <includes id="mdaComboController_8h" name="mdaComboController.h" local="yes" imported="no">mdaComboController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaComboProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaComboProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ComboProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDeEsserController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDeEsserController_8cpp</filename>
    <includes id="mdaDeEsserController_8h" name="mdaDeEsserController.h" local="yes" imported="no">mdaDeEsserController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDeEsserController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDeEsserController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDeEsserProcessor_8h" name="mdaDeEsserProcessor.h" local="yes" imported="no">mdaDeEsserProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DeEsserController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDeEsserProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDeEsserProcessor_8cpp</filename>
    <includes id="mdaDeEsserProcessor_8h" name="mdaDeEsserProcessor.h" local="yes" imported="no">mdaDeEsserProcessor.h</includes>
    <includes id="mdaDeEsserController_8h" name="mdaDeEsserController.h" local="yes" imported="no">mdaDeEsserController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDeEsserProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDeEsserProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DeEsserProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDegradeController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDegradeController_8cpp</filename>
    <includes id="mdaDegradeController_8h" name="mdaDegradeController.h" local="yes" imported="no">mdaDegradeController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDegradeController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDegradeController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDegradeProcessor_8h" name="mdaDegradeProcessor.h" local="yes" imported="no">mdaDegradeProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DegradeController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDegradeProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDegradeProcessor_8cpp</filename>
    <includes id="mdaDegradeProcessor_8h" name="mdaDegradeProcessor.h" local="yes" imported="no">mdaDegradeProcessor.h</includes>
    <includes id="mdaDegradeController_8h" name="mdaDegradeController.h" local="yes" imported="no">mdaDegradeController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDegradeProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDegradeProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DegradeProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDelayController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDelayController_8cpp</filename>
    <includes id="mdaDelayController_8h" name="mdaDelayController.h" local="yes" imported="no">mdaDelayController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDelayController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDelayController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDelayProcessor_8h" name="mdaDelayProcessor.h" local="yes" imported="no">mdaDelayProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DelayController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDelayProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDelayProcessor_8cpp</filename>
    <includes id="mdaDelayProcessor_8h" name="mdaDelayProcessor.h" local="yes" imported="no">mdaDelayProcessor.h</includes>
    <includes id="mdaDelayController_8h" name="mdaDelayController.h" local="yes" imported="no">mdaDelayController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDelayProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDelayProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DelayProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDetuneController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDetuneController_8cpp</filename>
    <includes id="mdaDetuneController_8h" name="mdaDetuneController.h" local="yes" imported="no">mdaDetuneController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDetuneController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDetuneController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDetuneProcessor_8h" name="mdaDetuneProcessor.h" local="yes" imported="no">mdaDetuneProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DetuneController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDetuneProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDetuneProcessor_8cpp</filename>
    <includes id="mdaDetuneProcessor_8h" name="mdaDetuneProcessor.h" local="yes" imported="no">mdaDetuneProcessor.h</includes>
    <includes id="mdaDetuneController_8h" name="mdaDetuneController.h" local="yes" imported="no">mdaDetuneController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BUFMAX</name>
      <anchorfile>mdaDetuneProcessor_8cpp.html</anchorfile>
      <anchor>aa893c2c75e0d3d0258e09fbd136ffaed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaDetuneProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDetuneProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DetuneProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDitherController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDitherController_8cpp</filename>
    <includes id="mdaDitherController_8h" name="mdaDitherController.h" local="yes" imported="no">mdaDitherController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDitherController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDitherController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDitherProcessor_8h" name="mdaDitherProcessor.h" local="yes" imported="no">mdaDitherProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DitherController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDitherProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDitherProcessor_8cpp</filename>
    <includes id="mdaDitherProcessor_8h" name="mdaDitherProcessor.h" local="yes" imported="no">mdaDitherProcessor.h</includes>
    <includes id="mdaDitherController_8h" name="mdaDitherController.h" local="yes" imported="no">mdaDitherController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDitherProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDitherProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DitherProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDubDelayController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDubDelayController_8cpp</filename>
    <includes id="mdaDubDelayController_8h" name="mdaDubDelayController.h" local="yes" imported="no">mdaDubDelayController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDubDelayController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDubDelayController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDubDelayProcessor_8h" name="mdaDubDelayProcessor.h" local="yes" imported="no">mdaDubDelayProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DubDelayController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDubDelayProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDubDelayProcessor_8cpp</filename>
    <includes id="mdaDubDelayProcessor_8h" name="mdaDubDelayProcessor.h" local="yes" imported="no">mdaDubDelayProcessor.h</includes>
    <includes id="mdaDubDelayController_8h" name="mdaDubDelayController.h" local="yes" imported="no">mdaDubDelayController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDubDelayProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDubDelayProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DubDelayProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDX10Controller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDX10Controller_8cpp</filename>
    <includes id="mdaDX10Controller_8h" name="mdaDX10Controller.h" local="yes" imported="no">mdaDX10Controller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDX10Controller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDX10Controller_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDX10Processor_8h" name="mdaDX10Processor.h" local="yes" imported="no">mdaDX10Processor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DX10Controller</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDX10Processor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDX10Processor_8cpp</filename>
    <includes id="mdaDX10Processor_8h" name="mdaDX10Processor.h" local="yes" imported="no">mdaDX10Processor.h</includes>
    <includes id="mdaDX10Controller_8h" name="mdaDX10Controller.h" local="yes" imported="no">mdaDX10Controller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NOUTS</name>
      <anchorfile>mdaDX10Processor_8cpp.html</anchorfile>
      <anchor>adc731418ab59a2a4f97cd39b10b3a7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SILENCE</name>
      <anchorfile>mdaDX10Processor_8cpp.html</anchorfile>
      <anchor>aac1866175a2578574fc07c16e566c4fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaDX10Processor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDX10Processor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DX10Processor</class>
    <class kind="struct">Steinberg::Vst::mda::DX10Processor::VOICE</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDynamicsController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDynamicsController_8cpp</filename>
    <includes id="mdaDynamicsController_8h" name="mdaDynamicsController.h" local="yes" imported="no">mdaDynamicsController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDynamicsController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDynamicsController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaDynamicsProcessor_8h" name="mdaDynamicsProcessor.h" local="yes" imported="no">mdaDynamicsProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DynamicsController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDynamicsProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDynamicsProcessor_8cpp</filename>
    <includes id="mdaDynamicsProcessor_8h" name="mdaDynamicsProcessor.h" local="yes" imported="no">mdaDynamicsProcessor.h</includes>
    <includes id="mdaDynamicsController_8h" name="mdaDynamicsController.h" local="yes" imported="no">mdaDynamicsController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaDynamicsProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaDynamicsProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::DynamicsProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaEPianoController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaEPianoController_8cpp</filename>
    <includes id="mdaEPianoController_8h" name="mdaEPianoController.h" local="yes" imported="no">mdaEPianoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaEPianoController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaEPianoController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaEPianoProcessor_8h" name="mdaEPianoProcessor.h" local="yes" imported="no">mdaEPianoProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::EPianoController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaEPianoData.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaEPianoData_8h</filename>
    <member kind="variable">
      <type>short</type>
      <name>epianoData</name>
      <anchorfile>mdaEPianoData_8h.html</anchorfile>
      <anchor>ab266be229d28fa6b6be56ab0b4e92de7</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaEPianoProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaEPianoProcessor_8cpp</filename>
    <includes id="mdaEPianoProcessor_8h" name="mdaEPianoProcessor.h" local="yes" imported="no">mdaEPianoProcessor.h</includes>
    <includes id="mdaEPianoController_8h" name="mdaEPianoController.h" local="yes" imported="no">mdaEPianoController.h</includes>
    <includes id="mdaEPianoData_8h" name="mdaEPianoData.h" local="yes" imported="no">mdaEPianoData.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NPARAMS</name>
      <anchorfile>mdaEPianoProcessor_8cpp.html</anchorfile>
      <anchor>ae468832efa6adf5e9a96cabd8f878b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SILENCE</name>
      <anchorfile>mdaEPianoProcessor_8cpp.html</anchorfile>
      <anchor>aac1866175a2578574fc07c16e566c4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>WAVELEN</name>
      <anchorfile>mdaEPianoProcessor_8cpp.html</anchorfile>
      <anchor>ac16f5b88e42015f1db52b238012154ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaEPianoProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaEPianoProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::EPianoProcessor</class>
    <class kind="struct">Steinberg::Vst::mda::EPianoProcessor::VOICE</class>
    <class kind="struct">Steinberg::Vst::mda::EPianoProcessor::KGRP</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdafactory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdafactory_8cpp</filename>
    <includes id="mdaAmbienceController_8h" name="mdaAmbienceController.h" local="yes" imported="no">mdaAmbienceController.h</includes>
    <includes id="mdaBandistoController_8h" name="mdaBandistoController.h" local="yes" imported="no">mdaBandistoController.h</includes>
    <includes id="mdaBeatBoxController_8h" name="mdaBeatBoxController.h" local="yes" imported="no">mdaBeatBoxController.h</includes>
    <includes id="mdaComboController_8h" name="mdaComboController.h" local="yes" imported="no">mdaComboController.h</includes>
    <includes id="mdaDeEsserController_8h" name="mdaDeEsserController.h" local="yes" imported="no">mdaDeEsserController.h</includes>
    <includes id="mdaDegradeController_8h" name="mdaDegradeController.h" local="yes" imported="no">mdaDegradeController.h</includes>
    <includes id="mdaDelayController_8h" name="mdaDelayController.h" local="yes" imported="no">mdaDelayController.h</includes>
    <includes id="mdaDetuneController_8h" name="mdaDetuneController.h" local="yes" imported="no">mdaDetuneController.h</includes>
    <includes id="mdaDitherController_8h" name="mdaDitherController.h" local="yes" imported="no">mdaDitherController.h</includes>
    <includes id="mdaDubDelayController_8h" name="mdaDubDelayController.h" local="yes" imported="no">mdaDubDelayController.h</includes>
    <includes id="mdaDX10Controller_8h" name="mdaDX10Controller.h" local="yes" imported="no">mdaDX10Controller.h</includes>
    <includes id="mdaDynamicsController_8h" name="mdaDynamicsController.h" local="yes" imported="no">mdaDynamicsController.h</includes>
    <includes id="mdaEPianoController_8h" name="mdaEPianoController.h" local="yes" imported="no">mdaEPianoController.h</includes>
    <includes id="mdaImageController_8h" name="mdaImageController.h" local="yes" imported="no">mdaImageController.h</includes>
    <includes id="mdaJX10Controller_8h" name="mdaJX10Controller.h" local="yes" imported="no">mdaJX10Controller.h</includes>
    <includes id="mdaLeslieController_8h" name="mdaLeslieController.h" local="yes" imported="no">mdaLeslieController.h</includes>
    <includes id="mdaLimiterController_8h" name="mdaLimiterController.h" local="yes" imported="no">mdaLimiterController.h</includes>
    <includes id="mdaLoudnessController_8h" name="mdaLoudnessController.h" local="yes" imported="no">mdaLoudnessController.h</includes>
    <includes id="mdaMultiBandController_8h" name="mdaMultiBandController.h" local="yes" imported="no">mdaMultiBandController.h</includes>
    <includes id="mdaOverdriveController_8h" name="mdaOverdriveController.h" local="yes" imported="no">mdaOverdriveController.h</includes>
    <includes id="mdaPianoController_8h" name="mdaPianoController.h" local="yes" imported="no">mdaPianoController.h</includes>
    <includes id="mdaRePsychoController_8h" name="mdaRePsychoController.h" local="yes" imported="no">mdaRePsychoController.h</includes>
    <includes id="mdaRezFilterController_8h" name="mdaRezFilterController.h" local="yes" imported="no">mdaRezFilterController.h</includes>
    <includes id="mdaRingModController_8h" name="mdaRingModController.h" local="yes" imported="no">mdaRingModController.h</includes>
    <includes id="mdaRoundPanController_8h" name="mdaRoundPanController.h" local="yes" imported="no">mdaRoundPanController.h</includes>
    <includes id="mdaShepardController_8h" name="mdaShepardController.h" local="yes" imported="no">mdaShepardController.h</includes>
    <includes id="mdaSplitterController_8h" name="mdaSplitterController.h" local="yes" imported="no">mdaSplitterController.h</includes>
    <includes id="mdaStereoController_8h" name="mdaStereoController.h" local="yes" imported="no">mdaStereoController.h</includes>
    <includes id="mdaSubSynthController_8h" name="mdaSubSynthController.h" local="yes" imported="no">mdaSubSynthController.h</includes>
    <includes id="mdaTalkBoxController_8h" name="mdaTalkBoxController.h" local="yes" imported="no">mdaTalkBoxController.h</includes>
    <includes id="mdaTestToneController_8h" name="mdaTestToneController.h" local="yes" imported="no">mdaTestToneController.h</includes>
    <includes id="mdaThruZeroController_8h" name="mdaThruZeroController.h" local="yes" imported="no">mdaThruZeroController.h</includes>
    <includes id="mdaTrackerController_8h" name="mdaTrackerController.h" local="yes" imported="no">mdaTrackerController.h</includes>
    <includes id="mdaSpecMeterController_8h" name="mdaSpecMeterController.h" local="yes" imported="no">mdaSpecMeterController.h</includes>
    <includes id="helpers_8h" name="helpers.h" local="yes" imported="no">helpers.h</includes>
    <includes id="mda-vst3_2source_2version_8h" name="mda-vst3/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>kVersionString</name>
      <anchorfile>mdafactory_8cpp.html</anchorfile>
      <anchor>a7a6b11a55e9b38681d4d7941f3cd28d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaImageController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaImageController_8cpp</filename>
    <includes id="mdaImageController_8h" name="mdaImageController.h" local="yes" imported="no">mdaImageController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaImageController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaImageController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaImageProcessor_8h" name="mdaImageProcessor.h" local="yes" imported="no">mdaImageProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ImageController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaImageProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaImageProcessor_8cpp</filename>
    <includes id="mdaImageProcessor_8h" name="mdaImageProcessor.h" local="yes" imported="no">mdaImageProcessor.h</includes>
    <includes id="mdaImageController_8h" name="mdaImageController.h" local="yes" imported="no">mdaImageController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaImageProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaImageProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ImageProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaJX10Controller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaJX10Controller_8cpp</filename>
    <includes id="mdaJX10Controller_8h" name="mdaJX10Controller.h" local="yes" imported="no">mdaJX10Controller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaJX10Controller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaJX10Controller_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaJX10Processor_8h" name="mdaJX10Processor.h" local="yes" imported="no">mdaJX10Processor.h</includes>
    <class kind="class">Steinberg::Vst::mda::JX10Controller</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaJX10Processor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaJX10Processor_8cpp</filename>
    <includes id="mdaJX10Processor_8h" name="mdaJX10Processor.h" local="yes" imported="no">mdaJX10Processor.h</includes>
    <includes id="mdaJX10Controller_8h" name="mdaJX10Controller.h" local="yes" imported="no">mdaJX10Controller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NPARAMS</name>
      <anchorfile>mdaJX10Processor_8cpp.html</anchorfile>
      <anchor>ae468832efa6adf5e9a96cabd8f878b47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SILENCE</name>
      <anchorfile>mdaJX10Processor_8cpp.html</anchorfile>
      <anchor>aac1866175a2578574fc07c16e566c4fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PI</name>
      <anchorfile>mdaJX10Processor_8cpp.html</anchorfile>
      <anchor>a598a3330b3c21701223ee0ca14316eca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWOPI</name>
      <anchorfile>mdaJX10Processor_8cpp.html</anchorfile>
      <anchor>a4912c64aec0c943b7985db6cb61ff83a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ANALOG</name>
      <anchorfile>mdaJX10Processor_8cpp.html</anchorfile>
      <anchor>ad42aa2404559d4a465d5d45e857f2881</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaJX10Processor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaJX10Processor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::JX10Processor</class>
    <class kind="struct">Steinberg::Vst::mda::JX10Processor::VOICE</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLeslieController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLeslieController_8cpp</filename>
    <includes id="mdaLeslieController_8h" name="mdaLeslieController.h" local="yes" imported="no">mdaLeslieController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLeslieController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLeslieController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaLeslieProcessor_8h" name="mdaLeslieProcessor.h" local="yes" imported="no">mdaLeslieProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LeslieController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLeslieProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLeslieProcessor_8cpp</filename>
    <includes id="mdaLeslieProcessor_8h" name="mdaLeslieProcessor.h" local="yes" imported="no">mdaLeslieProcessor.h</includes>
    <includes id="mdaLeslieController_8h" name="mdaLeslieController.h" local="yes" imported="no">mdaLeslieController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLeslieProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLeslieProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LeslieProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLimiterController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLimiterController_8cpp</filename>
    <includes id="mdaLimiterController_8h" name="mdaLimiterController.h" local="yes" imported="no">mdaLimiterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLimiterController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLimiterController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaLimiterProcessor_8h" name="mdaLimiterProcessor.h" local="yes" imported="no">mdaLimiterProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LimiterController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLimiterProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLimiterProcessor_8cpp</filename>
    <includes id="mdaLimiterProcessor_8h" name="mdaLimiterProcessor.h" local="yes" imported="no">mdaLimiterProcessor.h</includes>
    <includes id="mdaLimiterController_8h" name="mdaLimiterController.h" local="yes" imported="no">mdaLimiterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLimiterProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLimiterProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LimiterProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLoudnessController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLoudnessController_8cpp</filename>
    <includes id="mdaLoudnessController_8h" name="mdaLoudnessController.h" local="yes" imported="no">mdaLoudnessController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLoudnessController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLoudnessController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaLoudnessProcessor_8h" name="mdaLoudnessProcessor.h" local="yes" imported="no">mdaLoudnessProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LoudnessController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLoudnessProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLoudnessProcessor_8cpp</filename>
    <includes id="mdaLoudnessProcessor_8h" name="mdaLoudnessProcessor.h" local="yes" imported="no">mdaLoudnessProcessor.h</includes>
    <includes id="mdaLoudnessController_8h" name="mdaLoudnessController.h" local="yes" imported="no">mdaLoudnessController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaLoudnessProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaLoudnessProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::LoudnessProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaMultiBandController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaMultiBandController_8cpp</filename>
    <includes id="mdaMultiBandController_8h" name="mdaMultiBandController.h" local="yes" imported="no">mdaMultiBandController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaMultiBandController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaMultiBandController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaMultiBandProcessor_8h" name="mdaMultiBandProcessor.h" local="yes" imported="no">mdaMultiBandProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::MultiBandController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaMultiBandProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaMultiBandProcessor_8cpp</filename>
    <includes id="mdaMultiBandProcessor_8h" name="mdaMultiBandProcessor.h" local="yes" imported="no">mdaMultiBandProcessor.h</includes>
    <includes id="mdaMultiBandController_8h" name="mdaMultiBandController.h" local="yes" imported="no">mdaMultiBandController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaMultiBandProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaMultiBandProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::MultiBandProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaOverdriveController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaOverdriveController_8cpp</filename>
    <includes id="mdaOverdriveController_8h" name="mdaOverdriveController.h" local="yes" imported="no">mdaOverdriveController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaOverdriveController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaOverdriveController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaOverdriveProcessor_8h" name="mdaOverdriveProcessor.h" local="yes" imported="no">mdaOverdriveProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::OverdriveController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaOverdriveProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaOverdriveProcessor_8cpp</filename>
    <includes id="mdaOverdriveProcessor_8h" name="mdaOverdriveProcessor.h" local="yes" imported="no">mdaOverdriveProcessor.h</includes>
    <includes id="mdaOverdriveController_8h" name="mdaOverdriveController.h" local="yes" imported="no">mdaOverdriveController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaOverdriveProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaOverdriveProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::OverdriveProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaParameter.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaParameter_8cpp</filename>
    <includes id="mdaParameter_8h" name="mdaParameter.h" local="yes" imported="no">mdaParameter.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaParameter.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaParameter_8h</filename>
    <class kind="class">Steinberg::Vst::mda::BaseParameter</class>
    <class kind="class">Steinberg::Vst::mda::IndexedParameter</class>
    <class kind="class">Steinberg::Vst::mda::ScaledParameter</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaPianoController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaPianoController_8cpp</filename>
    <includes id="mdaPianoController_8h" name="mdaPianoController.h" local="yes" imported="no">mdaPianoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaPianoController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaPianoController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaPianoProcessor_8h" name="mdaPianoProcessor.h" local="yes" imported="no">mdaPianoProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::PianoController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaPianoData.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaPianoData_8h</filename>
    <member kind="variable">
      <type>short</type>
      <name>pianoData</name>
      <anchorfile>mdaPianoData_8h.html</anchorfile>
      <anchor>a95bc615d5afb12081d11c5548fbca956</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaPianoProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaPianoProcessor_8cpp</filename>
    <includes id="mdaPianoProcessor_8h" name="mdaPianoProcessor.h" local="yes" imported="no">mdaPianoProcessor.h</includes>
    <includes id="mdaPianoController_8h" name="mdaPianoController.h" local="yes" imported="no">mdaPianoController.h</includes>
    <includes id="mdaPianoData_8h" name="mdaPianoData.h" local="yes" imported="no">mdaPianoData.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SILENCE</name>
      <anchorfile>mdaPianoProcessor_8cpp.html</anchorfile>
      <anchor>aac1866175a2578574fc07c16e566c4fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaPianoProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaPianoProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::PianoProcessor</class>
    <class kind="struct">Steinberg::Vst::mda::PianoProcessor::VOICE</class>
    <class kind="struct">Steinberg::Vst::mda::PianoProcessor::KGRP</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRePsychoController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRePsychoController_8cpp</filename>
    <includes id="mdaRePsychoController_8h" name="mdaRePsychoController.h" local="yes" imported="no">mdaRePsychoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRePsychoController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRePsychoController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaRePsychoProcessor_8h" name="mdaRePsychoProcessor.h" local="yes" imported="no">mdaRePsychoProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RePsychoController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRePsychoProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRePsychoProcessor_8cpp</filename>
    <includes id="mdaRePsychoProcessor_8h" name="mdaRePsychoProcessor.h" local="yes" imported="no">mdaRePsychoProcessor.h</includes>
    <includes id="mdaRePsychoController_8h" name="mdaRePsychoController.h" local="yes" imported="no">mdaRePsychoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRePsychoProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRePsychoProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RePsychoProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRezFilterController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRezFilterController_8cpp</filename>
    <includes id="mdaRezFilterController_8h" name="mdaRezFilterController.h" local="yes" imported="no">mdaRezFilterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRezFilterController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRezFilterController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaRezFilterProcessor_8h" name="mdaRezFilterProcessor.h" local="yes" imported="no">mdaRezFilterProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RezFilterController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRezFilterProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRezFilterProcessor_8cpp</filename>
    <includes id="mdaRezFilterProcessor_8h" name="mdaRezFilterProcessor.h" local="yes" imported="no">mdaRezFilterProcessor.h</includes>
    <includes id="mdaRezFilterController_8h" name="mdaRezFilterController.h" local="yes" imported="no">mdaRezFilterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRezFilterProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRezFilterProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RezFilterProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRingModController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRingModController_8cpp</filename>
    <includes id="mdaRingModController_8h" name="mdaRingModController.h" local="yes" imported="no">mdaRingModController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRingModController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRingModController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaRingModProcessor_8h" name="mdaRingModProcessor.h" local="yes" imported="no">mdaRingModProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RingModController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRingModProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRingModProcessor_8cpp</filename>
    <includes id="mdaRingModProcessor_8h" name="mdaRingModProcessor.h" local="yes" imported="no">mdaRingModProcessor.h</includes>
    <includes id="mdaRingModController_8h" name="mdaRingModController.h" local="yes" imported="no">mdaRingModController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRingModProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRingModProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RingModProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRoundPanController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRoundPanController_8cpp</filename>
    <includes id="mdaRoundPanController_8h" name="mdaRoundPanController.h" local="yes" imported="no">mdaRoundPanController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRoundPanController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRoundPanController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaRoundPanProcessor_8h" name="mdaRoundPanProcessor.h" local="yes" imported="no">mdaRoundPanProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RoundPanController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRoundPanProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRoundPanProcessor_8cpp</filename>
    <includes id="mdaRoundPanProcessor_8h" name="mdaRoundPanProcessor.h" local="yes" imported="no">mdaRoundPanProcessor.h</includes>
    <includes id="mdaRoundPanController_8h" name="mdaRoundPanController.h" local="yes" imported="no">mdaRoundPanController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaRoundPanProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaRoundPanProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::RoundPanProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaShepardController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaShepardController_8cpp</filename>
    <includes id="mdaShepardController_8h" name="mdaShepardController.h" local="yes" imported="no">mdaShepardController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaShepardController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaShepardController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaShepardProcessor_8h" name="mdaShepardProcessor.h" local="yes" imported="no">mdaShepardProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ShepardController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaShepardProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaShepardProcessor_8cpp</filename>
    <includes id="mdaShepardProcessor_8h" name="mdaShepardProcessor.h" local="yes" imported="no">mdaShepardProcessor.h</includes>
    <includes id="mdaShepardController_8h" name="mdaShepardController.h" local="yes" imported="no">mdaShepardController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaShepardProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaShepardProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ShepardProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSpecMeterController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSpecMeterController_8cpp</filename>
    <includes id="mdaSpecMeterController_8h" name="mdaSpecMeterController.h" local="yes" imported="no">mdaSpecMeterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSpecMeterController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSpecMeterController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaSpecMeterProcessor_8h" name="mdaSpecMeterProcessor.h" local="yes" imported="no">mdaSpecMeterProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SpecMeterController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSpecMeterProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSpecMeterProcessor_8cpp</filename>
    <includes id="mdaSpecMeterProcessor_8h" name="mdaSpecMeterProcessor.h" local="yes" imported="no">mdaSpecMeterProcessor.h</includes>
    <includes id="mdaSpecMeterController_8h" name="mdaSpecMeterController.h" local="yes" imported="no">mdaSpecMeterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>SILENCE</name>
      <anchorfile>mdaSpecMeterProcessor_8cpp.html</anchorfile>
      <anchor>aac1866175a2578574fc07c16e566c4fc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaSpecMeterProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSpecMeterProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SpecMeterProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSplitterController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSplitterController_8cpp</filename>
    <includes id="mdaSplitterController_8h" name="mdaSplitterController.h" local="yes" imported="no">mdaSplitterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSplitterController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSplitterController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaSplitterProcessor_8h" name="mdaSplitterProcessor.h" local="yes" imported="no">mdaSplitterProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SplitterController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSplitterProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSplitterProcessor_8cpp</filename>
    <includes id="mdaSplitterProcessor_8h" name="mdaSplitterProcessor.h" local="yes" imported="no">mdaSplitterProcessor.h</includes>
    <includes id="mdaSplitterController_8h" name="mdaSplitterController.h" local="yes" imported="no">mdaSplitterController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSplitterProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSplitterProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SplitterProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaStereoController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaStereoController_8cpp</filename>
    <includes id="mdaStereoController_8h" name="mdaStereoController.h" local="yes" imported="no">mdaStereoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaStereoController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaStereoController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaStereoProcessor_8h" name="mdaStereoProcessor.h" local="yes" imported="no">mdaStereoProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::StereoController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaStereoProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaStereoProcessor_8cpp</filename>
    <includes id="mdaStereoProcessor_8h" name="mdaStereoProcessor.h" local="yes" imported="no">mdaStereoProcessor.h</includes>
    <includes id="mdaStereoController_8h" name="mdaStereoController.h" local="yes" imported="no">mdaStereoController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaStereoProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaStereoProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::StereoProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSubSynthController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSubSynthController_8cpp</filename>
    <includes id="mdaSubSynthController_8h" name="mdaSubSynthController.h" local="yes" imported="no">mdaSubSynthController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSubSynthController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSubSynthController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaSubSynthProcessor_8h" name="mdaSubSynthProcessor.h" local="yes" imported="no">mdaSubSynthProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SubSynthController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSubSynthProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSubSynthProcessor_8cpp</filename>
    <includes id="mdaSubSynthProcessor_8h" name="mdaSubSynthProcessor.h" local="yes" imported="no">mdaSubSynthProcessor.h</includes>
    <includes id="mdaSubSynthController_8h" name="mdaSubSynthController.h" local="yes" imported="no">mdaSubSynthController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaSubSynthProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaSubSynthProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::SubSynthProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTalkBoxController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTalkBoxController_8cpp</filename>
    <includes id="mdaTalkBoxController_8h" name="mdaTalkBoxController.h" local="yes" imported="no">mdaTalkBoxController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTalkBoxController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTalkBoxController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaTalkBoxProcessor_8h" name="mdaTalkBoxProcessor.h" local="yes" imported="no">mdaTalkBoxProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TalkBoxController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTalkBoxProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTalkBoxProcessor_8cpp</filename>
    <includes id="mdaTalkBoxProcessor_8h" name="mdaTalkBoxProcessor.h" local="yes" imported="no">mdaTalkBoxProcessor.h</includes>
    <includes id="mdaTalkBoxController_8h" name="mdaTalkBoxController.h" local="yes" imported="no">mdaTalkBoxController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BUF_MAX</name>
      <anchorfile>mdaTalkBoxProcessor_8cpp.html</anchorfile>
      <anchor>abf940742e1b38f8100a344f9275d4086</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ORD_MAX</name>
      <anchorfile>mdaTalkBoxProcessor_8cpp.html</anchorfile>
      <anchor>ac263b7a2859108c07ccce4ea3afc3ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWO_PI</name>
      <anchorfile>mdaTalkBoxProcessor_8cpp.html</anchorfile>
      <anchor>a3b947f4b635461030ff2d87833e5049e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaTalkBoxProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTalkBoxProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TalkBoxProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTestToneController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTestToneController_8cpp</filename>
    <includes id="mdaTestToneController_8h" name="mdaTestToneController.h" local="yes" imported="no">mdaTestToneController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTestToneController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTestToneController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaTestToneProcessor_8h" name="mdaTestToneProcessor.h" local="yes" imported="no">mdaTestToneProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TestToneController</class>
    <class kind="class">Steinberg::Vst::mda::ProxyParameter</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTestToneProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTestToneProcessor_8cpp</filename>
    <includes id="mdaTestToneProcessor_8h" name="mdaTestToneProcessor.h" local="yes" imported="no">mdaTestToneProcessor.h</includes>
    <includes id="mdaTestToneController_8h" name="mdaTestToneController.h" local="yes" imported="no">mdaTestToneController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTestToneProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTestToneProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TestToneProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="enumeration">
      <type></type>
      <name>TestToneParam</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1mda.html</anchorfile>
      <anchor>ad4a12cdd49d69dab3151c2972b5e76a4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a650be61892bf690026089544abbd9d26">Mode</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4aa0db49ba470c1c9ae2128c3470339153">Level</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a781dc97dc62331eec3ea9ec4373a3ca8">Channel</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4ae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4afe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a8e9014ddfce21beb1b3cd7da888cbdea">Sweep</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a778bbb350586657cc3127ef666a75618">Thru</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a69fc24f6dd1ad5005df611acf4229ace">ZerodB</enumvalue>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaThruZeroController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaThruZeroController_8cpp</filename>
    <includes id="mdaThruZeroController_8h" name="mdaThruZeroController.h" local="yes" imported="no">mdaThruZeroController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaThruZeroController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaThruZeroController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaThruZeroProcessor_8h" name="mdaThruZeroProcessor.h" local="yes" imported="no">mdaThruZeroProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ThruZeroController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaThruZeroProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaThruZeroProcessor_8cpp</filename>
    <includes id="mdaThruZeroProcessor_8h" name="mdaThruZeroProcessor.h" local="yes" imported="no">mdaThruZeroProcessor.h</includes>
    <includes id="mdaThruZeroController_8h" name="mdaThruZeroController.h" local="yes" imported="no">mdaThruZeroController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BUFMAX</name>
      <anchorfile>mdaThruZeroProcessor_8cpp.html</anchorfile>
      <anchor>aa893c2c75e0d3d0258e09fbd136ffaed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mdaThruZeroProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaThruZeroProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::ThruZeroProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTrackerController.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTrackerController_8cpp</filename>
    <includes id="mdaTrackerController_8h" name="mdaTrackerController.h" local="yes" imported="no">mdaTrackerController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTrackerController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTrackerController_8h</filename>
    <includes id="mdaBaseController_8h" name="mdaBaseController.h" local="yes" imported="no">mdaBaseController.h</includes>
    <includes id="mdaTrackerProcessor_8h" name="mdaTrackerProcessor.h" local="yes" imported="no">mdaTrackerProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TrackerController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTrackerProcessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTrackerProcessor_8cpp</filename>
    <includes id="mdaTrackerProcessor_8h" name="mdaTrackerProcessor.h" local="yes" imported="no">mdaTrackerProcessor.h</includes>
    <includes id="mdaTrackerController_8h" name="mdaTrackerController.h" local="yes" imported="no">mdaTrackerController.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>mdaTrackerProcessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mdaTrackerProcessor_8h</filename>
    <includes id="mdaBaseProcessor_8h" name="mdaBaseProcessor.h" local="yes" imported="no">mdaBaseProcessor.h</includes>
    <class kind="class">Steinberg::Vst::mda::TrackerProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_controller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__controller_8cpp</filename>
    <includes id="note__expression__synth__controller_8h" name="note_expression_synth_controller.h" local="yes" imported="no">note_expression_synth_controller.h</includes>
    <includes id="note__expression__synth__voice_8h" name="note_expression_synth_voice.h" local="yes" imported="no">note_expression_synth_voice.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_controller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__controller_8h</filename>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Controller</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MAX_VOICES</name>
      <anchorfile>note__expression__synth__controller_8h.html</anchorfile>
      <anchor>aca618e8fa76e4f9eaf21bef1d1ddccd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX_RELEASE_TIME_SEC</name>
      <anchorfile>note__expression__synth__controller_8h.html</anchorfile>
      <anchor>a55d209b7b8449c2dde8d7c4545eddd64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_FILTER_TYPE</name>
      <anchorfile>note__expression__synth__controller_8h.html</anchorfile>
      <anchor>a3e41ba21c7275da72ab1d028c2ae6c3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_TUNING_RANGE</name>
      <anchorfile>note__expression__synth__controller_8h.html</anchorfile>
      <anchor>a175afda9e102dad81527e8286041df73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamReleaseTime</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a91f1716d5c6095299340b475b63dce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamNoiseVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57aaa0d2fa6e5ca05209a80bcd914c4af06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSinusVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a412ff72345b594894000c8f47b7f1921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTriangleVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a1fd60c9fd3b89595fd4fac5452a9eab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSinusDetune</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a36f04f1c4ad888ed7950c98cadc0f5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamBypassSNA</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a28e3fcf7199688b7cb545bc12d809b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTriangleSlop</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ac3653590a877c6bdf3792f59be40eb90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterType</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57aa1561f024a54fea5cbe44e301597ce49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterFreq</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a77d924fdebf79683bacdc950e8d97927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterQ</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a6f57b4500838eed6d28cb3d0a18c2eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamMasterVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a305960e8a0a7efe8a230c54b0fae7241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamMasterTuning</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a64027d24fafda77fee5484965c2a1f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamVelToLevel</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ad33a80bac508a5fbe271f14a94203608</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterFreqModDepth</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57af6905f57b2a332b3be3f375a352f497f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTuningRange</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a90c528610d766ac690f4bdc610b54263</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamActiveVoices</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ac1b7756581e9cdd3f3bdf949884f4eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSquareVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a763d2b0b998e0befac498a6f85fb4586</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumGlobalParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a5e08b56cf242bca747e71a1db6d3e44d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_processor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__processor_8cpp</filename>
    <includes id="note__expression__synth__processor_8h" name="note_expression_synth_processor.h" local="yes" imported="no">note_expression_synth_processor.h</includes>
    <includes id="voiceprocessor_8h" name="voiceprocessor.h" local="yes" imported="no">../../common/voiceprocessor.h</includes>
    <includes id="note__expression__synth__controller_8h" name="note_expression_synth_controller.h" local="yes" imported="no">note_expression_synth_controller.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_processor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__processor_8h</filename>
    <includes id="note__expression__synth__voice_8h" name="note_expression_synth_voice.h" local="yes" imported="no">note_expression_synth_voice.h</includes>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Processor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_ui.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__ui_8cpp</filename>
    <includes id="note__expression__synth__ui_8h" name="note_expression_synth_ui.h" local="yes" imported="no">note_expression_synth_ui.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
    <member kind="enumvalue">
      <name>kParamMIDILearn</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a385c44f6fb256e5716a2302a5b940388af5404385ef1048d1e74993a409b6f030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamEnableMPE</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a385c44f6fb256e5716a2302a5b940388a529b59e28a1ca482d2acdd7e5a098d7b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_ui.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__ui_8h</filename>
    <includes id="note__expression__synth__controller_8h" name="note_expression_synth_controller.h" local="yes" imported="no">note_expression_synth_controller.h</includes>
    <includes id="note__expression__synth__processor_8h" name="note_expression_synth_processor.h" local="yes" imported="no">note_expression_synth_processor.h</includes>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::ControllerWithUI</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::ProcessorWithUIController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_voice.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__voice_8cpp</filename>
    <includes id="note__expression__synth__voice_8h" name="note_expression_synth_voice.h" local="yes" imported="no">note_expression_synth_voice.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_synth_voice.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth__voice_8h</filename>
    <includes id="voicebase_8h" name="voicebase.h" local="yes" imported="no">../../common/voicebase.h</includes>
    <includes id="logscale_8h" name="logscale.h" local="yes" imported="no">../../common/logscale.h</includes>
    <includes id="brownnoise_8h" name="brownnoise.h" local="yes" imported="no">brownnoise.h</includes>
    <includes id="filter_8h" name="filter.h" local="yes" imported="no">filter.h</includes>
    <includes id="note__expression__synth__controller_8h" name="note_expression_synth_controller.h" local="yes" imported="no">note_expression_synth_controller.h</includes>
    <class kind="struct">Steinberg::Vst::NoteExpressionSynth::GlobalParameterState</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::VoiceStatics</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Voice</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
    <member kind="define">
      <type>#define</type>
      <name>M_PI_MUL_2</name>
      <anchorfile>note__expression__synth__voice_8h.html</anchorfile>
      <anchor>a2b12f538abaa78f3020c16a431d4eeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VoiceParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kVolumeMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da5e10b316568bc305dce5048b0b4aa179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTuningMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daef4d8aa59cba7c34e5d7cd6844caa877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPanningLeft</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da0ac26f0bf0461b55b596412ebb5c25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPanningRight</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da28142103b5ea374bc2dfada4f38f43cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNoiseVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da912bfe48653cc16464d18085c3755f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterFrequencyMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da122461f98d458fb93eae02df5e8337a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterQMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dab46457a150a5aa8387470b45e110689d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dac27d14ab31c50dc10de9c0957203b738</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da41892a7e572e701bbb31e27d7882b939</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterType</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daecbdbeaa9511062f941714bbf20622ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleSlope</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daa1c0099aaa84b41e977bdbd88193d73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusDetune</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dace5a49d9700610738ba0da1b54f4df8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kReleaseTimeMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daac6a071b53c40d42d7d1a0a57a7253dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSquareVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daf461c3668475e9f0359286d19ca24e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da1dfc7e7be1ba07eb4144e11e6ffa3d84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_touch_controller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__touch__controller_8cpp</filename>
    <includes id="note__touch__controller_8h" name="note_touch_controller.h" local="yes" imported="no">note_touch_controller.h</includes>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>note_touch_controller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__touch__controller_8h</filename>
    <class kind="class">VSTGUI::NoteTouchController</class>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>parameterchangescheck.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>parameterchangescheck_8cpp</filename>
    <includes id="parameterchangescheck_8h" name="parameterchangescheck.h" local="yes" imported="no">parameterchangescheck.h</includes>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>parameterchangescheck.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>parameterchangescheck_8h</filename>
    <class kind="class">ParameterChangesCheck</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>pitchnames.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnames_8cpp</filename>
    <includes id="pitchnames_8h" name="pitchnames.h" local="yes" imported="no">pitchnames.h</includes>
    <includes id="pitchnamesdatabrowsersource_8h" name="pitchnamesdatabrowsersource.h" local="yes" imported="no">pitchnamesdatabrowsersource.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>MULTI_CHANNEL_SCENARIO</name>
      <anchorfile>pitchnames_8cpp.html</anchorfile>
      <anchor>ac4ec04fa9828f2cf8f886a8dafb8e482</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pitchnames.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnames_8h</filename>
    <class kind="class">Steinberg::Vst::PitchNamesController</class>
    <class kind="class">Steinberg::Vst::PitchNamesProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>pitchnamesdatabrowsersource.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnamesdatabrowsersource_8cpp</filename>
    <includes id="pitchnamesdatabrowsersource_8h" name="pitchnamesdatabrowsersource.h" local="yes" imported="no">pitchnamesdatabrowsersource.h</includes>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>pitchnamesdatabrowsersource.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnamesdatabrowsersource_8h</filename>
    <class kind="class">VSTGUI::PitchNamesDataBrowserSource</class>
    <namespace>VSTGUI</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plug.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plug_8cpp</filename>
    <includes id="channelcontext_2source_2plug_8h" name="channelcontext/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="channelcontext_2source_2plugparamids_8h" name="channelcontext/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <includes id="channelcontext_2source_2plugcids_8h" name="channelcontext/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plug.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plug_8cpp</filename>
    <includes id="legacymidiccout_2source_2plug_8h" name="legacymidiccout/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="legacymidiccout_2source_2plugcids_8h" name="legacymidiccout/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="legacymidiccout_2source_2plugparamids_8h" name="legacymidiccout/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plug.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plug_8cpp</filename>
    <includes id="note__expression__text_2source_2plug_8h" name="note_expression_text/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="note__expression__text_2source_2plugparamids_8h" name="note_expression_text/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <includes id="note__expression__text_2source_2plugcids_8h" name="note_expression_text/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plug.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plug_8cpp</filename>
    <includes id="prefetchablesupport_2source_2plug_8h" name="prefetchablesupport/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="prefetchablesupport_2source_2plugparamids_8h" name="prefetchablesupport/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <includes id="prefetchablesupport_2source_2plugcids_8h" name="prefetchablesupport/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>programchange/source/plug.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plug_8cpp</filename>
    <includes id="programchange_2source_2plug_8h" name="programchange/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="programchange_2source_2plugparamids_8h" name="programchange/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <includes id="programchange_2source_2plugcids_8h" name="programchange/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plug.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plug_8h</filename>
    <class kind="class">Steinberg::Vst::Plug</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plug.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plug_8h</filename>
    <class kind="class">Steinberg::Vst::LegacyMIDICCOut::Plug</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plug.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plug_8h</filename>
    <class kind="class">Steinberg::Vst::Plug</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plug.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plug_8h</filename>
    <class kind="class">Steinberg::Vst::Plug</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>programchange/source/plug.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plug_8h</filename>
    <class kind="class">Steinberg::Vst::Plug</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plugcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plugcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plugcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plugcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plugcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plugcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plugcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plugcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>programchange/source/plugcids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plugcids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plugcontroller_8cpp</filename>
    <includes id="channelcontext_2source_2plugcontroller_8h" name="channelcontext/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="channelcontext_2source_2plugparamids_8h" name="channelcontext/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plugcontroller_8cpp</filename>
    <includes id="legacymidiccout_2source_2plugcontroller_8h" name="legacymidiccout/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="legacymidiccout_2source_2plugparamids_8h" name="legacymidiccout/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plugcontroller_8cpp</filename>
    <includes id="note__expression__text_2source_2plugcontroller_8h" name="note_expression_text/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="note__expression__text_2source_2plugparamids_8h" name="note_expression_text/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>panner/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/panner/source/</path>
    <filename>panner_2source_2plugcontroller_8cpp</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Panner</namespace>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plugcontroller_8cpp</filename>
    <includes id="prefetchablesupport_2source_2plugcontroller_8h" name="prefetchablesupport/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="prefetchablesupport_2source_2plugparamids_8h" name="prefetchablesupport/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>programchange/source/plugcontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plugcontroller_8cpp</filename>
    <includes id="programchange_2source_2plugcontroller_8h" name="programchange/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="programchange_2source_2plugparamids_8h" name="programchange/source/plugparamids.h" local="yes" imported="no">plugparamids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plugcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plugcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::PlugController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plugcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plugcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::LegacyMIDICCOut::PlugController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plugcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plugcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::PlugController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plugcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plugcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::PlugController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>programchange/source/plugcontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plugcontroller_8h</filename>
    <class kind="class">Steinberg::Vst::PlugController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plugentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plugentry_8cpp</filename>
    <includes id="channelcontext_2source_2plug_8h" name="channelcontext/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="channelcontext_2source_2plugcontroller_8h" name="channelcontext/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="channelcontext_2source_2plugcids_8h" name="channelcontext/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="channelcontext_2source_2version_8h" name="channelcontext/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BEGIN_FACTORY_DEF</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a24853d5c5a712fdd6c85d936722c0de1</anchor>
      <arglist>(&quot;Steinberg Media Technologies&quot;, &quot;http://www.steinberg.net&quot;, &quot;mailto:info@steinberg.de&quot;) DEF_CLASS2(INLINE_UID_FROM_FUID(PlugProcessorUID)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kVstAudioEffectClass</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a7668929ac981fa3b7c508e7578a3e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Channel</type>
      <name>Context</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>acafd164691a959e204ad34d63e0c4266</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Channel Spatial Fx Up Downmix</type>
      <name>Instrument</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a22ccdd26647e8146eeb5a3cf4d6c251e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Channel Spatial Fx Up Downmix</type>
      <name>kVstVersionString</name>
      <anchorfile>channelcontext_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a8e474a03994aa5c0ee4068ec2b3b7217</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plugentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plugentry_8cpp</filename>
    <includes id="legacymidiccout_2source_2plug_8h" name="legacymidiccout/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="legacymidiccout_2source_2plugcontroller_8h" name="legacymidiccout/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="legacymidiccout_2source_2plugcids_8h" name="legacymidiccout/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="legacymidiccout_2source_2version_8h" name="legacymidiccout/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>legacymidiccout_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plugentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plugentry_8cpp</filename>
    <includes id="note__expression__text_2source_2plug_8h" name="note_expression_text/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="note__expression__text_2source_2plugcontroller_8h" name="note_expression_text/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="note__expression__text_2source_2plugcids_8h" name="note_expression_text/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="note__expression__text_2source_2version_8h" name="note_expression_text/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>note__expression__text_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BEGIN_FACTORY_DEF</name>
      <anchorfile>note__expression__text_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a24853d5c5a712fdd6c85d936722c0de1</anchor>
      <arglist>(&quot;Steinberg Media Technologies&quot;, &quot;http://www.steinberg.net&quot;, &quot;mailto:info@steinberg.de&quot;) DEF_CLASS2(INLINE_UID_FROM_FUID(PlugProcessorUID)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kVstAudioEffectClass</name>
      <anchorfile>note__expression__text_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a7668929ac981fa3b7c508e7578a3e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Note Expression</type>
      <name>Text</name>
      <anchorfile>note__expression__text_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a53ac779212edf501532da8751b27572c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Note Expression</type>
      <name>kVstVersionString</name>
      <anchorfile>note__expression__text_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>af95bfaaff460967d112f7e5db4232ea2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plugentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plugentry_8cpp</filename>
    <includes id="prefetchablesupport_2source_2plug_8h" name="prefetchablesupport/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="prefetchablesupport_2source_2plugcontroller_8h" name="prefetchablesupport/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="prefetchablesupport_2source_2plugcids_8h" name="prefetchablesupport/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="prefetchablesupport_2source_2version_8h" name="prefetchablesupport/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BEGIN_FACTORY_DEF</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a24853d5c5a712fdd6c85d936722c0de1</anchor>
      <arglist>(&quot;Steinberg Media Technologies&quot;, &quot;http://www.steinberg.net&quot;, &quot;mailto:info@steinberg.de&quot;) DEF_CLASS2(INLINE_UID_FROM_FUID(PlugProcessorUID)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kVstAudioEffectClass</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a7668929ac981fa3b7c508e7578a3e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Prefetchable</type>
      <name>Support</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a5c7b70fbc61180aac25387a5eb31ddd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Prefetchable</type>
      <name>Fx</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a0b0378024a341f5bb57b2e33ecdd08f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Prefetchable</type>
      <name>kVstVersionString</name>
      <anchorfile>prefetchablesupport_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a29707ed5621830ba9ca420b63a42b48d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>programchange/source/plugentry.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plugentry_8cpp</filename>
    <includes id="programchange_2source_2plug_8h" name="programchange/source/plug.h" local="yes" imported="no">plug.h</includes>
    <includes id="programchange_2source_2plugcontroller_8h" name="programchange/source/plugcontroller.h" local="yes" imported="no">plugcontroller.h</includes>
    <includes id="programchange_2source_2plugcids_8h" name="programchange/source/plugcids.h" local="yes" imported="no">plugcids.h</includes>
    <includes id="programchange_2source_2version_8h" name="programchange/source/version.h" local="yes" imported="no">version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BEGIN_FACTORY_DEF</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a24853d5c5a712fdd6c85d936722c0de1</anchor>
      <arglist>(&quot;Steinberg Media Technologies&quot;, &quot;http://www.steinberg.net&quot;, &quot;mailto:info@steinberg.de&quot;) DEF_CLASS2(INLINE_UID_FROM_FUID(PlugProcessorUID)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>kVstAudioEffectClass</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a7668929ac981fa3b7c508e7578a3e357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Program</type>
      <name>Change</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a58bdd7fa7ecf0fa8b704e2be0dcceabd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Program</type>
      <name>Fx</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>a03ad6af092cf43a7f45fd47eb11c1078</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Test Program</type>
      <name>kVstVersionString</name>
      <anchorfile>programchange_2source_2plugentry_8cpp.html</anchorfile>
      <anchor>ac1309796378f282dc0a0d07f322a9727</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plugfactory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/panner/source/</path>
    <filename>plugfactory_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>stringSubCategory</name>
      <anchorfile>plugfactory_8cpp.html</anchorfile>
      <anchor>a11fe802e6c8629ea34f814483d1591e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/plugparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2plugparamids_8h</filename>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5af4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelUIDId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a8adb5c41ccf53f31999d2b7ba0cd4df0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelUIDLengthId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a8f67e086bdde41003f9c5df719954159</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelNameId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5aaac38d9210256461713326a614cea99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelNameLengthId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a3069645a9a0942433240e2823d527536</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelIndexNamespaceOrderId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a9ca40743cd40f2cca0c40092fe666e60</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelIndexNamespaceId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5ac7b803af7e706ee9b1436f9f77ed0766</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelIndexNamespaceLengthId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a75e82f9be248b2e65cf81e33074ee84e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelColorId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a129fcb67ba283f51cacaf083b3ac2e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelIndexId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5aa1303f6f7af3f6dd88adc2d8047da59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelPluginLocationId</name>
      <anchorfile>channelcontext_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a99fb83031ce9923c84392b4e92f956b5a3eef4af72278a5ae9af5aa8023a7f5b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/plugparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2plugparamids_8h</filename>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06caf4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kChannelId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06cadb904fc3177479d4e086b3a5cf170e1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kControllerNumId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca81aa01d7c716105984acc28d9c9d4df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kControllerId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06cae5011f0834e7c604bf82a37ede9c5d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProgramChangeId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca3385eaf46a48ddb39f2c46780db82db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPitchBendId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca898297bf48a03eb820528b2ac2cb5f0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPolyPressureNoteId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca9125bcbcee28ac7c25849132df286005</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPolyPressureId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca7852e08c29d17a43a9f3eb713fda65c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kAftertouchId</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca361aba85731d2da065e5a03028ef7f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kMaxMIDIChannelSupported</name>
      <anchorfile>legacymidiccout_2source_2plugparamids_8h.html</anchorfile>
      <anchor>adc29c2ff13d900c2f185ee95427fb06ca511f238797aa6628f2a9a238b1776c9a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/plugparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2plugparamids_8h</filename>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>note__expression__text_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a05589fbab0657f08285ebdfe93f5ec9eaf4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/plugparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2plugparamids_8h</filename>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>prefetchablesupport_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4daf4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPrefetchableMode</name>
      <anchorfile>prefetchablesupport_2source_2plugparamids_8h.html</anchorfile>
      <anchor>a16af7b253440dadd46a80a4b9fddba4dadd87fed6cb9da3f20263b368e4d3806a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>programchange/source/plugparamids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2plugparamids_8h</filename>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>programchange_2source_2plugparamids_8h.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25af4e2f2cc267406eb8c152ecab32fd088</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProgramId</name>
      <anchorfile>programchange_2source_2plugparamids_8h.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25a3930e3c52d163188e53c557a69d9aa71</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kGainId</name>
      <anchorfile>programchange_2source_2plugparamids_8h.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25a9006dde2a6fcecd0d0f30fdcaec1ec16</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumProgs</name>
      <anchorfile>programchange_2source_2plugparamids_8h.html</anchorfile>
      <anchor>aba01db17f4a2bfbc3db60dc172972a25aab19460c4785d34ad085890b4ca086b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>plugprocessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/panner/source/</path>
    <filename>plugprocessor_8cpp</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Panner</namespace>
    <member kind="define">
      <type>#define</type>
      <name>kPI</name>
      <anchorfile>plugprocessor_8cpp.html</anchorfile>
      <anchor>a85112fbbb5c415df9b0bdb3d9999fec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>kRampingTimeMs</name>
      <anchorfile>plugprocessor_8cpp.html</anchorfile>
      <anchor>a17ed171273fe6cc3ded58887c2ece8a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>processcontextcheck.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>processcontextcheck_8cpp</filename>
    <includes id="processcontextcheck_8h" name="processcontextcheck.h" local="yes" imported="no">processcontextcheck.h</includes>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>processcontextcheck.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>processcontextcheck_8h</filename>
    <class kind="class">ProcessContextCheck</class>
  </compound>
  <compound kind="file">
    <name>processsetupcheck.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>processsetupcheck_8cpp</filename>
    <includes id="processsetupcheck_8h" name="processsetupcheck.h" local="yes" imported="no">processsetupcheck.h</includes>
    <includes id="logevents_8h" name="logevents.h" local="yes" imported="no">logevents.h</includes>
  </compound>
  <compound kind="file">
    <name>processsetupcheck.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>processsetupcheck_8h</filename>
    <includes id="eventlogger_8h" name="eventlogger.h" local="yes" imported="no">eventlogger.h</includes>
    <class kind="class">ProcessSetupCheck</class>
  </compound>
  <compound kind="file">
    <name>sync.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>sync_8h</filename>
    <class kind="struct">Steinberg::Vst::SyncEntry</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>syncdelaycontroller.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelaycontroller_8cpp</filename>
    <includes id="syncdelaycontroller_8h" name="syncdelaycontroller.h" local="yes" imported="no">syncdelaycontroller.h</includes>
    <includes id="sync_8h" name="sync.h" local="yes" imported="no">sync.h</includes>
    <includes id="syncdelayids_8h" name="syncdelayids.h" local="yes" imported="no">syncdelayids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>syncdelaycontroller.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelaycontroller_8h</filename>
    <includes id="sync_8h" name="sync.h" local="yes" imported="no">sync.h</includes>
    <class kind="class">Steinberg::Vst::SyncDelayController</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>syncdelayfactory.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelayfactory_8cpp</filename>
    <includes id="syncdelaycontroller_8h" name="syncdelaycontroller.h" local="yes" imported="no">syncdelaycontroller.h</includes>
    <includes id="syncdelayids_8h" name="syncdelayids.h" local="yes" imported="no">syncdelayids.h</includes>
    <includes id="syncdelayprocessor_8h" name="syncdelayprocessor.h" local="yes" imported="no">syncdelayprocessor.h</includes>
    <includes id="syncdelayversion_8h" name="syncdelayversion.h" local="yes" imported="no">syncdelayversion.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>syncdelayfactory_8cpp.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>syncdelayids.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelayids_8h</filename>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="enumvalue">
      <name>kDelayId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea7d4228d4da0ae0131ef1783f79526104</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea57a371feb983eb7350939ef1aab87090</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>syncdelayprocessor.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelayprocessor_8cpp</filename>
    <includes id="syncdelayprocessor_8h" name="syncdelayprocessor.h" local="yes" imported="no">syncdelayprocessor.h</includes>
    <includes id="sync_8h" name="sync.h" local="yes" imported="no">sync.h</includes>
    <includes id="syncdelayids_8h" name="syncdelayids.h" local="yes" imported="no">syncdelayids.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>syncdelayprocessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelayprocessor_8h</filename>
    <class kind="class">Steinberg::Vst::SyncDelayProcessor</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>syncdelayversion.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/syncdelay/source/</path>
    <filename>syncdelayversion_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>syncdelayversion_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testsuite.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/validator/source/</path>
    <filename>testsuite_8h</filename>
    <class kind="class">Steinberg::Vst::TestSuite</class>
    <class kind="class">Steinberg::Vst::TestSuite::Test</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>audiohost/source/usediids.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/audiohost/source/</path>
    <filename>audiohost_2source_2usediids_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>editorhost/source/usediids.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/editorhost/source/</path>
    <filename>editorhost_2source_2usediids_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>validator/source/usediids.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/validator/source/</path>
    <filename>validator_2source_2usediids_8cpp</filename>
    <namespace>Steinberg</namespace>
  </compound>
  <compound kind="file">
    <name>validator.cpp</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/validator/source/</path>
    <filename>validator_8cpp</filename>
    <includes id="validator_8h" name="validator.h" local="yes" imported="no">validator.h</includes>
    <includes id="testsuite_8h" name="testsuite.h" local="yes" imported="no">testsuite.h</includes>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>validator.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst-hosting/validator/source/</path>
    <filename>validator_8h</filename>
    <class kind="class">Steinberg::Vst::Validator</class>
    <class kind="struct">Steinberg::Vst::Validator::ModuleTestConfig</class>
    <class kind="class">Steinberg::Vst::VstModule</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
  </compound>
  <compound kind="file">
    <name>adelay/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/adelay/source/</path>
    <filename>adelay_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>adelay_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>again/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/again/source/</path>
    <filename>again_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>again_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>channelcontext/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/channelcontext/source/</path>
    <filename>channelcontext_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>channelcontext_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>hostchecker/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/hostchecker/source/</path>
    <filename>hostchecker_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>hostchecker_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>legacymidiccout/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/legacymidiccout/source/</path>
    <filename>legacymidiccout_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>legacymidiccout_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>mda-vst3/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/mda-vst3/source/</path>
    <filename>mda-vst3_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringPluginName</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a580d3236cf2654394fd9dda85651efc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>mda-vst3_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_synth/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_synth/source/</path>
    <filename>note__expression__synth_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>note__expression__synth_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>note_expression_text/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/note_expression_text/source/</path>
    <filename>note__expression__text_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>note__expression__text_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pitchnames/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/pitchnames/source/</path>
    <filename>pitchnames_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>pitchnames_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>prefetchablesupport/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/prefetchablesupport/source/</path>
    <filename>prefetchablesupport_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>prefetchablesupport_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>programchange/source/version.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/programchange/source/</path>
    <filename>programchange_2source_2version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>adb2701b32a110347dbec4c7d92b3cce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAJOR_VERSION_INT</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a1b1d372b4f38ad0455414c7bcfb7150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a8e969cd9064a794d4f76d0192491e634</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUB_VERSION_INT</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>ad82cb859636c1a68bbea1968d405ad7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a1d8d20b64fc672d1f458dc8dd40c4b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RELEASE_NUMBER_INT</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a7e0ef6f4f5763c59157b59e105f86374</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a376e4da35d8404a22dd75e5d188d178e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BUILD_NUMBER_INT</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>adfb14851d45258eee920f43b201279e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FULL_VERSION_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>ab61e5bc2342cce876090e4b50ca2f60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERSION_STR</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>acfc1668731750cb1ee8974b8a7c133ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringOriginalFilename</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>adb58dbe9424bfe0a2e594a5e6399c3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringFileDescription</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a9278205f41909b317803db604ed1075d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyWeb</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a642cf2d637621b344ca826ba26e3da52</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyEmail</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>ab3aa50bfa1df9fe473bf9202c2bff0cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringCompanyName</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a959cc5c14daa39d176d88fffd211aa6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalCopyright</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>a7b9ca76cb4cc59f027ddabbe5f3f2118</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>stringLegalTrademarks</name>
      <anchorfile>programchange_2source_2version_8h.html</anchorfile>
      <anchor>aa863825ce130d257c1ba798e4e639d67</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voicebase.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/common/</path>
    <filename>voicebase_8h</filename>
    <class kind="class">Steinberg::Vst::VoiceBase</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_LOG</name>
      <anchorfile>voicebase_8h.html</anchorfile>
      <anchor>a571d51360926bac393fcf9c972a5ffa8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>voiceprocessor.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/common/</path>
    <filename>voiceprocessor_8h</filename>
    <class kind="class">Steinberg::Vst::VoiceProcessor</class>
    <class kind="class">Steinberg::Vst::VoiceProcessorImplementation</class>
    <namespace>Steinberg</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_LOG</name>
      <anchorfile>voiceprocessor_8h.html</anchorfile>
      <anchor>a571d51360926bac393fcf9c972a5ffa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VOICEPROCESSOR_BLOCKSIZE</name>
      <anchorfile>voiceprocessor_8h.html</anchorfile>
      <anchor>ad02c1f770ebad9d3f30b3f046ebcea00</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>VSTInterAppAudioAppDelegate.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/InterAppAudio/InterAppAudioExample/</path>
    <filename>VSTInterAppAudioAppDelegate_8h</filename>
    <class kind="class">VSTInterAppAudioAppDelegate</class>
  </compound>
  <compound kind="file">
    <name>VSTInterAppAudioAppDelegate.mm</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/InterAppAudio/InterAppAudioExample/</path>
    <filename>VSTInterAppAudioAppDelegate_8mm</filename>
    <includes id="VSTInterAppAudioAppDelegate_8h" name="VSTInterAppAudioAppDelegate.h" local="yes" imported="yes">VSTInterAppAudioAppDelegate.h</includes>
    <includes id="VSTInterAppAudioHostUIControllerViewController_8h" name="VSTInterAppAudioHostUIControllerViewController.h" local="yes" imported="yes">VSTInterAppAudioHostUIControllerViewController.h</includes>
  </compound>
  <compound kind="file">
    <name>VSTInterAppAudioHostUIControllerViewController.h</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/InterAppAudio/InterAppAudioExample/</path>
    <filename>VSTInterAppAudioHostUIControllerViewController_8h</filename>
    <class kind="class">VSTInterAppAudioHostUIControllerViewController</class>
  </compound>
  <compound kind="file">
    <name>VSTInterAppAudioHostUIControllerViewController.mm</name>
    <path>/Users/buildserver/Builddata/re/295942927/b/VST_SDK/vst3sdk/public.sdk/samples/vst/InterAppAudio/InterAppAudioExample/</path>
    <filename>VSTInterAppAudioHostUIControllerViewController_8mm</filename>
    <includes id="VSTInterAppAudioHostUIControllerViewController_8h" name="VSTInterAppAudioHostUIControllerViewController.h" local="yes" imported="yes">VSTInterAppAudioHostUIControllerViewController.h</includes>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::ADelayController</name>
    <filename>classSteinberg_1_1Vst_1_1ADelayController.html</filename>
    <base>Steinberg::Vst::EditController</base>
    <base>Steinberg::Vst::IDelayTestController</base>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doTest</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayController.html</anchorfile>
      <anchor>afac0aa17ba84bb08beed364eefd13b88</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::ADelayProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1ADelayProcessor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>ADelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a714cf92be6fa9efc8e662f6d278bc3fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>mDelay</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a0600f395c371b6bf7c1f1c051f63bccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float **</type>
      <name>mBuffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>afad181ed8e304987c06487f14e82c841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mBufferPos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>a9c734456918490b900c3a3a05c5e74c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1ADelayProcessor.html</anchorfile>
      <anchor>aa09864e5d6f2062a14eb8ad2d1db297d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::AGain</name>
    <filename>classSteinberg_1_1Vst_1_1AGain.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>AGain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a9b934532e4add86437421a047a3cf7fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AGain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>aeedd6f72391025cc1c6f5ee3593cfb6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>receiveText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a089d871d42bc566bfacc222eee802f78</anchor>
      <arglist>(const char *text) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setupProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>adc02a860026250ea952fb9b2babddb25</anchor>
      <arglist>(ProcessSetup &amp;newSetup) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>canProcessSampleSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a1c7a40be692f5ed7f009896af248beed</anchor>
      <arglist>(int32 symbolicSampleSize) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SampleType</type>
      <name>processAudio</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a1bfe25345ab8c9724f1a9054bcc0119e</anchor>
      <arglist>(SampleType **input, SampleType **output, int32 numChannels, int32 sampleFrames, float gain)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SampleType</type>
      <name>processVuPPM</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>aae38d5bb8d3a9b1ee8362e0c7966bb7e</anchor>
      <arglist>(SampleType **input, int32 numChannels, int32 sampleFrames)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fGain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a98ba8d09babc608a4d6c9566c73abf42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fGainReduction</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>acb0d816f650e0ce8fd07a0e74327265e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fVuPPMOld</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>ad26040642b7a7a3101a414385c259763</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>currentProcessMode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>ae3ce0d6e0ecc8075deaf20638a893c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>bHalfGain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>a8b1f18fc647d657a3b0528c1ae3467de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>bBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGain.html</anchorfile>
      <anchor>abc22129b24de048752fd93a6ca2f8910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::AGainController</name>
    <filename>classSteinberg_1_1Vst_1_1AGainController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::IMidiMapping</base>
    <member kind="typedef">
      <type>AGainUIMessageController&lt; AGainController &gt;</type>
      <name>UIMessageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>ae6481b2aec7c49ca0673c645a305696a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::UTF8StringPtr</type>
      <name>UTF8StringPtr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>af7e79066204c7e0be05f30d63bcafb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IUIDescription</type>
      <name>IUIDescription</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>aa946c9736e3aad934fd2d9b7b916cc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IController</type>
      <name>IController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>af63358114b145c306987ac513b4e908d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::VST3Editor</type>
      <name>VST3Editor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>ae5ece0a3a8c6e4295d9adedb76d6edd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IPlugView *</type>
      <name>createView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a634ef43d3538409b98c1fc2cd5e494a0</anchor>
      <arglist>(const char *name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>receiveText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a089d871d42bc566bfacc222eee802f78</anchor>
      <arglist>(const char *text) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getMidiControllerAssignment</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a0c25846cfb4cee3a28d6446c4f324877</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiControllerNumber, ParamID &amp;tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IController *</type>
      <name>createSubController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>ac8f9a7e40bf5981bc73eaf685034b4d4</anchor>
      <arglist>(UTF8StringPtr name, const IUIDescription *description, VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DELEGATE_REFCOUNT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a30e212b4af962b3920c149f09f339555</anchor>
      <arglist>(EditController) tresult queryInterface(const char *iid</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUIMessageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a267a3f7fb32c318d5a887bb666f6cc98</anchor>
      <arglist>(UIMessageController *controller)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeUIMessageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a8c6c97d769c5adbee243cd5dc1746e84</anchor>
      <arglist>(UIMessageController *controller)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultMessageText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>aff1ff54a4e1eded3a203cbd49b6e59ac</anchor>
      <arglist>(String128 text)</arglist>
    </member>
    <member kind="function">
      <type>TChar *</type>
      <name>getDefaultMessageText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a0b46980f2ea48e70014c9749d4c9c8bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void **obj</type>
      <name>SMTG_OVERRIDE</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainController.html</anchorfile>
      <anchor>a985dc60099827f0160cf03e294e3989b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::AGainUIMessageController</name>
    <filename>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</filename>
    <templarg></templarg>
    <member kind="enumeration">
      <type></type>
      <name>Tags</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>aef88e249863a4190b6062bbf8fa5c656</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSendMessageTag</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>aef88e249863a4190b6062bbf8fa5c656a78554571e4547b8ae5127de63dfa340f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSendMessageTag</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>aef88e249863a4190b6062bbf8fa5c656a78554571e4547b8ae5127de63dfa340f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AGainUIMessageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>af4837295aab77b0570d4ad4206992755</anchor>
      <arglist>(ControllerType *againController)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AGainUIMessageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>a6e2f02176a0703536d598b074df761f9</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMessageText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainUIMessageController.html</anchorfile>
      <anchor>afa47f8a96f2562e3e1b477b2badef236</anchor>
      <arglist>(String128 msgText)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::AGainWithSideChain</name>
    <filename>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</filename>
    <base>Steinberg::Vst::AGain</base>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>SampleType</type>
      <name>processAudioWithSideChain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AGainWithSideChain.html</anchorfile>
      <anchor>a482f90eb2ebf77c2a08e7654a69618b1</anchor>
      <arglist>(SampleType **in, SampleType **out, SampleType **aux, int32 numChannels, int32 sampleFrames, float gain)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::AmbienceController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>AmbienceController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a16a6af7c0cdae25064c2193b1bb611d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AmbienceController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a5e35c5d570e4a6214b15358000ce8f6d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceController.html</anchorfile>
      <anchor>a2b613c0314e2728549f2a6c47fbe500d</anchor>
      <arglist>(uid, 0x0D9DD331, 0xCCF044FF, 0xB7DCB8B9, 0xDF977096)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::AmbienceProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>AmbienceProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>aab98600536455a8c7c584966978ba80c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AmbienceProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a69d45320830df3c378aa391d1c7f6a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a0c4f64d81b4c44747a0c6d4c0f3b5be5</anchor>
      <arglist>(uid, 0xAF799E3A, 0xC94B444A, 0xB5B24FD5, 0xD3E3F9E4)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearBuffers</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a893bc773ca9d89fc457033b6c3b896ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a1d39518fbf2f23bc7f57d0b823c8239a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a86ba6a4b65e9df106f7d546a10b131e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a5a31c401f8626c5f22b84b41b5687144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a0e2c5f6741f4c23214b7bad6fbe4e792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a4fc43e5d31b41de090f95e23a406e205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbak</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a9c285951df6ae20871442c9afb737d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>damp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a34f9ed15c72201838afa91b588aaa425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>aa6ea9b07932df851a61fa72bd01761fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>den</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a7b9038636a8c8bcb2f8147c48ac667a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>rdy</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1AmbienceProcessor.html</anchorfile>
      <anchor>a45025cd0d7fcc8dc04fc12849b5b5330</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::AudioHost::App</name>
    <filename>classSteinberg_1_1Vst_1_1AudioHost_1_1App.html</filename>
    <member kind="function">
      <type></type>
      <name>~App</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AudioHost_1_1App.html</anchorfile>
      <anchor>a66970adb53232d9104b6be70a49380c0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AudioHost_1_1App.html</anchorfile>
      <anchor>a194800d8632edea19471ac4b39e1c784</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;cmdArgs) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1AudioHost_1_1App.html</anchorfile>
      <anchor>a62c367816998938c7ebcbb93130aa0a0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::EditorHost::App</name>
    <filename>classSteinberg_1_1Vst_1_1EditorHost_1_1App.html</filename>
    <member kind="function">
      <type></type>
      <name>~App</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorHost_1_1App.html</anchorfile>
      <anchor>a66970adb53232d9104b6be70a49380c0</anchor>
      <arglist>() noexcept override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorHost_1_1App.html</anchorfile>
      <anchor>a194800d8632edea19471ac4b39e1c784</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;cmdArgs) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorHost_1_1App.html</anchorfile>
      <anchor>a62c367816998938c7ebcbb93130aa0a0</anchor>
      <arglist>() override</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BandistoController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BandistoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>ab13c91e53a1d3422e92a7c50f286b115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BandistoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a61c727290774524f81342b91634679cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoController.html</anchorfile>
      <anchor>aef3aa592c4e571178c86e4ca2b2d8544</anchor>
      <arglist>(uid, 0x302EA341, 0xB6AC46C6, 0xB54D65E5, 0x95E63FAB)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BandistoProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</filename>
    <base protection="private">Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>BandistoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>af20521d23db4b37d1443c21346fa73f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a11683b7bd99f63cf6305457692f55a78</anchor>
      <arglist>(uid, 0x79F1CDBB, 0x1F004396, 0x947E35BA, 0x22B4FA6D)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a908a4dce49e93ede6f1b2f02e35cfb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a9dd034fe8d4f5d790ad7ed3f99639321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>aea24227a67abfbb66d5cc3332e02343c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a6737117454e90f8caca87dcfda6f98b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>ab7bd2a156007e3d5ff5b020386edae9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a0c13cbfdf3ec695f19bf1c2af570e3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a58c6bdf31a2bef33a474b4cfb9409f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a5d2ff9ef1cecf3f1c3caec068d8155a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>aa99973d5a2968e9ec4c3148fe68e513f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a8865ee0be281cd63ec3c2e21a9d4e006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a0ca1df279e4869b7dbe8b145ae94ad00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>ad79aca159f5b0f497390712b7b25e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>ac2e3cea99685b96d4498a75309a8e8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>adefa88247b42cc95ef8a0879277b6519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>ab756503ec7eb8340aae55ee1455b31ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>aa805acc76e087669585fb54c41833703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>slev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>a9be6fb08a3ae972aa870b3e5e3411c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>valve</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BandistoProcessor.html</anchorfile>
      <anchor>ac0aad2c34a1a958ed1365b19031e1862</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BaseController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::IMidiMapping</base>
    <member kind="enumvalue">
      <name>kMagicNumber</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea44482486525ed5718cf4723458981930</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea6d655858b9b00679772c781158b326e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPresetParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4c056a6b6aed73528ebeaf12873b1bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kModWheelParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9eac20fd6cdb56de4355ea673359da494af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBreathParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9eadb06b5e5148a9184f5bd8b64a811266c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCtrler3Param</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea0a7441e717247b2727a1208063c4b421</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kExpressionParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4af0fac1f3a0a36b1295d8308fc763fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPitchBendParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea28ff852c3d5fe8f7a1357f6ff122d8e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSustainParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea2e854d2d9dd944783652ece5dea18f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kAftertouchParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4af0d9e8cc0b463d78496ead2677effe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kMagicNumber</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea44482486525ed5718cf4723458981930</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea6d655858b9b00679772c781158b326e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPresetParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4c056a6b6aed73528ebeaf12873b1bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kModWheelParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9eac20fd6cdb56de4355ea673359da494af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBreathParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9eadb06b5e5148a9184f5bd8b64a811266c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCtrler3Param</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea0a7441e717247b2727a1208063c4b421</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kExpressionParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4af0fac1f3a0a36b1295d8308fc763fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPitchBendParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea28ff852c3d5fe8f7a1357f6ff122d8e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSustainParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea2e854d2d9dd944783652ece5dea18f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kAftertouchParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a61dadd085c1777f559549e05962b2c9ea4af0d9e8cc0b463d78496ead2677effe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BaseController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a3c156401c25f7677a4a6a63a4229af4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getProgramListCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>af5e30a37495c2dfff3891cbf86572c66</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getProgramListInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a2a3941823f36ec6291cbc7d815541d00</anchor>
      <arglist>(int32 listIndex, ProgramListInfo &amp;info) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getProgramName</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a77f12234bacd276ef1f27a6c69fabe36</anchor>
      <arglist>(ProgramListID listId, int32 programIndex, String128 name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getMidiControllerAssignment</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a0c25846cfb4cee3a28d6446c4f324877</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiControllerNumber, ParamID &amp;tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParameterContainer &amp;</type>
      <name>getParameters</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a1ab3531dda4715c32544c69d4cb06d0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DELEGATE_REFCOUNT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a579f67d43479032fad177c903cad9a49</anchor>
      <arglist>(EditControllerEx1) tresult queryInterface(const char *iid</arglist>
    </member>
    <member kind="variable">
      <type>void **obj</type>
      <name>SMTG_OVERRIDE</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a985dc60099827f0160cf03e294e3989b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const TChar</type>
      <name>kMicroSecondsString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>ae5d3e4694c89627f8012d679bee40481</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>ab6597e05f5085eb723517723e5c5bbed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>midiCCParamID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a9d308272407ba5f7a6768604ff716e47</anchor>
      <arglist>[kCountCtrlNumber]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a2bd79d2ab2dfb6aeaf75c2878ad30e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>addBypassParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseController.html</anchorfile>
      <anchor>a14e43faff229f25734bc51b0eae0f84e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BaseParameter</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BaseParameter.html</filename>
    <base>Steinberg::Vst::Parameter</base>
    <member kind="function">
      <type></type>
      <name>BaseParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseParameter.html</anchorfile>
      <anchor>ae87bb3f180d577eabebc61ff4da0e014</anchor>
      <arglist>(const TChar *title, const TChar *units, int32 stepCount, ParamValue defaultValueNormalized, int32 flags, int32 tag, UnitID unitID=kRootUnitId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseParameter.html</anchorfile>
      <anchor>af7aab53314d6d62ad5b017ba85ab50b5</anchor>
      <arglist>(const TChar *string, ParamValue &amp;_valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BaseParameter.html</anchorfile>
      <anchor>acb87aed98bfbb56736d849105403e439</anchor>
      <arglist>(ParamValue v) SMTG_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BeatBoxController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam10</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aacc36babf177e694d24b337dd80f0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam11</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a8740108a4485585743c26da66d9de8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam10</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aacc36babf177e694d24b337dd80f0179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam11</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a8740108a4485585743c26da66d9de8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BeatBoxController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a0114d51b222e8663f93dc0a8f1afb095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BeatBoxController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>add633f1d916ae3ef1621bbf5e9c74ca6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxController.html</anchorfile>
      <anchor>a3f63e514ce872ff7bd0a8eeb2f160c15</anchor>
      <arglist>(uid, 0x7A668F2F, 0x42834CCF, 0xA4856D36, 0x891466F7)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::BeatBoxProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>BeatBoxProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a4cbc544581d6cd69161063ac01cd5a50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>adacd8e2fbb6a2d8fa5c477faaec444f6</anchor>
      <arglist>(uid, 0x9E6A6E95, 0x9B734440, 0x97D787BE, 0xBBDDD831)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a6b7699305b3bdeaec377bcbbdd446da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hfil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a43e6c0365782783cd3d11b99d52475fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a72c363196b3d74a73b2bfa265632f8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>kthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ab52edd74bef6d42b4159e561747c64c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>kfil1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a356e2961aa9c4ed427743fc3c92d2e40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>kfil2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a759fb209763a90e454cbc5fd621d17cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ae0c929e66219840efef244cb94c1c1ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>klev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a18143059ad8aa26ecc150d882ab5d311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hlev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a4b2c559c2f162c828c6bf91d1567a959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>slev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a9be6fb08a3ae972aa870b3e5e3411c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ww</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a7a5822a9cdc75cb1dfab761a113745c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wwx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a1fda64b38201af4b08da4017929690e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sb1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a5c1bbc422eb442ce219ee0324c25b665</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sb2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a33dd67e7e942a1639dac57d9be3e221e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a14f003b79101085beba1b6d51b754c6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ab72ce0ed95779b7790fd44fbf8c3883e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sf3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ab242e0e82b7934bd5ad321dc2a7c8efd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>kww</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a1eeddc96f428b15514dd789857ddd147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>kwwx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a005bcf6adb17a8587f367593888d7ece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ksb1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a1eefc766535d1aa72bd2d09798a09029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ksb2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a3b46e43d4c3532e4eb828f42f77fdded</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ksf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a7c9da670ec8cdff2e7ac0b5c7e4e3203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ksf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a2fcf39d67fb99df9008f94fe364064b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dyne</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a393f993f746312bd629d19a598c2a90d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dyna</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a8ddf4b2897cf64a5bcaddb1108369989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dynr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a3974612c55770be9437899163ee84e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dynm</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a066e9b5c5ab3de04e395db9e039183af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>hbuf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ae859c6fbd7fb9f595683538ee5e98735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>kbuf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>abcb0b1e5356f9fed7f961c09d0ce0df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>sbuf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a3fcdd4e0beaf52383f49721c91371cfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>sbuf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a9adf152e37b7a75de7835a49f006c595</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>hbuflen</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a16aba4dd31b5c34397259713abe32152</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>hbufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ac746cc0fad0d8a63319f1025d760f85b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>hdel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a3960e19630f0019552dc034b4de3fd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>sbuflen</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a0b00da249f3972bcbac076d3f4068fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>sbufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ae362b742b900e53018a279e291b5b941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>sdel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a674862562112c3e296f4ea558baf76b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>sfx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a48b7385d6503f694f5a9401bb3c99ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>kbuflen</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>abd4d3e44e3fbd7661d40dd325438b6a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>kbufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ad97eb308c28919f9cf1fa30d880b920b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>kdel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a808676e20a0c690515cb5eb02790f6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>ksfx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a45c5179906935873a8f16f14f57ddd03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>rec</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a8f7605d664ff8e2ff5c8b13ff343b7a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>recx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>ab121c8b8b342ff1e280e5bdb9a878489</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>recpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1BeatBoxProcessor.html</anchorfile>
      <anchor>a976c2324b1b4aad1f5e91cf6cada2c8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::BrownNoise</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</filename>
    <templarg>SamplePrecision</templarg>
    <member kind="function">
      <type></type>
      <name>BrownNoise</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a106e140f18dd4e124cebdbc0bdb3adcb</anchor>
      <arglist>(int32 bufferSize, SamplePrecision sampleRate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BrownNoise</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a79de46671e1e4478b7767a870a00c948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SamplePrecision</type>
      <name>at</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>af2e0392b526b1b9a08b4cd7fa278ecfc</anchor>
      <arglist>(int32 pos) const</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>aeba375d43d0cabc60d729cdb1625c686</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SamplePrecision *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a1d9eac64fdc21cfee7c1faf804e821a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>ac52d4064d6e6e1bd930dbc2441186982</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>BrownNoise&lt; float &gt;</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</filename>
    <member kind="function">
      <type></type>
      <name>BrownNoise</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a106e140f18dd4e124cebdbc0bdb3adcb</anchor>
      <arglist>(int32 bufferSize, float sampleRate)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BrownNoise</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a79de46671e1e4478b7767a870a00c948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>at</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>af2e0392b526b1b9a08b4cd7fa278ecfc</anchor>
      <arglist>(int32 pos) const</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>aeba375d43d0cabc60d729cdb1625c686</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>a1d9eac64fdc21cfee7c1faf804e821a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1BrownNoise.html</anchorfile>
      <anchor>ac52d4064d6e6e1bd930dbc2441186982</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ComboController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ComboController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>aad43827bba8fb47f81eaf929cfeedff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a72554bb7c7765158576a33165582f290</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboController.html</anchorfile>
      <anchor>a3c9a08b6d6aa69d2a1c8f3378e11fcf5</anchor>
      <arglist>(uid, 0x2C9437A7, 0x1B4D4E35, 0x845E3159, 0xE72D7BC4)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ComboProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>ComboProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a73bcd441abd4b4fd521b089195a5d72a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ComboProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a7c857261742264d941e8d2ce00cb4cd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a749699127c20787a2dc7e1d8a724ba31</anchor>
      <arglist>(uid, 0x11C1BD22, 0x888F4F17, 0xB2E2A77B, 0x51CEDCD6)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearBuffers</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a893bc773ca9d89fc457033b6c3b896ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>float</type>
      <name>filterFreq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>afbc91e345f0196f41e0dcb13785b15eb</anchor>
      <arglist>(float hz)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>clip</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>aeb92f0c966ac338ea9a3b5ab20cc295a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>drive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a58270f6be13520a468ab755acbf7bd3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a5e16c54b3ec6cc1b5dad0a71dcfd7a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lpf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a4dd7b9c0d5022ea08cfc8a2227246ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hpf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>aedf42509154a5225aa8b87f7251abd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mix1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a899226ced530a969e1d54c8ef8b1c493</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mix2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>af886660e87d29c40f1ca26f5fe065ad3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ae5e2ca21f45aa84e5abdb5a76b0ba865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a413ebd62e299a7f1df1769457c243108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a4a4447244f3d7ff18aa6732b9d2d795c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ac821f9ed3aa1c57e8629c55c6dc288c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a9b0c4e09f1dd3fbec5d1cb2b584f15e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>bias</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ab881305da614121cd59b58172248c151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a54bb422651082c044af95480c18560f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ace9d10e75493788bf648bfb05f98e8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a93797a8b0e37cb925d113a8ae07460ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ab0d34a4bd6246e3cb9cace83a8e4fa2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff10</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>af982a2d79e0dcb4d986aeb3e68181f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hhf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>aa2b7087cb6138293dd1f3fafc722b2fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hhq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a85a882359e47371fbbf3957831d0767e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hh0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a7b84b45a4b4eba13dcd43a1b7de4c31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hh1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a1183531a21be4d567f0ec17360d37486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffe2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>ae77df326421144cd20bc7f4536d677b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a04ce053e4cd48d3cf10e0128c0484738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>del1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a760f0e7543d1ddc8bf1c6842a7874716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>del2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a6f02933d4f0281c8c19ab0701be3c988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a1ea5d0cb93f22f7d0fdf804bd68c3326</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ster</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ComboProcessor.html</anchorfile>
      <anchor>a9a1ed5c5d473b8a715f798852a273555</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::Controller</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</filename>
    <base>Steinberg::Vst::EditController</base>
    <base>Steinberg::Vst::INoteExpressionController</base>
    <base>Steinberg::Vst::IMidiMapping</base>
    <base>Steinberg::Vst::INoteExpressionPhysicalUIMapping</base>
    <member kind="enumeration">
      <type></type>
      <name>NoteExpressionTypeIds</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNoiseVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a4736e3cc04c477d0acc600d4d50f0b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterFreqModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954abb2e05aa2a2c78b5477c31cec0e2b628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterQModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ab3b549e2d95900a799a28563cc2821b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954af251b9f8493a42a0b967aebdc140227a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a29851866e68dd8cf8111d40879ec848c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterTypeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ade5bff8916b82e7c85978aee91591776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleSlopeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a34a780f23c14b997f31f9bbf1aec7391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusDetuneTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954aaac669132b06da8e4e6db7a1b89819ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kReleaseTimeModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a2f489fc67dc2c97341a1f4ab2e1debac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTextInputTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a24dfa9930fd91c8f1599c537f23ddde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSquareVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ac1a5aa0ddecf87b45de4322fddbc19f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNoiseVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a4736e3cc04c477d0acc600d4d50f0b1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterFreqModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954abb2e05aa2a2c78b5477c31cec0e2b628</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterQModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ab3b549e2d95900a799a28563cc2821b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954af251b9f8493a42a0b967aebdc140227a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a29851866e68dd8cf8111d40879ec848c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterTypeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ade5bff8916b82e7c85978aee91591776</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleSlopeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a34a780f23c14b997f31f9bbf1aec7391</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusDetuneTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954aaac669132b06da8e4e6db7a1b89819ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kReleaseTimeModTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a2f489fc67dc2c97341a1f4ab2e1debac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTextInputTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954a24dfa9930fd91c8f1599c537f23ddde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSquareVolumeTypeID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4c975cd547adc38bc800fddc7f8a2954ac1a5aa0ddecf87b45de4322fddbc19f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getMidiControllerAssignment</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>accb2b76127645a7a8ec171c7b220ce8d</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiControllerNumber, ParamID &amp;id) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getNoteExpressionCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a5d93e889ab504c7e08356683094be8a5</anchor>
      <arglist>(int32 busIndex, int16 channel) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a487e1f5b80a28b511301f98dca4a5d0b</anchor>
      <arglist>(int32 busIndex, int16 channel, int32 noteExpressionIndex, NoteExpressionTypeInfo &amp;info) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>abc366969b6b2e1cef34c221db92e806d</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, NoteExpressionValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>af4d16dae99ff1010b80359cb70500e31</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, const TChar *string, NoteExpressionValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getPhysicalUIMapping</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a49b13e53849d51156521f6270c7ad6ee</anchor>
      <arglist>(int32 busIndex, int16 channel, PhysicalUIMapList &amp;list) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable">
      <type>std::array&lt; ParamID, ControllerNumbers::kCountCtrlNumber &gt;</type>
      <name>midiCCMapping</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>aaad58ca2f563a040d5bbee68f033971d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static OBJ_METHODS(Controller, EditController) DEFINE_INTERFACES DEF_INTERFACE(INoteExpressionController) DEF_INTERFACE(IMidiMapping) DEF_INTERFACE(INoteExpressionPhysicalUIMapping) END_DEFINE_INTERFACES(EditController) REFCOUNT_METHODS(EditController) protected constexpr ParamID</type>
      <name>InvalidParamID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Controller.html</anchorfile>
      <anchor>a5619d64b65ed5d49f2d0848d646ec2c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::ControllerWithUI</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</filename>
    <base>Steinberg::Vst::NoteExpressionSynth::Controller</base>
    <base>Steinberg::Vst::IMidiLearn</base>
    <member kind="typedef">
      <type>VSTGUI::UTF8StringPtr</type>
      <name>UTF8StringPtr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>af7e79066204c7e0be05f30d63bcafb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IController</type>
      <name>IController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>af63358114b145c306987ac513b4e908d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IUIDescription</type>
      <name>IUIDescription</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>aa946c9736e3aad934fd2d9b7b916cc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::VST3Editor</type>
      <name>VST3Editor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>ae5ece0a3a8c6e4295d9adedb76d6edd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IPlugView *</type>
      <name>createView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>aa2fea25360b1f4824345acc423b1f8db</anchor>
      <arglist>(FIDString name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>beginEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a60aee36a21805e563d61242be6e7d8b0</anchor>
      <arglist>(ParamID tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>performEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a3310a1682cdcf572f5e22f59869b8e3c</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>endEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a55f180ed79364469774124be9d724160</anchor>
      <arglist>(ParamID tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>onLiveMIDIControllerInput</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>ad8535466d93aa534a40ae1244940cc52</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiCC) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IController *</type>
      <name>createSubController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>ac8f9a7e40bf5981bc73eaf685034b4d4</anchor>
      <arglist>(UTF8StringPtr name, const IUIDescription *description, VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isPrivateParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a8f5398486378a76ec028b304ddb2ee77</anchor>
      <arglist>(const ParamID paramID) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable">
      <type>DEFINE_INTERFACES DEF_INTERFACE(IMidiLearn) END_DEFINE_INTERFACES(Controller) REFCOUNT_METHODS(Controller) private VSTGUI::KeyboardViewRangeSelector::Range</type>
      <name>keyboardRange</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>ab86046c9174e294df454f1b7ac321e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamID</type>
      <name>midiLearnParamID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a8cef184b72b4074c934a5691b745e5df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>doMIDILearn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a0d13b05ef372806de086eec80526daae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ControllerWithUI.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DeEsserController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeEsserController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>ae1393cd500ea7918602c141166ecc592</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeEsserController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>aa508bb2127050ccb3cba6ba84dc09b91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserController.html</anchorfile>
      <anchor>a9d64481cba2289f8384a702f5910b602</anchor>
      <arglist>(uid, 0x370BA963, 0xE2D54BF8, 0x8D6838FA, 0x1567C8DD)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DeEsserProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DeEsserProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a29aa9aaa9007e7dd3c04058ac99b789e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DeEsserProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>afb5bf7b43a8c473b293c43d0d8d6dcd2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a74dedbab41dd1456e4c4c969b374e14e</anchor>
      <arglist>(uid, 0x174FD6D1, 0x856E4641, 0xBFB9851A, 0x1C544725)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbuf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a386ee47d5e3d4167555bcbe7e458c50e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbuf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a820e341f203290512ccff176b4923970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gai</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a60d333d34d9a06bb06b78b69a1a1dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>af1251a78af95b174cf6fa123dbe441a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DeEsserProcessor.html</anchorfile>
      <anchor>a4fc43e5d31b41de090f95e23a406e205</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DegradeController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DegradeController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>ac301b14dff40a06c4aa8dbcc67d243d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DegradeController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>ad30ebb8444693ace8bcc07fe5161314f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeController.html</anchorfile>
      <anchor>ac28766cc212a82b7c5ad90330756cca4</anchor>
      <arglist>(uid, 0x2C3AC40E, 0xA7754992, 0x87FE2BD7, 0x77829B03)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DegradeProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DegradeProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a1a55ed8e0d46bc5f64d71fde9dbcc239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DegradeProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a464c879cfefa7930dc2d32db28b796e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a489213841ffb9a0848dbb3e3f885691b</anchor>
      <arglist>(uid, 0xD31333A7, 0xA34E4690, 0xA279A0B0, 0x6C91BB85)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>float</type>
      <name>filterFreq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>afbc91e345f0196f41e0dcb13785b15eb</anchor>
      <arglist>(float hz)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>ac2e3cea99685b96d4498a75309a8e8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>ab756503ec7eb8340aae55ee1455b31ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>clp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a553c6e115917b80711dba186bcb67189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>aab1361e504b14f24ab0335ba905eaef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lin2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a2b14e4cce2142c4ff74ceb653cee8c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>g1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a581debe7d16bce9d187b97855f4e99d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>g2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>aee9971139118d56815564304450c4775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>g3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a5013f0bf35c33ad3274f73f6536c5b74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>aa58665156a47fae02e9ab6a0f48beba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a11ad9e733fe4015e5b4b5dc86d8191b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>aa85af06ffd4cdd8750df50e09d955246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a23919a6521508fe0d55a3666119b22be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>aacfb31c7f4e2cfb0ab0967f7be16e38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a9e7a38a682940eb8f83c0369b8cf78b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a8f6919474ec9fadece0e364c0ba7bad0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>adbf9e5ebc922884bcff9ecd86d455f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a6793ffaccb42d314c342734eafbf98ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>af036996d9afb33b61f4a18b20d10855c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>ab9b0494e374832d69ec09de621426985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>tn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a1e856820cb3970e4524f29a6eee057d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>tcount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DegradeProcessor.html</anchorfile>
      <anchor>a09467367454312afdf090ec7d63cb8b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DelayController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DelayController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>aef9b8c2d29550c33130b23aa35d581fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DelayController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a2ceee1c40dac133c85d55009e7f56ba0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayController.html</anchorfile>
      <anchor>a3c820d15751a0c579ed9e787f8e596e1</anchor>
      <arglist>(uid, 0xF9AB9778, 0xEF1943F2, 0x86F911A3, 0x50C7AACB)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DelayProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>ab5e146891d8a44caaea9388de96af1f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a35e8133b24e7fb47cdc6918ab74391ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a1a8feadac2fecab2dd14e6cd8a8fc59b</anchor>
      <arglist>(uid, 0xE5041336, 0xE9434B28, 0xB7B01267, 0x95F0C32F)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>ipos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a3e80584097da0ce639dd3abf4e119086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>ldel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>ade07a3997e8ab6e7f618f6e07b70853e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>rdel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>adbfcb139b65c936f898611bf5d6fe5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbk</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>aaebad3377fc5982187bd19f1a3c793d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a4cb5678cbeef8c076aedc860368cc4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a0b8cfdb941d0485219db6afc073f58e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>a4fc43e5d31b41de090f95e23a406e205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DelayProcessor.html</anchorfile>
      <anchor>aee98b93276f487808ba2dddf21f0791e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DetuneController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DetuneController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a23dd39d12a7fbfa1efb5d687de6c0672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DetuneController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a4d583ab9c017f0552d6ab5927478ea98</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneController.html</anchorfile>
      <anchor>a26d5567355595c4bccd5a5202b4239a0</anchor>
      <arglist>(uid, 0xCE5E213E, 0xE1B74D02, 0x92FF66C6, 0x3DCF27C8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DetuneProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DetuneProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a45dd973ee62e98ca34f7f487b8123dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DetuneProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>ad030c98cd04b12a2660da2273939f7c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a32772b7842651266eb13740736e53789</anchor>
      <arglist>(uid, 0x4CCBED11, 0xE28346A6, 0xA91EC86C, 0x9E85EDF8)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a9ee81cec92d8a15d2b61d127b0007240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>win</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>ae04a6ffdb2e745bbf3653717c459f953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>buflen</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a634702709eb60694da5d0b149e0ad0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>bufres</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a993b7c4ddda1344aa795355f2f591662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>semi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a568d53fc4bda906bbe5105ddbecbef67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>pos0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a6da66d048d6678462e33286d7c19e000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pos1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>ac50385c26a074800fd20c13f90512edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dpos1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>aa384f9214d2e0a367a5148da5ca8756d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pos2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a9d07b1afcbd7e4b3b87d41cd09ca2295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dpos2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a9e95423e2f5d466d576703d65213f5de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DetuneProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DitherController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DitherController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a05276b0ff0f3cbd165d07e8e4629ffd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DitherController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>aa19349fa150637f7c6b8341ab4a9fbdc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherController.html</anchorfile>
      <anchor>ac289c2de206536fd401b8d4eaff528b5</anchor>
      <arglist>(uid, 0xE54A7007, 0x068149B4, 0xAEAF955C, 0x54760DBF)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DitherProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DitherProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a00231a003d334eff8b5bb95428cddabd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DitherProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a1adb5bf22d42171d470bc4072e9aa999</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>aeadfa73420b519eedfcc65bec4178257</anchor>
      <arglist>(uid, 0xA155F267, 0xA6954095, 0xAFD8BFB1, 0x9E4F2293)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dith</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a0607c3682f320dfa66aabc53dd8340db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>rnd1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>acf7212ee0c9233b5c88390922a11ca2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>rnd3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a656f457a5b9939b2b819bad5f0f17971</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>shap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a6f19cc4e69a0de95c97437828de8c8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sh1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a405731334de66d7a13426072b6db41e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sh2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a323408bf14d513abb86183828c05876e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sh3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a1258bcc56d4d2dcb7a975b99d0432621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sh4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>adaaa008af134c03b55cbbf18e22ae17b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>offs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a227a2314c1dde5c8bdf9c5c48400b820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>bits</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a1eb8fc809d37cc6176f7f27374b063d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wlen</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>a277b8ae8ae8114074fc9531499055b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DitherProcessor.html</anchorfile>
      <anchor>aca3852dab23cf0066809ecc1997fb58b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DubDelayController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DubDelayController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>aa086360ffdd9c243a84fceffbee7933b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DubDelayController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>afa343308c21321c4bf9660a5c299d744</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayController.html</anchorfile>
      <anchor>aa20d4fb431769a21b1706268fc6a49e3</anchor>
      <arglist>(uid, 0x812A9763, 0xA27F4D74, 0x8A272139, 0x6F1D35BB)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DubDelayProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DubDelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a88a944e0df1b8a871f35d50f1160060b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DubDelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a9d7d4880ac7e7433d4f5087114a31c0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>af2358459c660c6dba861ce9a487b4f15</anchor>
      <arglist>(uid, 0xA49D1232, 0x24794649, 0xA57337B4, 0xDDC5041C)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>ipos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a3e80584097da0ce639dd3abf4e119086</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbk</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>aaebad3377fc5982187bd19f1a3c793d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a4cb5678cbeef8c076aedc860368cc4fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a0b8cfdb941d0485219db6afc073f58e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a4fc43e5d31b41de090f95e23a406e205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>aee98b93276f487808ba2dddf21f0791e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>del</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>ab3d57ec668d54e2f366640873a1ca270</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mod</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a198c465c948bd262682a0109e9d16378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dlbuf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DubDelayProcessor.html</anchorfile>
      <anchor>a544e07e854e1c642f0fd64ebae5bbe15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DX10Controller</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>DX10Controller</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a699787679fa0c570221c8667007b8d31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX10Controller</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a7d9642a22f48a9f5597bd1659744d882</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Controller.html</anchorfile>
      <anchor>a27693332336579716b5e06be541512e9</anchor>
      <arglist>(uid, 0x7EC0F00D, 0x92E142C7, 0x97056433, 0x30FFF119)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DX10Processor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <class kind="struct">Steinberg::Vst::mda::DX10Processor::VOICE</class>
    <member kind="enumvalue">
      <name>NPARAMS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a726ca809ffd3d67ab4b8476646f26635a54b6fffd3ba5eec39da9f688241a194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseProcessor</type>
      <name>Base</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ac6f82520dd4f964fd3f43554e052e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NPARAMS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a726ca809ffd3d67ab4b8476646f26635a54b6fffd3ba5eec39da9f688241a194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DX10Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ab2d7bfe1dfc858a8fd16bca4465c2335</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DX10Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>aad700f3c9b071f39ce14ec499cf45817</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ac1e6fe1a9c58033c643b713d6f34d1fd</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a738c59f4cea27ff49f903708c8b9fe2c</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a25fa38a5317145096dce3ff00b6cde78</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a55903a4515c78f60fffa73b09a924bf4</anchor>
      <arglist>(Steinberg::uint32 val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a8bf90593e40ded7977f2c198b52ad973</anchor>
      <arglist>(ParamValue val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a62305fb2e3bd0a4f92ac0651eb79d5e6</anchor>
      <arglist>(uid, 0xF8713648, 0xE2444174, 0x8AAA3B62, 0xA77F9E2D)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32</type>
      <name>kNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a46709d21fb3511769bcf9e31046d4531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static float</type>
      <name>programParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>af8715f2cc83b4c8e21227803fbc511c1</anchor>
      <arglist>[][NPARAMS]</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>SynthData&lt; VOICE, kEventBufferSize, kNumVoices &gt;</type>
      <name>SynthDataT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ac9ed78aee51f485cca7ca2c85bcdc066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSilence</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a01d616b8716f38ceba8c43bd0152912c</anchor>
      <arglist>(ProcessData &amp;) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>adbc1ac78169fb87f5523d5acd706c11e</anchor>
      <arglist>(ParamID index, ParamValue newValue, int32 sampleOffset) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>aaa45189947fd1f9d19c67f173dac49ac</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>aefc841ac0d9fd85545ed0751c45a3108</anchor>
      <arglist>(const Event &amp;event) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>noteEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a52c1cb1c8eb4d65db9bb0526879bb258</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Fs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a62bb1f644b0753c0d2513e1f81107e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SynthDataT</type>
      <name>synthData</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ac16ff5312692ef65aaadddac31421aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>K</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a372a24837c926db3b9df19f15017182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>af9d275bd4396ad8322439ea0df080181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rati</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>aefff7bac9482ffacb1f47a141ee3d8bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ratf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>aa1a5b7ad15c74ed18ea9103146f7d644</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ratio</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a207ad05f99cc72068a92358861ff5e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>catt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>adcf48f772f5cbbed8917e8fe7d1949ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>cdec</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ae8413f747533d81c8b501b4d58777185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>crel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a968a4f6262b11fae14b90198d0e70353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>depth</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a845896541a0621f5fbd11f0d115ce463</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dept2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a4972398b96e43a961767589fb33a8859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mdec</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a283516433da13e38f12b2859bf2448e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mrel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>adb11c318963da9caa0b60f064afd8880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfo0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a931e9878dd9dca52cf2a0cb56a59a583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfo1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ae417c51fb7fd95ce5398df450788c77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dlfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a5f8700a78baf9f5ef3d49d483da025a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>modwhl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a4c91e0151586bd9b21bc4e486d4b44b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>MW</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a4490680ae32ff80a1372e7b2a18311fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pbend</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a65c8b50901014cb0c49d6c94d753548a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>velsens</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a34fa80efe754f6fd8bf57512b3bfface</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a016abda2855c77dcc1630f9d2f9f8d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>vibrato</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a0b3a22dc61786284db017648b600aabc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rich</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a8e951c7637c5524807294806bb2948cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>modmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>ab3561803d893f6c04c5d35c454bee6e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::uint32</type>
      <name>currentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a905088e2e3d39794f65af93b732374f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kNumVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>afb565af78042a78acd0b4294f588c34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kEventBufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DX10Processor.html</anchorfile>
      <anchor>a38dc2d19e777233d1760e4d12c84d45a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DynamicsController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam9</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a09c9f927924aee25b63b9c2bd5f015e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DynamicsController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a0a99c248bcf48f62c6f5d9ca33b20653</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DynamicsController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>adc7dafef64023abdaa93bad4e6027ce8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsController.html</anchorfile>
      <anchor>abeb44c2a0a14212a0d44ad55f5419a1d</anchor>
      <arglist>(uid, 0xDB1EC488, 0x88364B93, 0xB66C365C, 0x904C6D62)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::DynamicsProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>DynamicsProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a41c9ffc582af2b2bae53ec9a0e386f12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DynamicsProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a70c1f346f507da9b50d0df23dfe8e80e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSilence</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a96098e566609d80b0850e89701436b54</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a3b4405e54a560403dc19fd4a06b08579</anchor>
      <arglist>(uid, 0x9CCF20FE, 0x76CD489C, 0xA9D7EA13, 0xB489CA55)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>af1251a78af95b174cf6fa123dbe441a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rat</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>ac2b7fb9fc534e572efca4ecd24acdfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>ae89365c175ccaf9d7770ef280b851770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a5e16c54b3ec6cc1b5dad0a71dcfd7a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a50e9975569ed80dfccbda8f163d0b15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>xthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>ac50346d95910efd1e3bfb697719dc7e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>xrat</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a0943d83757aadc0db2c57b05cca5944a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>genv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a292680ecc20b2e089bbfe3f95dd26acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gatt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>ae6dcfa01294dc9910a3cef1d2fdda8fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>irel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a7d91d63107adf5d33da81b5bdb8af258</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1DynamicsProcessor.html</anchorfile>
      <anchor>a1ea5d0cb93f22f7d0fdf804bd68c3326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::EditorSizeController</name>
    <filename>classSteinberg_1_1Vst_1_1EditorSizeController.html</filename>
    <member kind="typedef">
      <type>std::function&lt; void(float)&gt;</type>
      <name>SizeFunc</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>ad741ea56f6152c2588b56f489437a33e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EditorSizeController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>adaacfce4d25deb06a5971e726b913f53</anchor>
      <arglist>(EditController *editController, const SizeFunc &amp;sizeFunc, double currentSizeFactor)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EditorSizeController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>aaf211a420e77b05478e8496317035d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>update</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>ac4009a084661640328fe21fb458b2a3f</anchor>
      <arglist>(FUnknown *changedUnknown, int32 message) override</arglist>
    </member>
    <member kind="function">
      <type>VSTGUI::CView *</type>
      <name>verifyView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>a271e0d4801237fae9a463a265a4f6d48</anchor>
      <arglist>(VSTGUI::CView *view, const VSTGUI::UIAttributes &amp;attributes, const VSTGUI::IUIDescription *description) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>a419a7042f1c31265091d5870ed70d100</anchor>
      <arglist>(VSTGUI::CControl *pControl) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>controlBeginEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>afb51d7f8c0a75b05503418a83a8e64ca</anchor>
      <arglist>(VSTGUI::CControl *pControl) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>controlEndEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>a5e27c5c3aba738f92df3f8cc22604b95</anchor>
      <arglist>(VSTGUI::CControl *pControl) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSizeFactor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>ad37d0ab1ad5d1fcc5abe2c3c22ed0ace</anchor>
      <arglist>(double factor)</arglist>
    </member>
    <member kind="variable">
      <type>OBJ_METHODS(EditorSizeController, FObject) private RangeParameter *</type>
      <name>sizeParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>ac72b91645ee694411999befd2ee20357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SizeFunc</type>
      <name>sizeFunc</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>a15e52c729636fd5b144af13652ed7635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32_t</type>
      <name>kSizeParamTag</name>
      <anchorfile>classSteinberg_1_1Vst_1_1EditorSizeController.html</anchorfile>
      <anchor>a53fca78841fd083cb814731f96f6020c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::EPianoController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>EPianoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>abc17a4353fdb4409c985b7a056ab1f02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EPianoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>a6773404a49785daf2b48d40ffa022114</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoController.html</anchorfile>
      <anchor>af0e1586dc62b51549433cb21406d6422</anchor>
      <arglist>(uid, 0xDA4F8237, 0x290441D4, 0xAF96E580, 0xE22C01FF)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::EPianoProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <class kind="struct">Steinberg::Vst::mda::EPianoProcessor::KGRP</class>
    <class kind="struct">Steinberg::Vst::mda::EPianoProcessor::VOICE</class>
    <member kind="typedef">
      <type>BaseProcessor</type>
      <name>Base</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ac6f82520dd4f964fd3f43554e052e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EPianoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a77f410dbef33a88b9b0a5d52f4dd7338</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EPianoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>acbcf1360c00f6662701dd7b7891f0d44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ac1e6fe1a9c58033c643b713d6f34d1fd</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a738c59f4cea27ff49f903708c8b9fe2c</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a25fa38a5317145096dce3ff00b6cde78</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a55903a4515c78f60fffa73b09a924bf4</anchor>
      <arglist>(Steinberg::uint32 val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a8bf90593e40ded7977f2c198b52ad973</anchor>
      <arglist>(ParamValue val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a51628682d1ae3111e98c950186973b1c</anchor>
      <arglist>(uid, 0xFED93DB8, 0x5E81448F, 0xA3B14028, 0x879FA824)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static float</type>
      <name>programParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a8e9b936b7a36e65cb42ea96cdd892887</anchor>
      <arglist>[][12]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32</type>
      <name>kNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a46709d21fb3511769bcf9e31046d4531</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>SynthData&lt; VOICE, kEventBufferSize, kNumVoices &gt;</type>
      <name>SynthDataT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ac9ed78aee51f485cca7ca2c85bcdc066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>adbc1ac78169fb87f5523d5acd706c11e</anchor>
      <arglist>(ParamID index, ParamValue newValue, int32 sampleOffset) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>aaa45189947fd1f9d19c67f173dac49ac</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>aefc841ac0d9fd85545ed0751c45a3108</anchor>
      <arglist>(const Event &amp;event) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>noteEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a52c1cb1c8eb4d65db9bb0526879bb258</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Fs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a62bb1f644b0753c0d2513e1f81107e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>iFs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a9bfa57661d80e1ab66c5ce95cc7cad9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SynthDataT</type>
      <name>synthData</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ac16ff5312692ef65aaadddac31421aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>KGRP</type>
      <name>kgrp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a66cb14ce40d28dd393c60876e775197a</anchor>
      <arglist>[34]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>poly</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a6372b31881f75b222376451e46aa032f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>short *</type>
      <name>waves</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a8007b6b8e5af8f17a20ae7af1ef5affa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>width</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ae426f00e82704fa09578f5446e22d915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfo0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a931e9878dd9dca52cf2a0cb56a59a583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfo1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>ae417c51fb7fd95ce5398df450788c77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dlfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a5f8700a78baf9f5ef3d49d483da025a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lmod</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a2377c4ea182991ab3c1380c90b0b7894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rmod</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a7ed853e8b0b826b43da2ca7cbb06d8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>treb</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a6c8ed22d9a96ac3a838b467205d171ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tfrq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a31f3b012adeb1ad2c80d5dd0dcdec635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>aac84e897226e9f44e01a2cf52653763d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a6af87187b494e66b82de2561eaa5f93a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>af9d275bd4396ad8322439ea0df080181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fine</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>acd9191c0e5c0105430a03731ac9f9701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>random</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a83479daf247dadcf80407207d46d1acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>stretch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a64a453fb28d2d5f5a2aaaced4eb9d57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>overdrive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a1bb96b0ce6b5beb8412364764228f088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>muff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a50f33bf777af7b72d8ae476d45fa40ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>muffvel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a0ba3a69182f515384f92aac43fa740e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sizevel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a23a709f97e4d1d9335c42cfedaf10cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>velsens</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a34fa80efe754f6fd8bf57512b3bfface</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a016abda2855c77dcc1630f9d2f9f8d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>modwhl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a4c91e0151586bd9b21bc4e486d4b44b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::uint32</type>
      <name>currentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a905088e2e3d39794f65af93b732374f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kNumVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>afb565af78042a78acd0b4294f588c34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kEventBufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor.html</anchorfile>
      <anchor>a38dc2d19e777233d1760e4d12c84d45a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EventListCheck</name>
    <filename>classEventListCheck.html</filename>
    <member kind="typedef">
      <type>std::set&lt; Steinberg::int32 &gt;</type>
      <name>Notes</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>ae98d4eba3cef3d00e7f5e366ba054792</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventListCheck</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a3d7bfce99c1285fe9a6ce8525770bc59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>aa118894b3b2151ce285c7fd8e40d4b82</anchor>
      <arglist>(Steinberg::Vst::IEventList *events)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponent</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a13c4ecb2dba03d3cfb14ae0d2e7aa6f6</anchor>
      <arglist>(Steinberg::Vst::IComponent *component)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessSetup</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>aa49668ad96cbc67d87a2dbc27b8f0a4d</anchor>
      <arglist>(Steinberg::Vst::ProcessSetup setup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventLogger</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a669f46aca3bf99696426ef0f43d439e1</anchor>
      <arglist>(EventLogger *eventLogger)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Steinberg::int32</type>
      <name>kMaxEvents</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a4a3a20bfac766aa19e01388ff52af5b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkEventCount</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a68873dcfa44fe0d947c126cb335d6a96</anchor>
      <arglist>(Steinberg::Vst::IEventList *events)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkEventProperties</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>af03f92fb72bfb27288bd552d062614ad</anchor>
      <arglist>(const Steinberg::Vst::Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkEventBusIndex</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a1a69c50fb09aa06afa9b8538f26cffa0</anchor>
      <arglist>(Steinberg::int32 busIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkEventSampleOffset</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a556be7172cc2c97647ad0388f2aa4e9c</anchor>
      <arglist>(Steinberg::int32 sampleOffset)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkEventChannelIndex</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>abc74d5053815f6de3709e0f5fd03475f</anchor>
      <arglist>(Steinberg::int32 busIndex, Steinberg::int32 channelIndex)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkValidPitch</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>acdb09e4fcc0be2ae868343614fdeecd8</anchor>
      <arglist>(Steinberg::int16 pitch)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a18b81593e22ea1f7a57fc33370065b7c</anchor>
      <arglist>(float normVal) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkNoteExpressionValueEvent</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a147de6d29504bb4f688609822cbeb271</anchor>
      <arglist>(Steinberg::Vst::NoteExpressionTypeID type, Steinberg::int32 id, Steinberg::Vst::NoteExpressionValue exprVal) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventLogger *</type>
      <name>mEventLogger</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>ac7b803638761074f9b199990874a1ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Vst::IComponent *</type>
      <name>mComponent</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a97bf8db9a16fed4a26a663b55f840c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Vst::ProcessSetup</type>
      <name>mSetup</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a77f066ba687611a8ef834ce633d9b97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Notes</type>
      <name>mNotePitches</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a2e5d31e5bb4142149e4fbc083678e2b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Notes</type>
      <name>mNoteIDs</name>
      <anchorfile>classEventListCheck.html</anchorfile>
      <anchor>a459972e11583ffb4e25f943ad03db60d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VSTGUI::EventLogDataBrowserSource</name>
    <filename>classVSTGUI_1_1EventLogDataBrowserSource.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>eColoumns</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kType</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a627a1403971fae97cd3e3602051b1051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDescription</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a0a0329a1f39b9a7927086db547823b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCount</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9aa1ada0a9bcfeb6d76b44fb37c9112153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumColumns</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a8d6607732bcd95062fd9c16d5a4f82dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; LogEvent &gt;</type>
      <name>LogEvents</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a917ffbaa6f83813a5db5c18b8af39b0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kType</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a627a1403971fae97cd3e3602051b1051</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDescription</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a0a0329a1f39b9a7927086db547823b30</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCount</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9aa1ada0a9bcfeb6d76b44fb37c9112153</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumColumns</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a630db3b24057ec4478d3730b8b71e1b9a8d6607732bcd95062fd9c16d5a4f82dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventLogDataBrowserSource</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a89196a2307985705f23f0712b18f1de3</anchor>
      <arglist>(Steinberg::Vst::EditControllerEx1 *editController)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EventLogDataBrowserSource</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a1c340fa702572d1f11d02946ab9d3d8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbGetNumRows</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>ac3440ce013f8321eb6eece8cc864a3c1</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbGetNumColumns</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>ad8e06d1b5d95a889436dbfc46f8d85fa</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dbGetColumnDescription</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a66c23e6b22694cfbfb940e48fafd97f2</anchor>
      <arglist>(int32_t index, CCoord &amp;minWidth, CCoord &amp;maxWidth, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CCoord</type>
      <name>dbGetCurrentColumnWidth</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a833a1bcfbb44cbc93ff7bb476dc93e9a</anchor>
      <arglist>(int32_t index, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbSetCurrentColumnWidth</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>aade87a733a25b377db08922615167c1c</anchor>
      <arglist>(int32_t index, const CCoord &amp;width, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CCoord</type>
      <name>dbGetRowHeight</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>aaedf81ba9efd6864803ba803adbedafd</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dbGetLineWidthAndColor</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>aff1cdebbc921ab91f3f98b9f91a9a32f</anchor>
      <arglist>(CCoord &amp;width, CColor &amp;color, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbDrawHeader</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a11b30c6c5ebe554b06f3192ac1437347</anchor>
      <arglist>(CDrawContext *context, const CRect &amp;size, int32_t column, int32_t flags, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbDrawCell</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>aa2b926e415384dc570c2763dfb324cbe</anchor>
      <arglist>(CDrawContext *context, const CRect &amp;size, int32_t row, int32_t column, int32_t flags, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseDown</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a74113028b91457ec76c784cf7c44225b</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseMoved</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a767db462cdf5ec99626544376f1dee4e</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseUp</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>a4e06752519eea6f83496f53139943b27</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbSelectionChanged</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>af04b31ac17a5eb191df423eac8d5c776</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbCellTextChanged</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>adc85fbfa4cff1e5a680bc2f8bcd92c7c</anchor>
      <arglist>(int32_t row, int32_t column, UTF8StringPtr newText, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbCellSetupTextEdit</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>ac561d1c14dc1ad9dbf655b62c608f937</anchor>
      <arglist>(int32_t row, int32_t column, CTextEdit *textEditControl, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbOnKeyDown</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>af9a9c3ab456206ddd45c4df67fa84e39</anchor>
      <arglist>(const VstKeyCode &amp;key, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>updateLog</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>ac133b1fd887b69e33317ce08f3230dd9</anchor>
      <arglist>(const LogEvent &amp;logEvent, bool incrementCount=false)</arglist>
    </member>
    <member kind="function">
      <type>const LogEvents &amp;</type>
      <name>getLogEvents</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>aa6477506b359f7bd5df584419196f189</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LogEvents</type>
      <name>mLogEvents</name>
      <anchorfile>classVSTGUI_1_1EventLogDataBrowserSource.html</anchorfile>
      <anchor>abde7a8563e0588638005573e0aace4ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EventLogger</name>
    <filename>classEventLogger.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; struct LogEvent &gt;</type>
      <name>Codes</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a513bffb7432d07e1abb4620615ce0191</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EventLogger</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a33bf17cb7fad3410ab30e1bfe5267d4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearLogEvents</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a7faec7b6cb226e6c28342e13313d6e33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetLogEvents</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>aa2c8e1de9f4c4fd8852a35985de963ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Codes &amp;</type>
      <name>getLogEvents</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a95b98188e15b4b69b16238ad732ddf2a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addLogEvent</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a181b09f3964380df6a6c13669a4fe443</anchor>
      <arglist>(Steinberg::int32 logId)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>a644718bb2fb240de962dc3c9a1fdf0dc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Codes</type>
      <name>mLogEvents</name>
      <anchorfile>classEventLogger.html</anchorfile>
      <anchor>ac0a41a17c7a69b093cfb840b3e515e8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::Filter</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>Type</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLowpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a0666cd257339a1612b9a59b0c1e39b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kHighpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7aa19e6440821b4e03fca6c6f2a627b701</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBandpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a5783b41f422a6dbb925eb09e60ab1ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumTypes</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a2e41f479d98dd1d3172118dbfe454688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLowpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a0666cd257339a1612b9a59b0c1e39b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kHighpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7aa19e6440821b4e03fca6c6f2a627b701</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBandpass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a5783b41f422a6dbb925eb09e60ab1ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumTypes</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a1d1cfd8ffb84e947f82999c682b666a7a2e41f479d98dd1d3172118dbfe454688</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Filter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a51d4eb657e2e969c31ab6636d57ec33e</anchor>
      <arglist>(Type type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setType</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a2f66c18688b7b45c3dca1086a632a6ba</anchor>
      <arglist>(Type t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>afe0b33e85bc0cd3854f21cb1f3c80f47</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFreqAndQ</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>abbfa035243ff16c21eee803f3df8d488</anchor>
      <arglist>(double frequency, double q)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>aec9c91857bdf466cb3a9c9b16786b034</anchor>
      <arglist>(double sample)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>ad20897c5c8bd47f5d4005989bead0e55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Type</type>
      <name>type</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>ab6f4e6d3fde00ce906e46494f60dfe7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a2bd79d2ab2dfb6aeaf75c2878ad30e1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>invSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a929b522589893cb5f9b834539bdf8ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>in1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a7f667f49d801218f37840bd3b57352ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>in2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a9db338bf2df6b8dd38f3c56f1085c1ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>out1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a0a342fbaeec10b7ef5367df2241db070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>out2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a597745420e9a96a31fb3e2d90d13692d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>b0a0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a156c1393ed43e0fb904eac6033477536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>b1a0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>ac9f06cbe99c465e11675b4457327513e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>b2a0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>ab0a3f2ba4ea3fe5cbce7ed372047b743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>a1a0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a3484b1786aeaa0b010da89d6a76753bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>a2a0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Filter.html</anchorfile>
      <anchor>a74db25f9a66a670ff6eb17b6dbe263ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::NoteExpressionSynth::GlobalParameterState</name>
    <filename>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</filename>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a73833a9aec5b7024feacdc4ad9ee4c25</anchor>
      <arglist>(IBStream *stream)</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a956b025a8fbcfc47d83752e8281f36f6</anchor>
      <arglist>(IBStream *stream)</arglist>
    </member>
    <member kind="variable">
      <type>BrownNoise&lt; float &gt; *</type>
      <name>noiseBuffer</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a7acdec8945e7685bff94534b77d23398</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>masterVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a66d4dcfb9ee0cd26ce8d6cdf035d3669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>masterTuning</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>af8296533e137c4a4fc17a3f9c440ff1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>velToLevel</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>ae43372ec029209d1ad85f7d3efd731c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>noiseVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a786dca41aca90b70645c2b85a4e24d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>sinusVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a2ad0820c2124ec02a6b2d3b0d6c139da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>triangleVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>af37c65ceb82b33109f2551ef771f21e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>squareVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>ad108548e95a96ada9033e7e4b112d194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>releaseTime</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>adc5f0b3e33c0d228c2faa6a4a90fb827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>sinusDetune</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a27e13d4bf656b836f731506edd58ab83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>triangleSlop</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a8e405e5eaf84b86e72d5bad8b80c12ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>filterFreq</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a0fcceaa5e965fb889f27d4cf6475a024</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>filterQ</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>a557e7e854fb05d4e02993cb566cfb106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParamValue</type>
      <name>freqModDepth</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>ace970d52873efcd9dc7f3e2de0fd8d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>filterType</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>af1df6e5ae5e361959ae98d10fe7b7064</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>tuningRange</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>abab3b0e467d9ba070b5fd7b509cabca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int8</type>
      <name>bypassSNA</name>
      <anchorfile>structSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1GlobalParameterState.html</anchorfile>
      <anchor>ac87ef6edbad8b57276a271532ec2cac5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>HostCheck</name>
    <filename>classHostCheck.html</filename>
    <member kind="typedef">
      <type>std::set&lt; Steinberg::Vst::ParamID &gt;</type>
      <name>ParamIDs</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a12545cf3694a77e5788dab059a35cbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HostCheck</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a09a1e801f6256d7411bdfbb3cd3c2e7e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addParameter</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a80e7a4b3c58843955139c761c5212b82</anchor>
      <arglist>(Steinberg::Vst::ParamID paramId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessSetup</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>ac41b1bd0b53ff9d14dabcd95cddedcac</anchor>
      <arglist>(Steinberg::Vst::ProcessSetup &amp;setup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setComponent</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a13c4ecb2dba03d3cfb14ae0d2e7aa6f6</anchor>
      <arglist>(Steinberg::Vst::IComponent *component)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validate</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>ad9813477ab849f30eac311e34705eae0</anchor>
      <arglist>(Steinberg::Vst::ProcessData &amp;data, Steinberg::int32 minInputBufferCount, Steinberg::int32 minOutputBufferCount)</arglist>
    </member>
    <member kind="function">
      <type>const EventLogger::Codes &amp;</type>
      <name>getEventLogs</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a03a745a8f876a04389132f2aa6e0b36d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>EventLogger &amp;</type>
      <name>getEventLogger</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a8842e527c741d16c41b03bdaf75c47a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static HostCheck &amp;</type>
      <name>Instance</name>
      <anchorfile>classHostCheck.html</anchorfile>
      <anchor>a7e824637c9fbf07b1bd33f0bbd5a40f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::HostCheckerController</name>
    <filename>classSteinberg_1_1Vst_1_1HostCheckerController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::ChannelContext::IInfoListener</base>
    <base>Steinberg::Vst::IXmlRepresentationController</base>
    <base>Steinberg::Vst::IAutomationState</base>
    <base>Steinberg::Vst::IEditControllerHostEditing</base>
    <base>Steinberg::Vst::IMidiMapping</base>
    <base>Steinberg::Vst::IMidiLearn</base>
    <base>Steinberg::Vst::INoteExpressionController</base>
    <base>Steinberg::Vst::INoteExpressionPhysicalUIMapping</base>
    <base>Steinberg::Vst::IKeyswitchController</base>
    <base>Steinberg::Vst::IParameterFunctionName</base>
    <class kind="struct">Steinberg::Vst::HostCheckerController::ScoreEntry</class>
    <member kind="typedef">
      <type>VSTGUI::UTF8StringPtr</type>
      <name>UTF8StringPtr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af7e79066204c7e0be05f30d63bcafb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IController</type>
      <name>IController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af63358114b145c306987ac513b4e908d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IUIDescription</type>
      <name>IUIDescription</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aa946c9736e3aad934fd2d9b7b916cc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::VST3Editor</type>
      <name>VST3Editor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ae5ece0a3a8c6e4295d9adedb76d6edd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HostCheckerController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a65358ccb23d2c1b1ebc2e245eec0b824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getUnitByBus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a916c9d3245f4580b4effa6d977a64208</anchor>
      <arglist>(MediaType type, BusDirection dir, int32 busIndex, int32 channel, UnitID &amp;unitId) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentHandler</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a375821f541e8b3338d3e2dbfae7433d8</anchor>
      <arglist>(IComponentHandler *handler) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getUnitCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a3ae1f7465f6641b01f76a098d0467b72</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>beginEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a60aee36a21805e563d61242be6e7d8b0</anchor>
      <arglist>(ParamID tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>endEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a55f180ed79364469774124be9d724160</anchor>
      <arglist>(ParamID tag) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IPlugView *</type>
      <name>createView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aa2fea25360b1f4824345acc423b1f8db</anchor>
      <arglist>(FIDString name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>connect</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a170e3042a5e695227c6931fba321debb</anchor>
      <arglist>(IConnectionPoint *other) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>VSTGUI::CView *</type>
      <name>createCustomView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a668ebd0a20787d498f761c94e34f6203</anchor>
      <arglist>(VSTGUI::UTF8StringPtr name, const VSTGUI::UIAttributes &amp;attributes, const VSTGUI::IUIDescription *description, VSTGUI::VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willClose</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ab3ab4a69e656ba2673a228fb6e22e2bd</anchor>
      <arglist>(VSTGUI::VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setKnobMode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a9c53db76959c3f687ebf0a9e039b5523</anchor>
      <arglist>(KnobMode mode) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>openHelp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a990e31f5d0bcc88d2c3a8e8c370a23ca</anchor>
      <arglist>(TBool) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>openAboutBox</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aff61c36b9f383b24e53096d1ff4ca451</anchor>
      <arglist>(TBool) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setChannelContextInfos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a49f061b7873f1b192cbdcbc9e731ff09</anchor>
      <arglist>(IAttributeList *list) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getXmlRepresentationStream</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a77ade9b8fc6f6bd01f8c225dda17a415</anchor>
      <arglist>(RepresentationInfo &amp;info, IBStream *stream) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getMidiControllerAssignment</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>accb2b76127645a7a8ec171c7b220ce8d</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiControllerNumber, ParamID &amp;id) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>onLiveMIDIControllerInput</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ad8535466d93aa534a40ae1244940cc52</anchor>
      <arglist>(int32 busIndex, int16 channel, CtrlNumber midiCC) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getNoteExpressionCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a5d93e889ab504c7e08356683094be8a5</anchor>
      <arglist>(int32 busIndex, int16 channel) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a487e1f5b80a28b511301f98dca4a5d0b</anchor>
      <arglist>(int32 busIndex, int16 channel, int32 noteExpressionIndex, NoteExpressionTypeInfo &amp;info) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>abc366969b6b2e1cef34c221db92e806d</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, NoteExpressionValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af4d16dae99ff1010b80359cb70500e31</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, const TChar *string, NoteExpressionValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getPhysicalUIMapping</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a49b13e53849d51156521f6270c7ad6ee</anchor>
      <arglist>(int32 busIndex, int16 channel, PhysicalUIMapList &amp;list) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getKeyswitchCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a07afea77ec32591cdc9647baf9e5341c</anchor>
      <arglist>(int32 busIndex, int16 channel) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getKeyswitchInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>acbe6bf21938011dad882eda62cfde163</anchor>
      <arglist>(int32 busIndex, int16 channel, int32 keySwitchIndex, KeyswitchInfo &amp;info) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setAutomationState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a4b5c159b9bb3502dc68a852b65c631cb</anchor>
      <arglist>(int32 state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>beginEditFromHost</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af90af6cdca41f0ab7ac5d4387c28efd8</anchor>
      <arglist>(ParamID paramID) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>endEditFromHost</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a480ad57ca0f00afd09fb0bb580865688</anchor>
      <arglist>(ParamID paramID) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParameterIDFromFunctionName</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a44748e8541aeedc907128769c8bfd023</anchor>
      <arglist>(UnitID unitID, FIDString functionName, ParamID &amp;paramID) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editorAttached</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ac055deeb5f5ddca6e9e030e06a2fac7c</anchor>
      <arglist>(EditorView *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editorRemoved</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a893fe346bfbb357724bb3e4154ff80af</anchor>
      <arglist>(EditorView *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>editorDestroyed</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a3ca86a9534ad2bb3adb4f5e4d71d68a5</anchor>
      <arglist>(EditorView *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IController *</type>
      <name>createSubController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af161b55b382c62c4868a760fff750cd0</anchor>
      <arglist>(UTF8StringPtr name, const IUIDescription *description, VST3Editor *editor) override</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>queryInterface</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af2233bd23acc913cd10e4a30916e5dda</anchor>
      <arglist>(const Steinberg::TUID iid, void **obj) override</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>REFCOUNT_METHODS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ac24758feb9e31f29d8ca5505bfac794e</anchor>
      <arglist>(EditControllerEx1) static FUnknown *createInstance(void *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFeatureLog</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a264a4731eb355e8e5d055041e6513ce6</anchor>
      <arglist>(int32 iD, int32 count=1, bool addToLastCount=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getSavedSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a6afc4733be833dacb21a8dd047d30c55</anchor>
      <arglist>(ViewRect &amp;size) const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; Steinberg::Vst::EditorView * &gt;</type>
      <name>EditorVector</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a2acf420e46d11239fb9fb6f11447c41e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; Steinberg::Vst::EditorView *, EditorSizeController * &gt;</type>
      <name>EditorMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a7eb7bc3ca514ede042c8ad5d01414f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; Steinberg::Vst::ParamID, int32 &gt;</type>
      <name>EditFromHostMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a7fd8b0bb033a680562d59922175ae088</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; uint32, ScoreEntry &gt;</type>
      <name>ScoreMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a024be3950228094475b832cfa5228d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>extractCurrentInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aedf0d687c00670ca351bd00b0b83f440</anchor>
      <arglist>(EditorView *editor)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>float</type>
      <name>updateScoring</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ab4092f1007c0dff940e49da07e61d7c9</anchor>
      <arglist>(int32 iD)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>onProgressTimer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a86f4dd968f780bf65369830c86adfa6a</anchor>
      <arglist>(VSTGUI::CVSTGUITimer *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; VSTGUI::VST3Editor *, VSTGUI::SharedPointer&lt; VSTGUI::CDataBrowser &gt; &gt;</type>
      <name>mDataBrowserMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>afc56b230d780947eb7b477efb0e055f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VSTGUI::SharedPointer&lt; VSTGUI::EventLogDataBrowserSource &gt;</type>
      <name>mDataSource</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>abcb2607c54f1115af6663eed8d3cee25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mLatencyInEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a0e0358aa35e63cb6a96d4738b86a4cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>mWantedLatency</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a182625d2b02683f36ec4aafa85911076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditorVector</type>
      <name>editors</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a2028ab458d2d798ff29b76a561306dc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditorMap</type>
      <name>editorsSubCtlerMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a06f291cb573e68c068f1575530e558a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>width</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a9ddae86018522bf2d708066884d89b3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>height</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ad6796376ef5cc027ed35c4b2dd170f41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>sizeFactor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>abaafe2485a80cde3e71a231286208fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EditFromHostMap</type>
      <name>mEditFromHost</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a67e68448677c53ae9cb4511ffd08672f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ThreadChecker &gt;</type>
      <name>threadChecker</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>af7bb4bec2475d18c304cc1263092e2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mNumKeyswitch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a7f1abbcdbf4f1b3df814931a9579539d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScoreMap</type>
      <name>mScoreMap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>aa306b40e142d5ff3b73da7931b116690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VSTGUI::CVSTGUITimer *</type>
      <name>mProgressTimer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ac01c6fa61e7f27fc13e2a7c47c27f792</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IProgress::ID</type>
      <name>mProgressID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>a7bd9dc65a3c41f9493abc417fa3342b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mInProgress</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerController.html</anchorfile>
      <anchor>ace6060dd0ae226a8628785a44198e4b8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::HostCheckerProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <base>Steinberg::Vst::IAudioPresentationLatency</base>
    <base>Steinberg::Vst::IPrefetchableSupport</base>
    <member kind="function">
      <type></type>
      <name>HostCheckerProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a6597f3049abfd875de6339005caacc5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setupProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a754f2c1b5beff1179b96278344f1ef96</anchor>
      <arglist>(ProcessSetup &amp;setup) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getLatencySamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aac50582d4f3f12401ae426cc31b33287</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getTailSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a2f5f13092735afd906695953628a602e</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>canProcessSampleSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a1c7a40be692f5ed7f009896af248beed</anchor>
      <arglist>(int32 symbolicSampleSize) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a6fe399148064f1f04eb3f6d71c1f966d</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getRoutingInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a3e60369d6e79991573053e5e1d70fef3</anchor>
      <arglist>(RoutingInfo &amp;inInfo, RoutingInfo &amp;outInfo) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>activateBus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>af98a434f211539013a174bbe191156e3</anchor>
      <arglist>(MediaType type, BusDirection dir, int32 index, TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getBusArrangement</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>abdb2b4992ff1c41eca948831dbe372b9</anchor>
      <arglist>(BusDirection dir, int32 busIndex, SpeakerArrangement &amp;arr) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setAudioPresentationLatencySamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aee99fc996654dfbb3e371d85f925ce15</anchor>
      <arglist>(BusDirection dir, int32 busIndex, uint32 latencyInSamples) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getPrefetchableSupport</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a41f2f903ceb464691f853ec06269767b</anchor>
      <arglist>(PrefetchableSupport &amp;prefetchable) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>uint32</type>
      <name>getProcessContextRequirements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a2abf85610a391b321822c95dbed515b0</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addLogEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a181b09f3964380df6a6c13669a4fe443</anchor>
      <arglist>(Steinberg::int32 logId)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>informLatencyChanged</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a3d2c434afec1de448b62933f1819d988</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendLatencyChanged</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ad4712acdcb59fd76fa82ef5a24d7f05c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addLogEventMessage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aea6b5378111b9c285895333620678821</anchor>
      <arglist>(const LogEvent &amp;logEvent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendLogEventMessage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ad990b6aadf707d63435e58dc9e339668</anchor>
      <arglist>(const LogEvent &amp;logEvent)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendNowAllLogEvents</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a47c9a0666fc818febbfe5a760309af56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>HostCheck</type>
      <name>mHostCheck</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>af97f6f6a592f1fab3c8f81af699a0b99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BypassProcessor&lt; Vst::Sample32 &gt;</type>
      <name>mBypassProcessorFloat</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ae8562f8d887fad95cbf102cf73bf9222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BypassProcessor&lt; Vst::Sample64 &gt;</type>
      <name>mBypassProcessorDouble</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a658d09c308834934bb176a42ac9556d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mLastBlockMarkerValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ada49ef10ba1ab283b51c9feeeebaf8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mNumNoteOns</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a67ca6088c256b04bb08a68badf4fcf00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mLatency</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aebb3bc994a79d305c48d82da0b14d437</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mWantedLatency</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aed02d7ec62e586feebfa60bfbf6d46a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mGeneratePeaks</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ad73b751920c09df1e9a2fd1ec37286c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>State</type>
      <name>mCurrentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ab6a0125edee61e33a460612e9c124e5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mMinimumOfInputBufferCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a38897792d7e5b40cf6b1281ce8f9e587</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mMinimumOfOutputBufferCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a8d173fe27c3c33e86138be563a23cfe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TSamples</type>
      <name>mLastContinuousProjectTimeSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a139756f2008ef6b6df64b1d11a45afe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TSamples</type>
      <name>mLastProjectTimeSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ab6079e6b11197f30f7639f7c6bc169de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mLastNumSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a068f99a30130361e5520332a2352269d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mLastState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ad041b268991632c5748992eaae4d3d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unique_ptr&lt; ThreadChecker &gt;</type>
      <name>threadChecker</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>af7bb4bec2475d18c304cc1263092e2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Base::Thread::FLock</type>
      <name>msgQueueLock</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a8b5b7047992970f35052164dd7ae14b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::list&lt; LogEvent * &gt;</type>
      <name>msgQueue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>a307db218f2f193eb1b8a148f3ec6234b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>aa09864e5d6f2062a14eb8ad2d1db297d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mSetActiveCalled</name>
      <anchorfile>classSteinberg_1_1Vst_1_1HostCheckerProcessor.html</anchorfile>
      <anchor>ab2e0fa82b6165abab8cb9fe58b424b91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::IDelayTestController</name>
    <filename>classSteinberg_1_1Vst_1_1IDelayTestController.html</filename>
    <base>Steinberg::FUnknown</base>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>doTest</name>
      <anchorfile>classSteinberg_1_1Vst_1_1IDelayTestController.html</anchorfile>
      <anchor>a3348cedf7773d89835f8df92d8dfdec5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const FUID</type>
      <name>iid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1IDelayTestController.html</anchorfile>
      <anchor>ae78a44399218c930be44d3aa46521d0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ImageController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ImageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a24089951a536a3bf260e9e8da028db95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>abb7018df0560c1ce3c3485dc782e8b55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageController.html</anchorfile>
      <anchor>a674b65d2f13be729d73ff7bb0d80ea72</anchor>
      <arglist>(uid, 0x18E85131, 0x09CE429D, 0x83E6621D, 0x74EF40FD)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ImageProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>ImageProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a20eb0f92b9f59876d8eda29f59a28dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ImageProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>ad9c8c08393e8422518560215c3769216</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>afffe3214affb09d38ed6745f70800232</anchor>
      <arglist>(uid, 0xE99952F1, 0x3CBD42DE, 0x98604990, 0xD4FB3212)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>l2l</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>aa5406a33f66b3c9f16d02ba90cbd1767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>l2r</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a5063ff21a588dae1717397282e1e24e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>r2l</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>a90746f678884f18165ffada6836b9609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>r2r</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ImageProcessor.html</anchorfile>
      <anchor>aaf0ecf6c58dd0528f815f694b542fecc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::IndexedParameter</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</filename>
    <base>Steinberg::Vst::mda::BaseParameter</base>
    <member kind="function">
      <type></type>
      <name>IndexedParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>ab99bbd5a596e2d2ab56798c21abc0096</anchor>
      <arglist>(const TChar *title, const TChar *units, int32 stepCount, ParamValue defaultValueNormalized, int32 flags, int32 tag, UnitID unitID=kRootUnitId)</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toPlain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>af7e7f0fc9f3c394f66dc5a8947742272</anchor>
      <arglist>(ParamValue _valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>a64274ff145c58620b9b7c32fff087049</anchor>
      <arglist>(ParamValue plainValue) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>ab8cb2d05d8f8af76a610e783faecb324</anchor>
      <arglist>(ParamValue _valueNormalized, String128 string) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>af7aab53314d6d62ad5b017ba85ab50b5</anchor>
      <arglist>(const TChar *string, ParamValue &amp;_valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setIndexString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>a6dacd73de9f94d1d76f2931ea26e39fa</anchor>
      <arglist>(int32 index, const String128 str)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~IndexedParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>a74963ad2f899909051efd21b14d7280a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>String128 *</type>
      <name>indexString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1IndexedParameter.html</anchorfile>
      <anchor>a1609a5f853275559953142048d6fc929</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::JX10Controller</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>JX10Controller</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>abbdd54aa8349b5d3785f6b4ffc6be258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JX10Controller</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>abcd667d7cf262f55800735404c9d0966</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Controller.html</anchorfile>
      <anchor>a6dc77184f74ab9bc5d66df6ccfafb9d8</anchor>
      <arglist>(uid, 0x91E8798D, 0xEDE644C9, 0xB9EB444B, 0x5F0A8AA7)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::JX10Processor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <class kind="struct">Steinberg::Vst::mda::JX10Processor::VOICE</class>
    <member kind="typedef">
      <type>BaseProcessor</type>
      <name>Base</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac6f82520dd4f964fd3f43554e052e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>JX10Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>af31c18fc7537b3d45269685d2425e115</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JX10Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>afc4a49db5b01382b5a2ebdc442fc0c09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac1e6fe1a9c58033c643b713d6f34d1fd</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a738c59f4cea27ff49f903708c8b9fe2c</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a25fa38a5317145096dce3ff00b6cde78</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a55903a4515c78f60fffa73b09a924bf4</anchor>
      <arglist>(Steinberg::uint32 val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a8bf90593e40ded7977f2c198b52ad973</anchor>
      <arglist>(ParamValue val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a44e984d76165bf57a36883fb6843c231</anchor>
      <arglist>(uid, 0x82CD49DE, 0x13D743BA, 0xABDAC299, 0x1CE06F7C)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32</type>
      <name>kNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a46709d21fb3511769bcf9e31046d4531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static float</type>
      <name>programParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a1dcde4f7c5a151a3c30ef9097c5ca42e</anchor>
      <arglist>[kNumPrograms][24]</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>SynthData&lt; VOICE, kEventBufferSize, kNumVoices &gt;</type>
      <name>SynthDataT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac9ed78aee51f485cca7ca2c85bcdc066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aaa45189947fd1f9d19c67f173dac49ac</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aefc841ac0d9fd85545ed0751c45a3108</anchor>
      <arglist>(const Event &amp;event) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>noteEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a52c1cb1c8eb4d65db9bb0526879bb258</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>adbc1ac78169fb87f5523d5acd706c11e</anchor>
      <arglist>(ParamID index, ParamValue newValue, int32 sampleOffset) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearVoice</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ada53be8cee0c75986f38cb805e2f6261</anchor>
      <arglist>(VOICE &amp;v)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SynthDataT</type>
      <name>synthData</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac16ff5312692ef65aaadddac31421aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>semi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a568d53fc4bda906bbe5105ddbecbef67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>cent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ade940a7370c158f9cae4af33aa7b213b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>af9d275bd4396ad8322439ea0df080181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>detune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ab57a62f4202758be879127be7052b4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a34e81c0b73f733a4551266a7f4399fd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fzip</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>af9882187ba7289aab8faecf7a211820e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a0c9536c19f6cf12c236110a12a48f90f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtlfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a4fdfcd545d24663541e8e580c4165869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtenv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aaace52ea5b2a41b11ace64d2933934da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtvel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a67e1d8843997c638a20755e3f52a0935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filtwhl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac25d3b681c3b3d317fdb6af03bb24633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>oscmix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aaf886bb95d1ffb08fccf57844db8bc18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>noisemix</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aea916d412157bb9c9be82adafa7644cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dec</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ab3b0edc273e86e845c8bce27fad19fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a35babf9ec0afa27e16577bf2ac0bc057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fatt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a2cf3ac60d40a8961ac2510a017302c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fdec</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a24307b206470b6f801d071c4e44fbd95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fsus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a358a816f54ab0f2066dc089b1e14b572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>frel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aea17c6c9d20dac0bd840883e57445280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ac43c0eb0d896b09449a184f40150149c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dlfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a5f8700a78baf9f5ef3d49d483da025a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>modwhl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a4c91e0151586bd9b21bc4e486d4b44b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>press</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a512591c298ab1304bf391d08271daf2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pbend</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a65c8b50901014cb0c49d6c94d753548a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ipbend</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ad412e51ecd53e42fd66208a96407fd8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rezwhl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a03ef6a8c64ff7d74efc1fb54bb8b2788</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>velsens</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a34fa80efe754f6fd8bf57512b3bfface</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a016abda2855c77dcc1630f9d2f9f8d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>voltrim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>ad3afa7d2709fc11bf7c566d8c4ade0d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>vibrato</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a0b3a22dc61786284db017648b600aabc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pwmdep</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a3c4a71dcfd66d2dd8eb8411456302a0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lfoHz</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aa7e061d9e236093fbc03c66a8b0b1e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>glide</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>adcd0e853401db58c92eaa3c2768ff6d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>glidedisp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a104a83f95295a5d517c7f55f303eb6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>K</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a372a24837c926db3b9df19f15017182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>lastnote</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a1218aeb20cac0f3c0a7ed459b11572c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>veloff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a9037b4211787858fa9c54ed0a10b2f79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::uint32</type>
      <name>noise</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>aae0c2791360c2a563cf68bb0b4813a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::uint32</type>
      <name>currentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a905088e2e3d39794f65af93b732374f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kEventBufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a38dc2d19e777233d1760e4d12c84d45a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kNumVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>afb565af78042a78acd0b4294f588c34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static const int32</type>
      <name>KMAX</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1JX10Processor.html</anchorfile>
      <anchor>a5e0b745fc532cdbf2e422cb53a9433a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::EPianoProcessor::KGRP</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>root</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>a18eb67f2a9e7806f7473a2b5f97a53d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>high</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>ae334d93165b593cf66cdc5def4e8fce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>end</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>aae31c8aaf4f0d8ca823fe4e2cf26de0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>loop</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>a9531807d582fba717657d34fc72584cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::PianoProcessor::KGRP</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>root</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>a18eb67f2a9e7806f7473a2b5f97a53d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>high</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>ae334d93165b593cf66cdc5def4e8fce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>end</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>aae31c8aaf4f0d8ca823fe4e2cf26de0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>loop</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1KGRP.html</anchorfile>
      <anchor>a9531807d582fba717657d34fc72584cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LeslieController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumeration">
      <type></type>
      <name>ParameterIDs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a9d66ddaf312a7a2580a3624fc05860f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a23cd617e615e56c4d6019ecc4553a3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6aa88badc7e8cd93437d2ccf85c589c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a7ca1e7303f91236e87a28d0da99ce499</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a751a22f671acea2765309476c6839be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a4b064a62c3d4542e876b5111292b6f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam6</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85aeb9693d3c556e5f379ad76ced92aec7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam7</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a591e10efec13db87903110116e4e2531</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam8</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85a6578cb3025639004f3ae4cd5e74ff8f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a6d2a1929151bc7086c493054f3a7be85af908d754c50a6918f78d2bc00b5ffe55</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LeslieController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a0830a7c4e566bbf4ae18958c6ededbb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LeslieController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>ace27e8c9182412956028ffa70d53c326</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieController.html</anchorfile>
      <anchor>afdc61ee77dc9f5804accf869e08d264d</anchor>
      <arglist>(uid, 0x3AC7BB1E, 0xE8C74788, 0x8D29C9BF, 0x9D9A51F8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LeslieProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>LeslieProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a9795cdf660ee0fa4967e49b141d701af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LeslieProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a97dfe54d414592753aa183f49760cd28</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>aa7cb371aa0826a90f000fa5140a1087c</anchor>
      <arglist>(uid, 0xFBD3AD80, 0x9E2847E0, 0xB87CDEC3, 0x5C0469B1)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a3f51c9365cb9fbaafe1c923f378166a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbuf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a386ee47d5e3d4167555bcbe7e458c50e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fbuf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a820e341f203290512ccff176b4923970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>twopi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a331c522690e3ec54032538f9c9272fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hspd</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ae823473c2a6a07fab81543ff9521f576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a16b31222df0f65f2f673cb819279d694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hmom</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a07e9b82cfcf013853d2f263e1b7b770e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a689b9473fc4d738421dba7ed80050345</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hwid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ae39ac864eae89dac86e131f89038b581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hlev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a4b2c559c2f162c828c6bf91d1567a959</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>hdep</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a6e7ca96ed08d072900c1e5e2f9b3f20a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lspd</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a73c29127c0e6c2b5a66a809e524174a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a11784160b1e993a66a2166bfc11a4359</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lmom</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a65b24ccf522cbce071a5fd3694a15435</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a16c6b83c21dc8f1d712723bac6968670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lwid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a8c54deb8bdb793602cb816113bcd2c7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>llev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ade24b85bbc1d40c8b9dd564baabd809d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>aca3852dab23cf0066809ecc1997fb58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>hbuf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ae859c6fbd7fb9f595683538ee5e98735</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>hpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a90dbe0398b94e04f7ed428ff6f3bbb39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>chp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ac60209db5c35aadc146475c3163dae77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dchp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>aae1acf224529d76dc2d57a4b2ac5064e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>clp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a553c6e115917b80711dba186bcb67189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dclp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a3da6b7bb71e273b8871c854e9dfa47ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>shp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ab49b42057e368b8d941233cd73c04b11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dshp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a996de71766811b2de93fd92f5688d100</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>slp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>ad588f981e1ac350fe3f1a03043f466b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dslp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LeslieProcessor.html</anchorfile>
      <anchor>a8119b8904f059c797853d38d66c0e11f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LimiterController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>LimiterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>ab931f1f45358939f7a6e46f6bbe73f6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LimiterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a82216b62e2ecc0257f15d87d7630e3e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterController.html</anchorfile>
      <anchor>a2dd5515bd1d22f29d7bc28603b4b439e</anchor>
      <arglist>(uid, 0x886C856F, 0x7C164A28, 0x9AD212A9, 0x857386A0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LimiterProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>LimiterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a620bc38468213a1a1200556116d00e6b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LimiterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a12a5b3a002d504de38dca4ad0f81510e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSilence</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a96098e566609d80b0850e89701436b54</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a37d57b18851899dbad23a2a054409c60</anchor>
      <arglist>(uid, 0xE13C8DA0, 0x72DE4A97, 0xA0890C28, 0x0BDA61F8)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thresh</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>aac8fef4e3b3d833f16d5cef8ddce1ae1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>aca3852dab23cf0066809ecc1997fb58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LimiterProcessor.html</anchorfile>
      <anchor>a5e16c54b3ec6cc1b5dad0a71dcfd7a50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>LogEvent</name>
    <filename>structLogEvent.html</filename>
    <member kind="function">
      <type></type>
      <name>LogEvent</name>
      <anchorfile>structLogEvent.html</anchorfile>
      <anchor>a1b7daede73e8c76095075f2332079223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogEvent</name>
      <anchorfile>structLogEvent.html</anchorfile>
      <anchor>ab3d227b6db086ec6fc78dc459f083dbe</anchor>
      <arglist>(const LogEvent &amp;other)</arglist>
    </member>
    <member kind="variable">
      <type>Steinberg::int64</type>
      <name>id</name>
      <anchorfile>structLogEvent.html</anchorfile>
      <anchor>adb1c51b08361cced752f0a06c00ad5e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Steinberg::int64</type>
      <name>count</name>
      <anchorfile>structLogEvent.html</anchorfile>
      <anchor>a50dede692c8ec72ffbf1eab34d186ff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>fromProcessor</name>
      <anchorfile>structLogEvent.html</anchorfile>
      <anchor>a6a2e858a38297252fe1331124ae58d86</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::LogScale</name>
    <filename>classSteinberg_1_1Vst_1_1LogScale.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>LogScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a7abbd2328f395af191fab07e08d49bb1</anchor>
      <arglist>(T srcMin, T srcMax, T destMin, T destMax, T inValue=0.5, T outValue=0.1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a0e8c44a773e2ad3c68922ea21425b582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeScaling</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>abd188df42eaaa3d59c1b30fd11bfca45</anchor>
      <arglist>(T srcMin, T srcMax, T destMin, T destMax, T inValue, T outValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a2fcf8a0d8a8cd9a77e1665529ad59481</anchor>
      <arglist>(T *pIn, T *pOut, int32 nSamples)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>scale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>adad3580d8b51070ba4cadf0db28237ec</anchor>
      <arglist>(T input) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invscale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>af08ca80291fe9c1cb2fe3370a8e122ad</anchor>
      <arglist>(T *pIn, T *pOut, int32 nSamples)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>invscale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a64b63634dfb964dd212513e5447c3f44</anchor>
      <arglist>(T input) const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>invscaleCheck</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>aeec24d9072132348206293fa45f65c39</anchor>
      <arglist>(T in) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setScaling</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a12d998de96931d1d29b808ce0e400115</anchor>
      <arglist>(T srcMin, T srcMax, T destMin, T destMax, T inValue, T outValue)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>scaleFactor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>adfdc379fe1efc92fd013b49e24ea6d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>scaleFactorInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a7f25d28a1b9ee86bca0a15e69144bfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>srcScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>ae7fc76233fcce25fa0876c7c25fdcf75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>srcScaleInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>ab09e905e975121ad510d88a44c727090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>srcMin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a4ac3b22a40766fdad26d2a419ccbd5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>expo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a80421b87027aba8fe8a854b99080c633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>expoInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>abc50abe8ae9ffa1c61dc23eed88b1335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>T</type>
      <name>destMin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a5907987cd11dc75c1db013627967568c</anchor>
      <arglist></arglist>
    </member>
    <docanchor file="classSteinberg_1_1Vst_1_1LogScale" title="Example for stretched lower range">example1</docanchor>
    <docanchor file="classSteinberg_1_1Vst_1_1LogScale" title="Example for compressed lower range">example2</docanchor>
    <docanchor file="classSteinberg_1_1Vst_1_1LogScale" title="Example for filter frequency range">example3</docanchor>
  </compound>
  <compound kind="class">
    <name>LogScale&lt; ParamValue &gt;</name>
    <filename>classSteinberg_1_1Vst_1_1LogScale.html</filename>
    <member kind="function">
      <type></type>
      <name>LogScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a7abbd2328f395af191fab07e08d49bb1</anchor>
      <arglist>(ParamValue srcMin, ParamValue srcMax, ParamValue destMin, ParamValue destMax, ParamValue inValue=0.5, ParamValue outValue=0.1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LogScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a0e8c44a773e2ad3c68922ea21425b582</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>changeScaling</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>abd188df42eaaa3d59c1b30fd11bfca45</anchor>
      <arglist>(ParamValue srcMin, ParamValue srcMax, ParamValue destMin, ParamValue destMax, ParamValue inValue, ParamValue outValue)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a2fcf8a0d8a8cd9a77e1665529ad59481</anchor>
      <arglist>(ParamValue *pIn, ParamValue *pOut, int32 nSamples)</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>scale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>adad3580d8b51070ba4cadf0db28237ec</anchor>
      <arglist>(ParamValue input) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>invscale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>af08ca80291fe9c1cb2fe3370a8e122ad</anchor>
      <arglist>(ParamValue *pIn, ParamValue *pOut, int32 nSamples)</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>invscale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a64b63634dfb964dd212513e5447c3f44</anchor>
      <arglist>(ParamValue input) const</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>invscaleCheck</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>aeec24d9072132348206293fa45f65c39</anchor>
      <arglist>(ParamValue in) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setScaling</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a12d998de96931d1d29b808ce0e400115</anchor>
      <arglist>(ParamValue srcMin, ParamValue srcMax, ParamValue destMin, ParamValue destMax, ParamValue inValue, ParamValue outValue)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>scaleFactor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>adfdc379fe1efc92fd013b49e24ea6d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>scaleFactorInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a7f25d28a1b9ee86bca0a15e69144bfce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>srcScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>ae7fc76233fcce25fa0876c7c25fdcf75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>srcScaleInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>ab09e905e975121ad510d88a44c727090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>srcMin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a4ac3b22a40766fdad26d2a419ccbd5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>expo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a80421b87027aba8fe8a854b99080c633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>expoInv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>abc50abe8ae9ffa1c61dc23eed88b1335</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>destMin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScale.html</anchorfile>
      <anchor>a5907987cd11dc75c1db013627967568c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::LogScaleParameter</name>
    <filename>classSteinberg_1_1Vst_1_1LogScaleParameter.html</filename>
    <templarg></templarg>
    <base>Steinberg::Vst::Parameter</base>
    <member kind="function">
      <type></type>
      <name>LogScaleParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>a97df6afca0d6e50d9f96e05c33ab7d5a</anchor>
      <arglist>(const TChar *title, ParamID tag, LogScale&lt; T &gt; &amp;logScale, const TChar *units=0, int32 flags=ParameterInfo::kCanAutomate, UnitID unitID=kRootUnitId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>toString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>a4fcf42f8bf05a987eea542a8ca66be1b</anchor>
      <arglist>(ParamValue _valueNormalized, String128 string) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fromString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>afd9fed1cb3992645fc1f22b7862c2453</anchor>
      <arglist>(const TChar *string, ParamValue &amp;_valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamValue</type>
      <name>toPlain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>aeb06713e7c954a488ea7e38584081d8f</anchor>
      <arglist>(ParamValue _valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ParamValue</type>
      <name>toNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>a97263ffb42a20809b0265e426eef11d2</anchor>
      <arglist>(ParamValue plainValue) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable">
      <type>OBJ_METHODS(LogScaleParameter&lt; T &gt;, Parameter) protected ParamValue</type>
      <name>multiplier</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LogScaleParameter.html</anchorfile>
      <anchor>a1812bfbb9b7bbfd4f7349d44ba6b8ee7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LoudnessController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>LoudnessController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>ab1e069a5e328d16ced977ee0bf131833</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoudnessController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>a15a046a994045f876d80d45fb1254717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessController.html</anchorfile>
      <anchor>ad26032638d986cda53d3d88803e335b9</anchor>
      <arglist>(uid, 0x9184DDF5, 0x6A2B4C5B, 0xA51BF670, 0x2A8B1BB0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::LoudnessProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>LoudnessProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>afb7834026dca839331366161d17b2ff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LoudnessProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a276eca5290e17ef9227e019ca41d77b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkSilence</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a01d616b8716f38ceba8c43bd0152912c</anchor>
      <arglist>(ProcessData &amp;) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a20517a6b289a152bbe2dea4d88699472</anchor>
      <arglist>(uid, 0xF2351D3C, 0xA6E94D47, 0x9E17EB3B, 0x6F30BA7C)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Z0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a96c31e89763ed89de18ee0a2945004ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Z1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a627c2297758371e8e0ff55c5d8b98810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Z2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a62c3c6c279f672e5f6ac32ff3a04d133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Z3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a7f0c18c70cdaaa13df3e80baa55e9b9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>A0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>ab3c9ffd64bc35edd9fcc2bb7827d5872</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>A1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>aafd52dfb8f7111164a986419f44939d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>A2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a5d476218c50f30055b64d7cf946c2021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>aca3852dab23cf0066809ecc1997fb58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>igain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>a2fa065b100d8f5db66d6ec88074e0068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ogain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>ab29569cfc938b2e44f2430e869228958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1LoudnessProcessor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::Validator::ModuleTestConfig</name>
    <filename>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</filename>
    <member kind="function">
      <type></type>
      <name>ModuleTestConfig</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>ade09edbdbc73f6b5beb8aa60a4ee8eea</anchor>
      <arglist>(bool useGlobalInstance, bool useExtensiveTests, std::string &amp;customTestComponentPath, std::string &amp;testSuiteName, VST3::Optional&lt; VST3::UID &gt; &amp;&amp;testProcessor)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useGlobalInstance</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>a11be6e72e6395ba1d657305ceeb3294c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useExtensiveTests</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>a31237fc7b3dd92a28ccb2f74cb4acd3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>customTestComponentPath</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>a7611581a2d8f6826cb14178b458325ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>testSuiteName</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>a882f1d3548c1251f74c2641457f5ca80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VST3::Optional&lt; VST3::UID &gt;</type>
      <name>testProcessor</name>
      <anchorfile>structSteinberg_1_1Vst_1_1Validator_1_1ModuleTestConfig.html</anchorfile>
      <anchor>a695422fe13e8c3ebf45a1fb045c50e47</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::MultiBandController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>MultiBandController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a3fdd52568f98c9621dbcb27d60f2fed7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiBandController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a470c4de825a2061dfa5c7c8989a8f9d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandController.html</anchorfile>
      <anchor>a7d8d62c0c25fa529e484155fed2410a5</anchor>
      <arglist>(uid, 0x9C79B3F9, 0xD9C949CB, 0xA961571A, 0xFE118C95)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::MultiBandProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>MultiBandProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a7e0e9b3d718ae96e40d4f47a10e64b1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiBandProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>afa1de1cf9fe9b5b8c6b2d437b274ada2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a2922fd7e0b91b4d185d049ab27c4e9d8</anchor>
      <arglist>(uid, 0x97C53059, 0x47FC442C, 0x8A858B04, 0x30C3AFE7)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a908a4dce49e93ede6f1b2f02e35cfb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a9dd034fe8d4f5d790ad7ed3f99639321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a5211e739456307c0b531771a48c6e1a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>acb595380964a99547e8677a3ce18e282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>aea24227a67abfbb66d5cc3332e02343c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a6737117454e90f8caca87dcfda6f98b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>ab7bd2a156007e3d5ff5b020386edae9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a6ccfd31b979de24531bc8870512fa88b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a8df580977c491f3635991f9d795f7b5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a0c13cbfdf3ec695f19bf1c2af570e3bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a58c6bdf31a2bef33a474b4cfb9409f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>driv3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a5d2ff9ef1cecf3f1c3caec068d8155a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a8cb865e4b76909b24401f9f68be53839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a544032d14d1eb903714784404ed818e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>aa99973d5a2968e9ec4c3148fe68e513f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a8865ee0be281cd63ec3c2e21a9d4e006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a0ca1df279e4869b7dbe8b145ae94ad00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>ad79aca159f5b0f497390712b7b25e612</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>ac2e3cea99685b96d4498a75309a8e8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>adefa88247b42cc95ef8a0879277b6519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>ab756503ec7eb8340aae55ee1455b31ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>aa805acc76e087669585fb54c41833703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>slev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>a9be6fb08a3ae972aa870b3e5e3411c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mswap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1MultiBandProcessor.html</anchorfile>
      <anchor>aef3523e6a89a1d4c08512974be6d9919</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VSTGUI::NoteTouchController</name>
    <filename>classVSTGUI_1_1NoteTouchController.html</filename>
    <member kind="function">
      <type></type>
      <name>NoteTouchController</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>af189e77d3e17b324d02e6dec8ec97efb</anchor>
      <arglist>(int32_t pitch, Steinberg::Vst::IInterAppAudioHost *host)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPitch</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>af52ff0312c90cc1c99a818202ff70d61</anchor>
      <arglist>(int32_t _pitch)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHorizontalNoteExpType</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>ac0a120c22d7c74e770dc641d3451867c</anchor>
      <arglist>(int32_t type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerticalNoteExpType</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>ac5f2ecd61d19679a787aa3928bec6b0e</anchor>
      <arglist>(int32_t type)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>controlBeginEdit</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a5710f4953ade5a9361b3b8342c0c1f3b</anchor>
      <arglist>(CControl *pControl) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>controlEndEdit</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a137265ed70dca9006615cbcc86c29774</anchor>
      <arglist>(CControl *pControl) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>valueChanged</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a94d64f149dbf98863f121a3f6ce588ac</anchor>
      <arglist>(CControl *pControl) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>CView *</type>
      <name>verifyView</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>aebae74569db42650b5f06a92c63a0550</anchor>
      <arglist>(CView *view, const UIAttributes &amp;attributes, const IUIDescription *description) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>startNote</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>ab0f8535ebb225c551de4fa95ae49bb00</anchor>
      <arglist>(float velocity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stopNote</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a16f42f2efa3f6e691ad850acf8f73221</anchor>
      <arglist>(float velocity)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendNoteExpression</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a924984487df3e8186f02c815a29984e4</anchor>
      <arglist>(int32_t type, float value)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Vst::IInterAppAudioHost *</type>
      <name>host</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a416ef5aeb0c40849f69de8a80270c1a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CXYPad *</type>
      <name>pad</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a129e460bdd8c7b1046ebcdc4e5e17ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>CColor</type>
      <name>originalPadBackgroundColor</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>ac49298c8d75dc87b707fb88933046666</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>pitch</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a7ffee739cc92424b3ea742b048838896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>noteID</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>adcf4f02fd385fbb374fca278862fb3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>xNEType</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>ae184ac69ed767b0c43c94f63244a5b67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32_t</type>
      <name>yNEType</name>
      <anchorfile>classVSTGUI_1_1NoteTouchController.html</anchorfile>
      <anchor>a6564a7121b8a3e62cc91278cef75de89</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::OverdriveController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>OverdriveController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>ae3b969becea8945f903f98a22ac085ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OverdriveController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>af6076c2d0e769b176de790715677359b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveController.html</anchorfile>
      <anchor>aea9f46bdbfd4eb01d09f527f2c381efb</anchor>
      <arglist>(uid, 0x6E19D9A6, 0x81594A9D, 0x8730820A, 0x2AF52AC4)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::OverdriveProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>OverdriveProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a74e5dd87a53506000bce04db8ed0c4bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OverdriveProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a909f5de7a0fa09b4924960bee56d828d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a4cace2107dc4a175358b34ae8b75b5c6</anchor>
      <arglist>(uid, 0x203C7009, 0x042A4AC2, 0xA515CFF1, 0xDF647E92)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a4980a136b4d9f7c4a5b2b6ad5336f7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>a58fcfa7bcfe7404baae154a6ebcf9402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>ac212f45d8ea899a258cbcb8aa0146790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1OverdriveProcessor.html</anchorfile>
      <anchor>aca3852dab23cf0066809ecc1997fb58b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ParameterChangesCheck</name>
    <filename>classParameterChangesCheck.html</filename>
    <member kind="typedef">
      <type>std::set&lt; Steinberg::Vst::ParamID &gt;</type>
      <name>ParamIDs</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a12545cf3694a77e5788dab059a35cbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterChangesCheck</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a4d82ea920fb01999735038b8987ac2c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkParameterChanges</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>aba66cd227e273ecf303dfb8b1575ad1b</anchor>
      <arglist>(Steinberg::Vst::IParameterChanges *paramChanges)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventLogger</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a669f46aca3bf99696426ef0f43d439e1</anchor>
      <arglist>(EventLogger *eventLogger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParamIDs</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>ac9d617c863be1f4cbd9b86997f00244f</anchor>
      <arglist>(ParamIDs *parameterID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateParameterIDs</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a1faed69aadb8480fe0a5511d81017f86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkAllChanges</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a7258ed62d8224e6cb09459634f270694</anchor>
      <arglist>(Steinberg::Vst::IParameterChanges *paramChanges)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkParameterCount</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a1fac8f3b9bbba7d876b1353dc9044248</anchor>
      <arglist>(Steinberg::int32 paramCount)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkParameterId</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>abf9f477e631fefebc0ae1528a320cf3f</anchor>
      <arglist>(Steinberg::Vst::ParamID paramId)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkNormalized</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a83eb4fbfa7f281fc33c2e29ddacec923</anchor>
      <arglist>(float normVal)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkSampleOffset</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a2574275e1618c98317d93e58a2dda483</anchor>
      <arglist>(Steinberg::int32 sampleOffset, Steinberg::int32 lastSampleOffset)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkParameterQueue</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a6ffa372bceb8a10dee6acdfd77bcdfa4</anchor>
      <arglist>(Steinberg::Vst::IParamValueQueue *paramQueue)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkPoints</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a5ca1f837cb76127a12521547b3c7f038</anchor>
      <arglist>(Steinberg::Vst::IParamValueQueue *paramQueue)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isNormalized</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a18b81593e22ea1f7a57fc33370065b7c</anchor>
      <arglist>(float normVal) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isValidSampleOffset</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a7651b975755a7b4a29d3b7b4f76515bc</anchor>
      <arglist>(float sampleOffset, float lastSampleOffset) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isValidParamID</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a92dbe3bb2377dac5e6dde4904b87b970</anchor>
      <arglist>(Steinberg::Vst::ParamID paramId) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isValidParamCount</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>af1534b8c046fd94fc5b37714a9604050</anchor>
      <arglist>(Steinberg::int32 paramCount) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventLogger *</type>
      <name>mEventLogger</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>ac7b803638761074f9b199990874a1ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamIDs *</type>
      <name>mParameterIds</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>a7d0c0d1f749d4cb89683cc435d2ce8ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Steinberg::Vst::ParamID &gt;</type>
      <name>mTempUsedId</name>
      <anchorfile>classParameterChangesCheck.html</anchorfile>
      <anchor>aa7c0414e7518843910238f80c3c7191f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::PianoController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>PianoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a5323f85ccd2e775f4784a4353a622c59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PianoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>aa52d809382a76c99ac0590b6bf162f1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoController.html</anchorfile>
      <anchor>a7f4ef96d1704b6254ff96fa3fd82d3ed</anchor>
      <arglist>(uid, 0xBAC8AA21, 0x216D4754, 0xA7639173, 0xE3BB5F7A)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::PianoProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <class kind="struct">Steinberg::Vst::mda::PianoProcessor::KGRP</class>
    <class kind="struct">Steinberg::Vst::mda::PianoProcessor::VOICE</class>
    <member kind="enumvalue">
      <name>NPARAMS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a0411cd49bb5b71852cecd93bcbf0ca2da54b6fffd3ba5eec39da9f688241a194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAVELEN</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a0411cd49bb5b71852cecd93bcbf0ca2da7880ff67a682bfd5be243cf08651f273</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BaseProcessor</type>
      <name>Base</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ac6f82520dd4f964fd3f43554e052e643</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NPARAMS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a0411cd49bb5b71852cecd93bcbf0ca2da54b6fffd3ba5eec39da9f688241a194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>WAVELEN</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a0411cd49bb5b71852cecd93bcbf0ca2da7880ff67a682bfd5be243cf08651f273</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PianoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ae5ab489c088320246852cb9ef78df4a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PianoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ac054f2759659a30425d57e23d26b94a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ac1e6fe1a9c58033c643b713d6f34d1fd</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a738c59f4cea27ff49f903708c8b9fe2c</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>Steinberg::uint32</type>
      <name>getNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a25fa38a5317145096dce3ff00b6cde78</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a55903a4515c78f60fffa73b09a924bf4</anchor>
      <arglist>(Steinberg::uint32 val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCurrentProgramNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a8bf90593e40ded7977f2c198b52ad973</anchor>
      <arglist>(ParamValue val) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a783511049a919d254d5781156bc892aa</anchor>
      <arglist>(uid, 0xA77EA27C, 0x1F184322, 0xBBD2AD93, 0x73A2B7A0)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int32</type>
      <name>kNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a46709d21fb3511769bcf9e31046d4531</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static float</type>
      <name>programParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>af8715f2cc83b4c8e21227803fbc511c1</anchor>
      <arglist>[][NPARAMS]</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>SynthData&lt; VOICE, kEventBufferSize, kNumVoices &gt;</type>
      <name>SynthDataT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ac9ed78aee51f485cca7ca2c85bcdc066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>adbc1ac78169fb87f5523d5acd706c11e</anchor>
      <arglist>(ParamID index, ParamValue newValue, int32 sampleOffset) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>preProcess</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>aaa45189947fd1f9d19c67f173dac49ac</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>aefc841ac0d9fd85545ed0751c45a3108</anchor>
      <arglist>(const Event &amp;event) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>noteEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a52c1cb1c8eb4d65db9bb0526879bb258</anchor>
      <arglist>(const Event &amp;event)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allNotesOff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>aec246739838d962211ec3124c7f26ff3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Fs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a62bb1f644b0753c0d2513e1f81107e4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>iFs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a9bfa57661d80e1ab66c5ce95cc7cad9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SynthDataT</type>
      <name>synthData</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ac16ff5312692ef65aaadddac31421aeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>KGRP</type>
      <name>kgrp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ad7192324f8580ae8c0de22bdc7e83b35</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>poly</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a6372b31881f75b222376451e46aa032f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>cpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a973e36e3a360e1d192343f25a13d4194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>short *</type>
      <name>waves</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a8007b6b8e5af8f17a20ae7af1ef5affa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>cmax</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a31405a869c06699a4685e7682364b231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>comb</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a65aeb5139227ff41bf22caf91abad8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>cdep</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>aed38a025b6d405c757db196c893fc5d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>width</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>ae426f00e82704fa09578f5446e22d915</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a5e16c54b3ec6cc1b5dad0a71dcfd7a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>af9d275bd4396ad8322439ea0df080181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fine</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>acd9191c0e5c0105430a03731ac9f9701</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>random</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a83479daf247dadcf80407207d46d1acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>stretch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a64a453fb28d2d5f5a2aaaced4eb9d57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>muff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a50f33bf777af7b72d8ae476d45fa40ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>muffvel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a0ba3a69182f515384f92aac43fa740e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sizevel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a23a709f97e4d1d9335c42cfedaf10cad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>velsens</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a34fa80efe754f6fd8bf57512b3bfface</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>volume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a016abda2855c77dcc1630f9d2f9f8d18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::uint32</type>
      <name>currentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a905088e2e3d39794f65af93b732374f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kNumVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>afb565af78042a78acd0b4294f588c34f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static constexpr int32</type>
      <name>kEventBufferSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1PianoProcessor.html</anchorfile>
      <anchor>a38dc2d19e777233d1760e4d12c84d45a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::PitchNamesController</name>
    <filename>classSteinberg_1_1Vst_1_1PitchNamesController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getUnitByBus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>a916c9d3245f4580b4effa6d977a64208</anchor>
      <arglist>(MediaType type, BusDirection dir, int32 busIndex, int32 channel, UnitID &amp;unitId) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IPlugView *</type>
      <name>createView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>aa2fea25360b1f4824345acc423b1f8db</anchor>
      <arglist>(FIDString name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>VSTGUI::CView *</type>
      <name>createCustomView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>a668ebd0a20787d498f761c94e34f6203</anchor>
      <arglist>(VSTGUI::UTF8StringPtr name, const VSTGUI::UIAttributes &amp;attributes, const VSTGUI::IUIDescription *description, VSTGUI::VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesController.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VSTGUI::PitchNamesDataBrowserSource</name>
    <filename>classVSTGUI_1_1PitchNamesDataBrowserSource.html</filename>
    <member kind="function">
      <type></type>
      <name>PitchNamesDataBrowserSource</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>ad6c842b3f5f15584b959d9997a0fab3e</anchor>
      <arglist>(Steinberg::Vst::EditControllerEx1 *editController, Steinberg::Vst::UnitID unitID)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PitchNamesDataBrowserSource</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a3f408770586ade80c057efd60ffc1552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbGetNumRows</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>ac3440ce013f8321eb6eece8cc864a3c1</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbGetNumColumns</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>ad8e06d1b5d95a889436dbfc46f8d85fa</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dbGetColumnDescription</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a66c23e6b22694cfbfb940e48fafd97f2</anchor>
      <arglist>(int32_t index, CCoord &amp;minWidth, CCoord &amp;maxWidth, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CCoord</type>
      <name>dbGetCurrentColumnWidth</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a833a1bcfbb44cbc93ff7bb476dc93e9a</anchor>
      <arglist>(int32_t index, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbSetCurrentColumnWidth</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>aade87a733a25b377db08922615167c1c</anchor>
      <arglist>(int32_t index, const CCoord &amp;width, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CCoord</type>
      <name>dbGetRowHeight</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>aaedf81ba9efd6864803ba803adbedafd</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>dbGetLineWidthAndColor</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>aff1cdebbc921ab91f3f98b9f91a9a32f</anchor>
      <arglist>(CCoord &amp;width, CColor &amp;color, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbDrawHeader</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a11b30c6c5ebe554b06f3192ac1437347</anchor>
      <arglist>(CDrawContext *context, const CRect &amp;size, int32_t column, int32_t flags, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbDrawCell</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>aa2b926e415384dc570c2763dfb324cbe</anchor>
      <arglist>(CDrawContext *context, const CRect &amp;size, int32_t row, int32_t column, int32_t flags, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseDown</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a74113028b91457ec76c784cf7c44225b</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseMoved</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a767db462cdf5ec99626544376f1dee4e</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CMouseEventResult</type>
      <name>dbOnMouseUp</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a4e06752519eea6f83496f53139943b27</anchor>
      <arglist>(const CPoint &amp;where, const CButtonState &amp;buttons, int32_t row, int32_t column, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbSelectionChanged</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>af04b31ac17a5eb191df423eac8d5c776</anchor>
      <arglist>(CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbCellTextChanged</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>adc85fbfa4cff1e5a680bc2f8bcd92c7c</anchor>
      <arglist>(int32_t row, int32_t column, UTF8StringPtr newText, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>dbCellSetupTextEdit</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>ac561d1c14dc1ad9dbf655b62c608f937</anchor>
      <arglist>(int32_t row, int32_t column, CTextEdit *textEditControl, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32_t</type>
      <name>dbOnKeyDown</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>af9a9c3ab456206ddd45c4df67fa84e39</anchor>
      <arglist>(const VstKeyCode &amp;key, CDataBrowser *browser) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>getPitchName</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>a9013e358366b8d6419a051cff541dddc</anchor>
      <arglist>(int16_t pitch, Steinberg::String &amp;name)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Vst::ProgramListWithPitchNames *</type>
      <name>pitchnames</name>
      <anchorfile>classVSTGUI_1_1PitchNamesDataBrowserSource.html</anchorfile>
      <anchor>ade0d04afb1b9c9ccf1eeefeef38fa43d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::PitchNamesProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>PitchNamesProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</anchorfile>
      <anchor>aa6dbab6c34c0429735981b18d0fb8fb1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PitchNamesProcessor.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::Plug</name>
    <filename>classSteinberg_1_1Vst_1_1Plug.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <base>Steinberg::Vst::AudioEffect</base>
    <base>Steinberg::Vst::IPrefetchableSupport</base>
    <base>Steinberg::Vst::AudioEffect</base>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>ad139b05f833c3a1320c8eb716f68fbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>ad139b05f833c3a1320c8eb716f68fbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>sendTextMessage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aa53fbaf2cca1b26c300a7651667b677e</anchor>
      <arglist>(const char16 *text)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>ad139b05f833c3a1320c8eb716f68fbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getPrefetchableSupport</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a41f2f903ceb464691f853ec06269767b</anchor>
      <arglist>(PrefetchableSupport &amp;prefetchable) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>ad139b05f833c3a1320c8eb716f68fbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable">
      <type>OBJ_METHODS(Plug, AudioEffect) DEFINE_INTERFACES DEF_INTERFACE(Vst int32</type>
      <name>mPrefetchableMode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a3c5c05ab4030afbc711fb0ae076ce294</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>bBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>abc22129b24de048752fd93a6ca2f8910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mLastNoteOnId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>ab339f0786371412cc11e743edf64fd5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mLastNoteOnPitch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>af450460a7817e55054c194f496fb52a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>currentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>a35330d583ecab989fc886e9b070413e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>currentGainValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Plug.html</anchorfile>
      <anchor>aa326f55344affc7dc381ce26bab76e65</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::LegacyMIDICCOut::Plug</name>
    <filename>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>Plug</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>ad139b05f833c3a1320c8eb716f68fbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLastController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>adb62eb67b1f0681bef4d65866e1ecb8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLastProgramChange</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>add681f6f8e17497aa7271822aff4d76b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLastAftertouch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a3591f929931625f58897990e27789515</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLastPolyPressure</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>acdd120fe8636cd591af5fcfe58fa1524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mLastPitchBend</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a71169d6b737318be1f4638f2154486e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8</type>
      <name>mChannel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>afd142a7976882a274a551594880cd80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8</type>
      <name>mControllerNum</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a972f6781da214e8103128af22850d210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint8</type>
      <name>mPolyPressureKey</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>a0b9a7559eddf5414b5dc40b77bc24f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>bBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1Plug.html</anchorfile>
      <anchor>abc22129b24de048752fd93a6ca2f8910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::PlugController</name>
    <filename>classSteinberg_1_1Vst_1_1PlugController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::INoteExpressionController</base>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <base>Steinberg::Vst::ChannelContext::IInfoListener</base>
    <member kind="typedef">
      <type>VSTGUI::CView</type>
      <name>CView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a9c0d8371f10d1ac8284fc103a951e193</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::CTextEdit</type>
      <name>CTextEdit</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a4e1412dcf30007cd20765205649ceee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::UTF8StringPtr</type>
      <name>UTF8StringPtr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>af7e79066204c7e0be05f30d63bcafb24</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::UIAttributes</type>
      <name>UIAttributes</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>aa23cb9914ed88b85abf50aae448f7391</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::IUIDescription</type>
      <name>IUIDescription</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>aa946c9736e3aad934fd2d9b7b916cc43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::VST3Editor</type>
      <name>VST3Editor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>ae5ece0a3a8c6e4295d9adedb76d6edd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>VSTGUI::CTextLabel</type>
      <name>CTextLabel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>acf4df64d06a51904f55bbec90e513aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setChannelContextInfos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a49f061b7873f1b192cbdcbc9e731ff09</anchor>
      <arglist>(IAttributeList *list) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>IPlugView *</type>
      <name>createView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a634ef43d3538409b98c1fc2cd5e494a0</anchor>
      <arglist>(const char *name) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>CView *</type>
      <name>createCustomView</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>aeb86f6fdd0b8ce18fdc55881ebd60f72</anchor>
      <arglist>(UTF8StringPtr name, const UIAttributes &amp;attributes, const IUIDescription *description, VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>willClose</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>adcaa6b4cddc255715dff34434cf13b77</anchor>
      <arglist>(VST3Editor *editor) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>receiveText</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>ae25e419f5f1a129dfe1e9de5987f157f</anchor>
      <arglist>(const char8 *text) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getNoteExpressionCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a5d93e889ab504c7e08356683094be8a5</anchor>
      <arglist>(int32 busIndex, int16 channel) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a487e1f5b80a28b511301f98dca4a5d0b</anchor>
      <arglist>(int32 busIndex, int16 channel, int32 noteExpressionIndex, NoteExpressionTypeInfo &amp;info) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>abc366969b6b2e1cef34c221db92e806d</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, NoteExpressionValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getNoteExpressionValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>af4d16dae99ff1010b80359cb70500e31</anchor>
      <arglist>(int32 busIndex, int16 channel, NoteExpressionTypeID id, const TChar *string, NoteExpressionValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setParamNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>aeb78d794ce0bc5812c526a1cc2083d5d</anchor>
      <arglist>(ParamID tag, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getUnitByBus</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a5421004586b52d943f4b1fef3b935d39</anchor>
      <arglist>(MediaType, BusDirection, int32, int32, UnitID &amp;) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1PlugController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::LegacyMIDICCOut::PlugController</name>
    <filename>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1PlugController.html</filename>
    <base>Steinberg::Vst::EditControllerEx1</base>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1PlugController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1PlugController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1LegacyMIDICCOut_1_1PlugController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProcessContextCheck</name>
    <filename>classProcessContextCheck.html</filename>
    <member kind="function">
      <type></type>
      <name>ProcessContextCheck</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>a0457bfe7926d7ddd7dac554bcc75e4da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventLogger</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>a669f46aca3bf99696426ef0f43d439e1</anchor>
      <arglist>(EventLogger *eventLogger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>afe0b33e85bc0cd3854f21cb1f3c80f47</anchor>
      <arglist>(double sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>ae356229c9673ed38e22e701896b334ab</anchor>
      <arglist>(Steinberg::Vst::ProcessContext *context)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventLogger *</type>
      <name>mEventLogger</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>ac7b803638761074f9b199990874a1ddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mSampleRate</name>
      <anchorfile>classProcessContextCheck.html</anchorfile>
      <anchor>a600412479bad7d510631ebb99267ed91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::Processor</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a7dc0fcbf0d1a5526140bd23017b6429d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>canProcessSampleSize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a1c7a40be692f5ed7f009896af248beed</anchor>
      <arglist>(int32 symbolicSampleSize) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>notify</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a60bbab8211ead54d50dbb672be410342</anchor>
      <arglist>(IMessage *message) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VoiceProcessor *</type>
      <name>voiceProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a0dd8e681cac5e48afa5de5236fb0564e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GlobalParameterState</type>
      <name>paramState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a70f2ba736c12beba073fd0701a8a5b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OneReaderOneWriter::RingBuffer&lt; Event &gt;</type>
      <name>controllerEvents</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Processor.html</anchorfile>
      <anchor>a6735a18840c370e72a7998b17fd7ed0c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::Processor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; ParamValue &gt;</type>
      <name>StateT</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ae56f20acb1ce50e7cb81a14706cf9204</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a7dc0fcbf0d1a5526140bd23017b6429d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>~Processor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a2d8025401add2553bd80ccd3b87b5c30</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a8b45c1a26471f6a61f303ae52130c1dd</anchor>
      <arglist>(ProcessData &amp;data)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>preProcess</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>abdda8f837db9a5497bd8ada821580d4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>bypassProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ac0404a15bbbe4fbeb43a28ac3e653d2c</anchor>
      <arglist>(ProcessData &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a2fe02531cd4f9f1c0c3adc99c8ccbbdb</anchor>
      <arglist>(const Event &amp;)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>checkSilence</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a594d5424d912aa5457560f7520367f96</anchor>
      <arglist>(ProcessData &amp;data)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setBypass</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a8dddd66e4cbe80f46ecb9f1bb9011190</anchor>
      <arglist>(bool state, int32 sampleOffset)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>processParameterChanges</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a0ffd894a28d7e846f89200ec9ec5c5f8</anchor>
      <arglist>(IParameterChanges *changes)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a9bfa0e9668e297f609b86ad41d53e915</anchor>
      <arglist>(ParamID index, ParamValue newValue, int32 sampleOffset)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>allocParameters</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>aa0717eb65af14a8ec9de39bbc5ba5037</anchor>
      <arglist>(int32 numParams)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a7f854f0f421ece263ee50dfe5ea27b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>af76c1d17a4b279a3bd1971dd2143a8c6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual uint32</type>
      <name>getCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a374e62132ea0748d6ab211ee5b9841f6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual uint32</type>
      <name>getNumPrograms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a52e68c247fe30358749ecf046b6ec577</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentProgram</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a6eed7d49bc0e33ef048fe68b4d777ffa</anchor>
      <arglist>(uint32)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setCurrentProgramNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a5fd4aa10a478ed2ec3d0aad964f6eb13</anchor>
      <arglist>(ParamValue)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>aa70847577a764a85d8788c95d8e046b1</anchor>
      <arglist>() const =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>processEvents</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>af4b77e6cbd081e1fbc3e963b1091db16</anchor>
      <arglist>(IEventList *events)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isBypassed</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a3d88fe8b3b447ce38d32d912d43f57de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>getSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ab6597e05f5085eb723517723e5c5bbed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>setupProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a754f2c1b5beff1179b96278344f1ef96</anchor>
      <arglist>(ProcessSetup &amp;setup) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a92e10375bc5b1206bcc9f6bb3dc8fe90</anchor>
      <arglist>(IBStream *state) final</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a1daedc7fe9fb30ab99c27e2af6405a6d</anchor>
      <arglist>(IBStream *state) final</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>checkStateTransfer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ac8d595bf7561f5333ade8460396c1155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue *</type>
      <name>params</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a5e973ce6708933be80032fa04ba40c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>numParams</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a43b565fdb49cf57214b8103f9b5d3d37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bypassRamp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>acef92f4ee38add0cdbd9e207888fbbaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>bypassBuffer0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a44f60a002d17139fd70c1d8f74b8219a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>bypassBuffer1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>af8b29edd2aa8b0f1efd6fe304f98c445</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>bypassState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>ae6d1f2ac968715e2596f1849214a5f52</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RTTransferT&lt; StateT &gt;</type>
      <name>stateTransfer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1Processor.html</anchorfile>
      <anchor>a58520b3b2e32fb9e6f501bbbd0a5d55f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::ProcessorWithUIController</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ProcessorWithUIController.html</filename>
    <base>Steinberg::Vst::NoteExpressionSynth::Processor</base>
    <member kind="function">
      <type></type>
      <name>ProcessorWithUIController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ProcessorWithUIController.html</anchorfile>
      <anchor>ab5228721f9b22a253dcbea1d0fc23a0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ProcessorWithUIController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static FUID</type>
      <name>cid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1ProcessorWithUIController.html</anchorfile>
      <anchor>a859caadd8560ff5658d51b9237ef24e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProcessSetupCheck</name>
    <filename>classProcessSetupCheck.html</filename>
    <member kind="function">
      <type></type>
      <name>ProcessSetupCheck</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>aed3951668033205a68bbba7d2869c18f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcessSetup</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>aa49668ad96cbc67d87a2dbc27b8f0a4d</anchor>
      <arglist>(Steinberg::Vst::ProcessSetup setup)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEventLogger</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>a669f46aca3bf99696426ef0f43d439e1</anchor>
      <arglist>(EventLogger *eventLogger)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>check</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>ad1b4374d4e860f3866cac4009370411b</anchor>
      <arglist>(const Steinberg::Vst::ProcessData &amp;data)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Steinberg::Vst::ProcessSetup</type>
      <name>mSetup</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>a77f066ba687611a8ef834ce633d9b97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EventLogger *</type>
      <name>mEventLogger</name>
      <anchorfile>classProcessSetupCheck.html</anchorfile>
      <anchor>ac7b803638761074f9b199990874a1ddc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ProxyParameter</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</filename>
    <base>Steinberg::Vst::Parameter</base>
    <member kind="function">
      <type></type>
      <name>ProxyParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a7626a5782256050a2dcd505261fcd915</anchor>
      <arglist>(Parameter *p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setProxy</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a063653cac44305b0d5ca028a40c8be85</anchor>
      <arglist>(Parameter *p)</arglist>
    </member>
    <member kind="function">
      <type>Parameter *</type>
      <name>getProxy</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>aa0be4971319fac063e1f4a1e8cbfaf03</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ParameterInfo &amp;</type>
      <name>getInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a8085a7b84f8111437dc96a7ff2982174</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParameterInfo &amp;</type>
      <name>getInfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a586092a767162664e7023719865393d5</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUnitID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a6449b5cf4437b81c8736c90925217dd6</anchor>
      <arglist>(UnitID id) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>UnitID</type>
      <name>getUnitID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a3c263cc8de03774e138eda43775397ac</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>acb87aed98bfbb56736d849105403e439</anchor>
      <arglist>(ParamValue v) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>ab8cb2d05d8f8af76a610e783faecb324</anchor>
      <arglist>(ParamValue _valueNormalized, String128 string) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>af7aab53314d6d62ad5b017ba85ab50b5</anchor>
      <arglist>(const TChar *string, ParamValue &amp;_valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toPlain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>af7e7f0fc9f3c394f66dc5a8947742272</anchor>
      <arglist>(ParamValue _valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a64274ff145c58620b9b7c32fff087049</anchor>
      <arglist>(ParamValue plainValue) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getPrecision</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>a7d8b427caad7ea743aa02ad0dc6d9c19</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrecision</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ProxyParameter.html</anchorfile>
      <anchor>aa084e662d2aff5db442827079a5e0dc4</anchor>
      <arglist>(int32 val) SMTG_OVERRIDE</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RePsychoController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>RePsychoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a4a9f9b8fa622cd6567f38e1bb69e8263</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RePsychoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a8f0e5ce0ebf5f1df25001bab75fc61ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoController.html</anchorfile>
      <anchor>a6756775701d0922f88cbd81ef63f2573</anchor>
      <arglist>(uid, 0x4C14E332, 0xE185463B, 0x98732E82, 0x944786C5)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RePsychoProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>RePsychoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a8ad648787388e306f093001442b31380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RePsychoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a6019d93b3d148ec2b71948d3be39cf41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a47f307be2bca1aab4366f47e9e141fd2</anchor>
      <arglist>(uid, 0xC20CCF82, 0x90574B71, 0x98AE3FE1, 0x240C2704)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>af1251a78af95b174cf6fa123dbe441a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>gai</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a60d333d34d9a06bb06b78b69a1a1dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tun</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a251b7e39e142dcfef12e35f6deedb274</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fil</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a4fc43e5d31b41de090f95e23a406e205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a543ca77ae28dc8147d7b0a136b66aea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a23919a6521508fe0d55a3666119b22be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>tim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a46336872a13f7624153028a309558b97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>dtim</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a125d6078156d18faa4fbf7ccb04385a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>a8072fefd4ac1fbf6d83fe3f975b3a977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RePsychoProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RezFilterController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>RezFilterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a1e9eb872be70cf7e357a3c889907951d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RezFilterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a5787cac1899d4ce4932caeb2f77775fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterController.html</anchorfile>
      <anchor>aba027d536973eabc44c5e2bc8fec5b7c</anchor>
      <arglist>(uid, 0xEB05C9E8, 0xD99E4797, 0x83E6F33E, 0x90D9378B)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RezFilterProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>RezFilterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a26751899fa7e0e54fa19e937b3f00d29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RezFilterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a6bd2a492488c704a9bf232d8a7a8d9ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a62c424e4072fddd1d72894261b571a20</anchor>
      <arglist>(uid, 0x86983C01, 0x8D684E3F, 0xBA2816C2, 0x03A1450D)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a5dafde482b0aeaa0268cb7720bb133fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>ad7527d236b312c5dc71acba98067e0ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fg</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a0d0cf5c9a1b7e98b292f03b947121520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fmax</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a37a6f65f67fab364d39373f7e38b1f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fenv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>ae9394312428df4f88947d8ab1fceac56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>flfo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a89c1a61b87bd61a7b5150686d27553db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>bufl</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a11f85a5e15d9474b3e6288d94f94081b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a11ad9e733fe4015e5b4b5dc86d8191b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>aa85af06ffd4cdd8750df50e09d955246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a23919a6521508fe0d55a3666119b22be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tthr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a23fe2cac3150644248b5e4a560eac537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>ae89365c175ccaf9d7770ef280b851770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>lfomode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a3d53638adcff4102b29f5e11347e19d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>ttrig</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>acec00d5cbf402b7b602c69c1d9dfee93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>tatt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RezFilterProcessor.html</anchorfile>
      <anchor>a8b80bac1f364dac85639fd845f9f6075</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RingModController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>RingModController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>abebaa904d867f3a5e01437b4031a7577</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RingModController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a7720cdc493cf43617c847e35127317e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModController.html</anchorfile>
      <anchor>a5bdaba156efde924e5e688dfd45a1f3c</anchor>
      <arglist>(uid, 0x3D03E713, 0xED334913, 0x8D47116B, 0x1B6045CB)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RingModProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>RingModProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>ac30fae771f6b5cbd9719cdb7f8aedbe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RingModProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>aecf72b9af433ac2fd816edda7a7880a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a7b3da71c01458ef9278c985bdf0d91e6</anchor>
      <arglist>(uid, 0x935CB08D, 0xFE614CF5, 0xA3927AAA, 0x21B25D95)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fPhi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>ae388283b0a16e1083295ac079bc54806</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fdPhi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a8cc53a5527ea1d165503c8769a11a40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>nul</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a20aa5006a199342a4739598fac4cc8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>twoPi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a12bc84263135a9828dc744b5ba009d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ffb</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>a346da81262018b99f41fbdf2f7645a74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fprev</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RingModProcessor.html</anchorfile>
      <anchor>aa25f1571b9b08ab14dfb55deae88c032</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RoundPanController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>RoundPanController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a8b7b6f363e958e17da9605b6040619e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RoundPanController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a3f4460857cfaac34a39845bd61db05a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanController.html</anchorfile>
      <anchor>a4d1b11e82f63988b5bb2a9c732d616f6</anchor>
      <arglist>(uid, 0xDF76AF35, 0x14D243C0, 0x8F4C5B05, 0x20CA6093)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::RoundPanProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>RoundPanProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>aabbe6a6f3ef6de165b7445cea41f8f64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RoundPanProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a2926b0dd9624e553ecaeea8f30495929</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>aad2ee143af3e2b8c4c0d521242a6d4a9</anchor>
      <arglist>(uid, 0x2BEB5541, 0xE9384235, 0x8AAAE0AE, 0xB555BF75)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1RoundPanProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SampleAccurateBaseProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SampleAccurateBaseProcessor.html</filename>
    <base>Steinberg::Vst::mda::Processor</base>
    <member kind="function">
      <type></type>
      <name>SampleAccurateBaseProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SampleAccurateBaseProcessor.html</anchorfile>
      <anchor>aa6199bff9572110fe3807118031c0cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocParameters</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SampleAccurateBaseProcessor.html</anchorfile>
      <anchor>a009053d0bf0fe9fb13b29fc3155e8b8c</anchor>
      <arglist>(int32 numParams) final</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SampleAccurateBaseProcessor.html</anchorfile>
      <anchor>aaa75350451cd1bf61f0b94f13e9ce0cf</anchor>
      <arglist>(ProcessData &amp;data) final</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>processParameterChanges</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SampleAccurateBaseProcessor.html</anchorfile>
      <anchor>a82c7c15920ca04c9d8c9709a1d7c9f29</anchor>
      <arglist>(IParameterChanges *changes) final</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ScaledParameter</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</filename>
    <base>Steinberg::Vst::mda::BaseParameter</base>
    <member kind="function">
      <type></type>
      <name>ScaledParameter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>a18c640fcff62c5b39a3db365314cfd56</anchor>
      <arglist>(const TChar *title, const TChar *units, int32 stepCount, ParamValue defaultValueNormalized, int32 flags, int32 tag, ParamValue minValue=0., ParamValue maxValue=1., bool printAsInteger=false, UnitID unitID=kRootUnitId)</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toPlain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>af7e7f0fc9f3c394f66dc5a8947742272</anchor>
      <arglist>(ParamValue _valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>ParamValue</type>
      <name>toNormalized</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>a64274ff145c58620b9b7c32fff087049</anchor>
      <arglist>(ParamValue plainValue) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>toString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>ab8cb2d05d8f8af76a610e783faecb324</anchor>
      <arglist>(ParamValue _valueNormalized, String128 string) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fromString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>af7aab53314d6d62ad5b017ba85ab50b5</anchor>
      <arglist>(const TChar *string, ParamValue &amp;_valueNormalized) const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>minValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>a406227388ac58f2210dfcfa11f105949</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>maxValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>acf4fcdd3cdb0f5ca9eb41df8e85aad8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>printAsInteger</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ScaledParameter.html</anchorfile>
      <anchor>a46e9a4826bc05c5c34f159bdf03043d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::HostCheckerController::ScoreEntry</name>
    <filename>structSteinberg_1_1Vst_1_1HostCheckerController_1_1ScoreEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>ScoreEntry</name>
      <anchorfile>structSteinberg_1_1Vst_1_1HostCheckerController_1_1ScoreEntry.html</anchorfile>
      <anchor>a29671f98698d250098a339fd64ed830c</anchor>
      <arglist>(float factor=1)</arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>factor</name>
      <anchorfile>structSteinberg_1_1Vst_1_1HostCheckerController_1_1ScoreEntry.html</anchorfile>
      <anchor>a323c112c11500270be91b7cb353826bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use</name>
      <anchorfile>structSteinberg_1_1Vst_1_1HostCheckerController_1_1ScoreEntry.html</anchorfile>
      <anchor>a5bb68602a18ad3eae31e576c10369fbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ShepardController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>ShepardController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>acda9c5cfedeeb38209f5218b5ec5cd39</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShepardController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>acbf9716b7a26d5a082f9ba2f2327983a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardController.html</anchorfile>
      <anchor>a6b23775524bcce4f30ea700a4fd9903a</anchor>
      <arglist>(uid, 0xDF150F07, 0xCF294A32, 0xB2A04BC5, 0xE49C4A13)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ShepardProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>ShepardProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a0d600152186b39c5ab43070dc2ddffda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ShepardProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a8e856e0d51d325ad8c502d665ca2fbd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a8deb39454e4cc7de3b93dc9aa16b5ef2</anchor>
      <arglist>(uid, 0xDA28F022, 0x6D3E4744, 0x88C9C4DA, 0xC690F337)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>level</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a450c3ab9b94a4663caad892b7193b547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>af14c6d623ff1aec896b4d087ab74caa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a0b872fb569a8d6ca3c6e55e3d7182e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>drate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a4eaa565989de8986fe9360ef6d94cafb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>out</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>af5a45dbcaa926b186e6f71d08212acc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>ac212f45d8ea899a258cbcb8aa0146790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a1d39518fbf2f23bc7f57d0b823c8239a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>a86ba6a4b65e9df106f7d546a10b131e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>max</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>afdd72a8595565398789f66327935d7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ShepardProcessor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SpecMeterController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="enumvalue">
      <name>kBandParamStart</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a21a65e64e9c753a5b08a2f765595d6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftPeakParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600ad1d9fa3efb84dd5d845b512699a09133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftHoldParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600ad7d64098db4a9efd45c1957075d5f4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftMinParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a42d62d00ba42350f9b6552e3aeec9ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftRMSParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a61d9f532c6e7bb6ff92c78a6854656af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightPeakParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a591131bd3362634966736d3619ca7e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightHoldParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a00baa5ca2fadbe9eb96e9fef7d0c5c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightMinParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600aa4930b663762af4d9a160878580e998e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightRMSParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a2ce71c77931387bd22d727aa7e6eb8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCorrelationParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600aa354f62e43ae144f5115841a7c326f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBandParamStart</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a21a65e64e9c753a5b08a2f765595d6f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftPeakParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600ad1d9fa3efb84dd5d845b512699a09133</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftHoldParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600ad7d64098db4a9efd45c1957075d5f4f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftMinParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a42d62d00ba42350f9b6552e3aeec9ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLeftRMSParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a61d9f532c6e7bb6ff92c78a6854656af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightPeakParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a591131bd3362634966736d3619ca7e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightHoldParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a00baa5ca2fadbe9eb96e9fef7d0c5c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightMinParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600aa4930b663762af4d9a160878580e998e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRightRMSParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600a2ce71c77931387bd22d727aa7e6eb8dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCorrelationParam</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>abed82baf7f470b522273a3e37c24c600aa354f62e43ae144f5115841a7c326f7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpecMeterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>a2c75c8fe143fd226622e0d8531486563</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpecMeterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>a46a6eddfa0740f3f38db0c67a1553a34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterController.html</anchorfile>
      <anchor>aae05354e6767db1fa5b99d46da7c738b</anchor>
      <arglist>(uid, 0xA47D4D56, 0x58AE42CD, 0x8EA0714B, 0x39CD3FC0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SpecMeterProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>SpecMeterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>abee6f9f47507867a951a5b85d8e10f16</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SpecMeterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a814690d2fe8b3658e278b3a84eb4a134</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>bypassProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a1e21001d223600f84c04c9a149bd7045</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>ac90556cd6756cc1dcfc1fb89cec0f7f0</anchor>
      <arglist>(uid, 0x67B9A082, 0xCF0B4BAC, 0x907AA8B7, 0x1D855F94)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>sendParameterChanges</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>afcb9cf6f35a0594f6b1a6e33d71de0f8</anchor>
      <arglist>(IParameterChanges *changes, int32 numSamples)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>counter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a591fd1363c1626fddf38c5187bd33aed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Lpeak</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a3d4a9d27772234d72a52a433bfdec2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Lhold</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>aeef3a04b5f0c542b4b049d15a29b3232</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Lmin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a5d5f28315548a7d539bf0266562a7c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Lrms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>af6ae703073e9fce0ca9eef23b07232c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Rpeak</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a3164c6eded46552e0d1678ea79409072</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Rhold</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a98d838eef5d5cdafa0b7b32e9bfdffcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Rmin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>ad9520ff1fa5930a940a80c4a389641ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Rrms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a5460de0e13faf8df4ebc17a4483ee14c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>Corr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>af9ad77819f870dfd7012244109dea3db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>band</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a662b3318cb60154336e5c344eca5501c</anchor>
      <arglist>[2][16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>iK</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>aed88c3cd8a1a7de62b7a10ac0553fdae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lpeak</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a96bd95c40bf4460dd8ba322344178021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lmin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a66d1a8d9f79b7f3e7378a379fbcf6a0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lrms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a3070d8c67fde5aa7e1ed30783734d4da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rpeak</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a085bdf91fd9b8903e82813ee1b4542de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rmin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a5710faa315172182d9074f12f41a7b6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rrms</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a8c3325f9c05b7876fffaccf9acabaa1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>corr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a8f4e70dd0e6cec17c156125f2859f61b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>den</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a82f0002bd458957dd0f998fa3d17b502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>lpp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>ab4f5d4adffa695b6f35136bc23b5aefb</anchor>
      <arglist>[6][16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rpp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a307e2014ad3e047dbef35ca478756daa</anchor>
      <arglist>[6][16]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>topband</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a9a5e3561bed102844b38678da3f6cbce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>K</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>a372a24837c926db3b9df19f15017182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>kmax</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SpecMeterProcessor.html</anchorfile>
      <anchor>aab2a64af69bf15b9af72e1ce7563efd1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SplitterController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>SplitterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a7620fcb53ab5f7e02c3e513bb2e6530e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SplitterController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>aa1af2983dfcfc404933789e01e0ab27f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterController.html</anchorfile>
      <anchor>a7c8e74dd631f28c7386eaeed1cf4ce65</anchor>
      <arglist>(uid, 0xD3766521, 0x24EF4691, 0xAB7CD29D, 0xB855BF1F)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SplitterProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>SplitterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a19f05625e02ec0b0ed1296f8f0561ba1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SplitterProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>ad8b0d88339441c0f6182ec47a705df55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aace3ffab78cb9e65b27c064b3fec7fb9</anchor>
      <arglist>(uid, 0xEB4D7879, 0x67114968, 0xB8E865FB, 0xFC508DB9)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>freq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a4409e94ad13a060b0ffbc0f371c80004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fdisp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a6e5e882289bdbd9143142caef4c030c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a11ad9e733fe4015e5b4b5dc86d8191b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aa85af06ffd4cdd8750df50e09d955246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a23919a6521508fe0d55a3666119b22be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aacfb31c7f4e2cfb0ab0967f7be16e38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>level</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a450c3ab9b94a4663caad892b7193b547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ldisp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a649395e40d5cf5c283fe43b7581e8690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>att</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a6cbe32dd86cefd1a8b182b3ee652e9bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a3a6d5e369f6fff75c421ba62dbf656e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ll</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a4b4c1671e848c3debb26cc1fd9c0de77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>pp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a28195676fbabbdaa307d237fa750b613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>i2l</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>a335c12ff1f4d104aa26e13377da34f7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>i2r</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aa2acedb0b53916f0a529301d02f4e918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>o2l</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>abb8c05b6bc595f4dee2ca893d5b67013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>o2r</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>aea981f2241e675aa4d3032b0231c7dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SplitterProcessor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::StereoController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>StereoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a860b7f3f5bedcbe126631f901a165836</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StereoController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a22c26debac7f8cac0e0350cecf8d0a4c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoController.html</anchorfile>
      <anchor>a21614259116ac32d3c64599b182b7e71</anchor>
      <arglist>(uid, 0x6280A3B7, 0x7B54468B, 0x837A3580, 0x042B7A14)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::StereoProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>StereoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a9b78fd2ff9f8710606c7664f070201d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StereoProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>ab8d6076d57d32e9f974ded44cbc96404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a6ba3a7848e6b5e97d0cf59715525dce6</anchor>
      <arglist>(uid, 0xDB1EB642, 0x4838483D, 0xA7C7E5D2, 0x3686E943)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fli</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a8ae4392b3bd399612cf4de6af6be197e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fld</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a4b86a9d5c9d667367b0ca2b118d661f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fri</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>aa5729da9d02854eedf76b89e839901a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>frd</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>ad3d61a5f65f93bea07d2ae2e22ec06d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fdel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a85583537c652ea215d2dca033fca26c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>mod</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a198c465c948bd262682a0109e9d16378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1StereoProcessor.html</anchorfile>
      <anchor>a04ce053e4cd48d3cf10e0128c0484738</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SubSynthController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>SubSynthController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>acbd0bddc8a0b209adfe907e208f1ff8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SubSynthController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>af178bffd48e73128237191204ea01c41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthController.html</anchorfile>
      <anchor>aa73c890b884acfe2a01b1bdab1c97c59</anchor>
      <arglist>(uid, 0xB33B6220, 0xFC224015, 0xB76118AD, 0x4F34A0D8)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::SubSynthProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>SubSynthProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>aaa735da54e3292f6c4de154c7939cbb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SubSynthProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a2ea315d12be6b343c8b4b6cb97cd1874</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a095cd56e2acb6c258a36c4126adf3674</anchor>
      <arglist>(uid, 0xA7CC7918, 0xA7D34EA3, 0xB51B6F2F, 0x9C0AF682)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a4980a136b4d9f7c4a5b2b6ad5336f7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a58fcfa7bcfe7404baae154a6ebcf9402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a309ae01687e3b743ec496aaac0d6dc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filt4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a5ea5efa505b1b3b55bf7c8b0a1253713</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filti</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a6abd43e69c545ce6fe4efc4d15fbfac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>filto</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>ad534f37006c950633301a26108e4e234</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>af1251a78af95b174cf6fa123dbe441a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rls</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a8c1c330a9e9e98611d599be802a7b58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dvd</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a984e5699e88d1b3ce93a8c71f193e818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phs</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a84eeb6cc32c5b5e18cca42d2927c0fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>osc</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a85e35b16778d686fe34c97f3e990c255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>typ</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1SubSynthProcessor.html</anchorfile>
      <anchor>a79c60dc7aff717516ce6b2a252bb7f6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::SyncDelayController</name>
    <filename>classSteinberg_1_1Vst_1_1SyncDelayController.html</filename>
    <base>Steinberg::Vst::EditController</base>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setComponentState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayController.html</anchorfile>
      <anchor>a9d48aa02feb98d52c054d5f4198fa7c9</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::SyncDelayProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</filename>
    <base>Steinberg::Vst::AudioEffect</base>
    <member kind="function">
      <type></type>
      <name>SyncDelayProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a97d9b06fba5da1a32c41c9675d0a6457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setBusArrangements</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a1bf4b1f878b98063c42b4cc344199386</anchor>
      <arglist>(SpeakerArrangement *inputs, int32 numIns, SpeakerArrangement *outputs, int32 numOuts) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a2a13e09cc9ec3dd1b8617a38e3c07af5</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a9228db732b48ece8b5b734e69b979d10</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getState</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>aee393393dc4dccf6e0b30a43380859b4</anchor>
      <arglist>(IBStream *state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>doParameterChanges</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a22aa916a737e4d0e51e89f0660bd6ff3</anchor>
      <arglist>(IParameterChanges &amp;changes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>calculateDelay</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>aa61dbbd9bf6e2bfc939d559a7fc4b2bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>BypassProcessor&lt; Vst::Sample32 &gt;</type>
      <name>mBypassProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>ade63e7efe97a15f4b3d744bead22b56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mDelayIndex</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>ae097a718df2e2e9f8d05dc305eb6d0aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mDelayInSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>a81c6addf6e54d5e155abc02d511c7d9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mBufferSizeInSamples</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>ad2a58a7c3b90a9f2b025fa28f8195214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>mTempo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>af8bdc45aa4ddcb63ef6f0421e5fd837b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float **</type>
      <name>mBuffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>afad181ed8e304987c06487f14e82c841</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>mBufferPos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1SyncDelayProcessor.html</anchorfile>
      <anchor>ab057f31002cb307dd84636e2898fe84c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::SyncEntry</name>
    <filename>structSteinberg_1_1Vst_1_1SyncEntry.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structSteinberg_1_1Vst_1_1SyncEntry.html</anchorfile>
      <anchor>aee90379adb0307effb138f4871edbc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const TChar *</type>
      <name>title</name>
      <anchorfile>structSteinberg_1_1Vst_1_1SyncEntry.html</anchorfile>
      <anchor>a5d9940d5100f826b640848a7b38da1f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::SynthData</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</filename>
    <templarg>VoiceT</templarg>
    <templarg>kEventBufferSize</templarg>
    <templarg>kNumVoices</templarg>
    <member kind="typedef">
      <type>VoiceT</type>
      <name>VOICE</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ac11fe17eee1172a3632e71ba706d9345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; Event, kEventBufferSize &gt;</type>
      <name>EventArray</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ad6210c53ad60e90cbfdec52546a841f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename EventArray::size_type</type>
      <name>EventPos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a87202d46d6e8e6b33f8bd206439f5eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; VOICE, kNumVoices &gt;</type>
      <name>VoiceArray</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a3eeeffabd9f4b286daff4d11c927d474</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ac3417447138070a4fa4d870cebbae3cf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasEvents</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a02e33118d5f5843bb2b6e0e5884ca8fc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEvents</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a76eea79d8cf97763d9306fbcd1493538</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>af0ec1d7b32021c766fd03b4f00919fbf</anchor>
      <arglist>(const Event &amp;e) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>EventArray</type>
      <name>events</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ae0ce15ecc94e479d84738072022fe50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventPos</type>
      <name>eventPos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a7f27020bd76e4cbb7a1f61ed42da170f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VoiceArray</type>
      <name>voice</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a1be71147dc3e150a8426812fbedfa918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>activevoices</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a87eb341278a24a4f1320d45de8a3a5b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>sustain</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ab857b673b2fcf24d6aeb56e88dde60f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>eventBufferSize</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a919b8aa0ccf8fddee8c898f8d4638308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>numVoices</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>adcc03654e8aac91fab4f468b56922074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>eventsDoneID</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ae279e541d1cd489cfca8f7aafd87948b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SynthData&lt; VOICE, kEventBufferSize, kNumVoices &gt;</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</filename>
    <member kind="typedef">
      <type>VOICE</type>
      <name>VOICE</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ac11fe17eee1172a3632e71ba706d9345</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; Event, kEventBufferSize &gt;</type>
      <name>EventArray</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ad6210c53ad60e90cbfdec52546a841f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>typename EventArray::size_type</type>
      <name>EventPos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a87202d46d6e8e6b33f8bd206439f5eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::array&lt; VOICE, kNumVoices &gt;</type>
      <name>VoiceArray</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a3eeeffabd9f4b286daff4d11c927d474</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ac3417447138070a4fa4d870cebbae3cf</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasEvents</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a02e33118d5f5843bb2b6e0e5884ca8fc</anchor>
      <arglist>() const noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearEvents</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a76eea79d8cf97763d9306fbcd1493538</anchor>
      <arglist>() noexcept</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>af0ec1d7b32021c766fd03b4f00919fbf</anchor>
      <arglist>(const Event &amp;e) noexcept</arglist>
    </member>
    <member kind="variable">
      <type>EventArray</type>
      <name>events</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ae0ce15ecc94e479d84738072022fe50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EventPos</type>
      <name>eventPos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a7f27020bd76e4cbb7a1f61ed42da170f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>VoiceArray</type>
      <name>voice</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a1be71147dc3e150a8426812fbedfa918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>activevoices</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a87eb341278a24a4f1320d45de8a3a5b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>sustain</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ab857b673b2fcf24d6aeb56e88dde60f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>eventBufferSize</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>a919b8aa0ccf8fddee8c898f8d4638308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>numVoices</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>adcc03654e8aac91fab4f468b56922074</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static constexpr int32</type>
      <name>eventsDoneID</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1SynthData.html</anchorfile>
      <anchor>ae279e541d1cd489cfca8f7aafd87948b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TalkBoxController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>TalkBoxController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a7ca53ca710ec3e46efcef7c7ea386f1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TalkBoxController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a86740502848ebb74ec30899de60e3ff9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxController.html</anchorfile>
      <anchor>a0c70c109052e9b110ac98232159794bc</anchor>
      <arglist>(uid, 0x64F420A3, 0xC25242A7, 0xAE8AAE63, 0xD0DC1C2D)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TalkBoxProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>TalkBoxProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a4b9ada76f402b8056129154c650efc4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TalkBoxProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a7f05481a9acb3c25c0b69a662730d70f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a6441505e8d5ea4284eab2a524d62789e</anchor>
      <arglist>(uid, 0xF235EEE4, 0x92084883, 0xAD5C8632, 0x34DFE073)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lpc</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a21284dd9fa3680cd23a1d3d842a0f090</anchor>
      <arglist>(float *buf, float *car, int32 n, int32 o)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>lpc_durbin</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a8b28ed1028c3d788aa4b28b97b700ba0</anchor>
      <arglist>(float *r, int32 p, float *k, float *g)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>car0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aa1806ecb733dd2e39a0eaa2173920022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>car1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>ab76e4deb1e0d775d35a7f4cb3fc68282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>window</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a406cb50c67efcff09b5dacdd22d3fac3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a7865bd1404a8db1c782ccd5a10a09d57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>adc932e4e46b31246c63656d615a27dd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>emphasis</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>ac5a9593af467bae7f2701cc7b1c8e273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>K</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a372a24837c926db3b9df19f15017182f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>N</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aecb0c41a103c3ec6c3be9bea428e9076</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>O</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aa35bff9c0358f8518b0c04b870b54fb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>swap</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a54f5f1849813d69b2178e492499ea447</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>FX</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a226d974d370bdeda67e69512d9310321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>d0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a6493124506ac247157a56227d082d502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>d1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a3967641da3863c1f79e94be997341402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>d2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aac1777fc7cfc528c03b3e8c38f14e2b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>d3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a272f8f105db6773b541a6b3188e0e16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>d4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>aeca66e3f9867ef8901fcbaad32b39d1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>u0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a4c1ba38118dfc685c384eeb7a1f23fc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>u1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a310b6e8a8ff0158740526e0f58aba29e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>u2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a1a60250abc10f1715477476c3a71167c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>u3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>a403249a8f072b149a90d5e7dd120d010</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>u4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TalkBoxProcessor.html</anchorfile>
      <anchor>abe02fb5484e2b1c93cfe0eb669c6765f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::TestSuite::Test</name>
    <filename>classSteinberg_1_1Vst_1_1TestSuite_1_1Test.html</filename>
    <member kind="function">
      <type></type>
      <name>Test</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite_1_1Test.html</anchorfile>
      <anchor>a58c9cf2134f070355732109fbf2c6fb7</anchor>
      <arglist>(FIDString _name, ITest *_test)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite_1_1Test.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>IPtr&lt; ITest &gt;</type>
      <name>test</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite_1_1Test.html</anchorfile>
      <anchor>a6a093e8b49e20c53fd4cd13750bb533a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::TestSuite</name>
    <filename>classSteinberg_1_1Vst_1_1TestSuite.html</filename>
    <base>Steinberg::ITestSuite</base>
    <class kind="class">Steinberg::Vst::TestSuite::Test</class>
    <member kind="function">
      <type></type>
      <name>TestSuite</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>aa17ab95efd66681927463ebcd8b83c46</anchor>
      <arglist>(FIDString _name)</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>addTest</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>ab5cd3d6642bf98c0e011eec89e1f7eab</anchor>
      <arglist>(FIDString _name, ITest *test) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>addTestSuite</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>abd9ab87ff10061a0520c0116e0d92b95</anchor>
      <arglist>(FIDString _name, ITestSuite *testSuite) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setEnvironment</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>aa665a3160a6c8940ce544c2efd282850</anchor>
      <arglist>(ITest *) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getTestCount</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a51167a2a927071acea4bb4cf83713430</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getTest</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>af1ceaba673fb155bc793a3e0ed861c0a</anchor>
      <arglist>(int32 index, ITest *&amp;_test, std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getTestSuite</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a220dc5844b73ed2795d934ef8cf3269a</anchor>
      <arglist>(int32 index, ITestSuite *&amp;testSuite, std::string &amp;_name) const</arglist>
    </member>
    <member kind="function">
      <type>ITestSuite *</type>
      <name>getTestSuite</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>af0669269dffee369d59fe0f48d3c2e7a</anchor>
      <arglist>(FIDString _name) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a8802382fe16a9f1966b9565e38a8495a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OBJ_METHODS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a8ec2fe4bed147603661f282a1dc8e4b7</anchor>
      <arglist>(TestSuite, FObject) REFCOUNT_METHODS(FObject) DEF_INTERFACES_1(ITestSuite</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::pair&lt; std::string, IPtr&lt; ITestSuite &gt; &gt;</type>
      <name>TestSuitePair</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a7b66f5f92eb311aed02726c38b7bcdb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::vector&lt; TestSuitePair &gt;</type>
      <name>TestSuiteVector</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>afecb8a3440f3b9772a44e2954219f6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>a9b45b3e13bd9167aab02e17e08916231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; IPtr&lt; Test &gt; &gt;</type>
      <name>tests</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>aa5868e0cb05c9aa67b302683695beff8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TestSuiteVector</type>
      <name>testSuites</name>
      <anchorfile>classSteinberg_1_1Vst_1_1TestSuite.html</anchorfile>
      <anchor>af7d00207274bb863647a148e57c75c97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TestToneController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>TestToneController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>ab9e4a07e520c19780b66a682829c706c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TestToneController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>adf5a2ee42225efbed0b561634f3c8e4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneController.html</anchorfile>
      <anchor>ab03231a2b667597bee7fbb5a38c36e2c</anchor>
      <arglist>(uid, 0x2FE2D7CB, 0x074C4CF3, 0xAF3608D9, 0xCB3A8E7C)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TestToneProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>TestToneProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a8927b3843d3313bc797b42b850f93a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TestToneProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a1e244593aa08929107576f5c39d87d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>ab1052b97721c528a3d23755b0d318f06</anchor>
      <arglist>(uid, 0x0AF801E5, 0x0B0D4D9B, 0xBB657671, 0xAC8F7847)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ParamValue &amp;</type>
      <name>param</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>aa9ee7461569e2f0b293d2f65df6f4710</anchor>
      <arglist>(TestToneParam p)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thru</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a46fc11aca1e39fba7c5033c40690c4a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>left</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a7d10b0c779bad3aabf067d52035f7052</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>right</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a6202f38a97a1c9eb0142baeb338cf1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>len</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>af67b7bab427a3a151b2b23026e913ef7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz0</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>ad4189f7efe23df6e98b2f313a380a394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a5b8a27b6d79c33300017a780d5d735d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a8abc58ad767ffa8f09e7f4559ebd6979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a06223b7056d51f06ef4b24b21ca1a4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>af77a0f5329b26c2f57a31b720fca6d00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>zz5</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a2e7263b22372dc7c1041ed407381f693</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>sw</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a0a47a96920c17c1b130a888686ec3e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>swd</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a5fe789581eadc19240fb5ccd3d1d4ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>swx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a63df4a404c5b601929a2e2aebeea3e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fscale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a8b98a204283ed6ae9333cc68a9092e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>cal</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>ad36303b43802391ea41993be94178770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>calx</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>a3c1cb46b828ec672c6a489c52828a9ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>swt</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>afefca5ca795238be0d04b9ab125cefb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TestToneProcessor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ThruZeroController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>ThruZeroController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>afab7eb928496c98679d99541d88d5ba7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThruZeroController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a4cf7a206afb5cc12947e14a9651eacbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroController.html</anchorfile>
      <anchor>a6f1320e5bf956b4ba6d0a3adfd602df0</anchor>
      <arglist>(uid, 0x4A552BC9, 0x3F484476, 0x87608F28, 0xE34736DE)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::ThruZeroProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>ThruZeroProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>ac8d4cdf8c71c6cac0318c8f2c7428979</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThruZeroProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>aeb49c685c6f08d7edea3b1d0eeda21b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>aa91fdde430b437c0ef0aac12aecc51fc</anchor>
      <arglist>(uid, 0xE7B8149A, 0x63A54BF8, 0x82B6A95D, 0x94A3F6EE)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rat</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>ac2b7fb9fc534e572efca4ecd24acdfc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dep</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a74f3f4c2bfa72818bd5c8ede3b9ccd34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>aa4788b4b47af1eaecad4a0096e3b2f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dem</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>aba5963438c841b24db3a35b3026b8fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a0ca1df279e4869b7dbe8b145ae94ad00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fb2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>adefa88247b42cc95ef8a0879277b6519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>deps</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a4b8c29cccaa47c6e54992d821307f1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>afa761c0753ecc94346e155a39bd9ed9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float *</type>
      <name>buffer2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a8072fefd4ac1fbf6d83fe3f975b3a977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>size</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>aa1728750481b853c3246037c1ba1c68b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>bufpos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1ThruZeroProcessor.html</anchorfile>
      <anchor>a04ce053e4cd48d3cf10e0128c0484738</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TrackerController</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</filename>
    <base>Steinberg::Vst::mda::BaseController</base>
    <member kind="function">
      <type></type>
      <name>TrackerController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>a5bfdae10bc6c51bc067101290180d956</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackerController</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>adeefe9d8999e73842066bb3597ffe15c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamStringByValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>a813cbf9dee7a64708f56160974dd37b0</anchor>
      <arglist>(ParamID tag, ParamValue valueNormalized, String128 string) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>getParamValueByString</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>abbe7aa5cacfe7d13c5ba4152ac6e3b5e</anchor>
      <arglist>(ParamID tag, TChar *string, ParamValue &amp;valueNormalized) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerController.html</anchorfile>
      <anchor>adf033d560bc99a5170704dcd50dfef75</anchor>
      <arglist>(uid, 0xBBF731F0, 0x94A848F0, 0xAEE9C5F6, 0x5DA3D3BA)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::mda::TrackerProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</filename>
    <base>Steinberg::Vst::mda::SampleAccurateBaseProcessor</base>
    <member kind="function">
      <type></type>
      <name>TrackerProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>adc555d54eea3713247297be28cb3032b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TrackerProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ad92e1375ba0d21396ac67f99226b0e7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getVst2UniqueId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a80b09ba6d56f803698722f396fff6329</anchor>
      <arglist>() const SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>initialize</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a4dae123b5697706651d9ff20c9614f63</anchor>
      <arglist>(FUnknown *context) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>terminate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a272e5d4c8e24f012573f9f5b11f7f569</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>setActive</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ad48c36f6210f722d195a93f68fb7dff4</anchor>
      <arglist>(TBool state) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doProcessing</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a35aa3fed88ff6cfb7898384d9e608277</anchor>
      <arglist>(ProcessData &amp;data) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static FUnknown *</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a35681a1de5678e85e97fe9f97200ab4a</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static</type>
      <name>DECLARE_UID</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ae25561bb4c9299bbb403d63164e72739</anchor>
      <arglist>(uid, 0x61EA12BB, 0xC25447EA, 0xABD8D344, 0xB21B8B40)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>float</type>
      <name>filterFreq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>afbc91e345f0196f41e0dcb13785b15eb</anchor>
      <arglist>(float hz)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>recalculate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a3026090cef033b689dc36c5f122924f9</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a96506b6974aa15a1dfa2ad3e6106dee0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>fo</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a891af05c1810aa6b6835a6942da48a42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>thr</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>af1251a78af95b174cf6fa123dbe441a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>phi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ab30c622a174639ec92b375db9b2ee56d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a00a332249e4d58732f3e201c8319c80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>ddphi</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a6d41382880a9df6fc357909f3fd95f2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>trans</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ad618458d9c15ada2b6727db8e5a7cea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>aa85af06ffd4cdd8750df50e09d955246</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a23919a6521508fe0d55a3666119b22be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a17fe15b4a30c3f1b3f5a9eaa5ce05e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>bold</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a10eeaea122b5ce78c0a5c2561c844527</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>wet</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ae7d1f01f4fe6cb38e5c786624b32b85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dry</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a9f83d53e5233a6e3b1fe6c7a55a48e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dyn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a61a1c70f0b5cde0d2b0eef62b36ad61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>env</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>rel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>aeab43b16f2fd52c9b88654edcb64db59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>saw</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ac293fc427b05b83e25540dfbbebcf3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>dsaw</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a7fa4b78a5ff91f7e38fa29f5960032de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>res1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ae7c7355cca034a0ad4a661f6cd9a00c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>res2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ab429ef07cf42d7b51fd4022aca46a41e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf3</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>aacfb31c7f4e2cfb0ab0967f7be16e38d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>buf4</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a9e7a38a682940eb8f83c0369b8cf78b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>max</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>afdd72a8595565398789f66327935d7d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>min</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a635336f26c3aa4b063d275ff111883ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>num</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>a6208dcc3a58e480b5b6d6bf53f76f984</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>sig</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>ae759ae3ca15c8cd6096dd139ceb29000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>mode</name>
      <anchorfile>classSteinberg_1_1Vst_1_1mda_1_1TrackerProcessor.html</anchorfile>
      <anchor>abdbf9351af7b99e82fbad02842eef222</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::Validator</name>
    <filename>classSteinberg_1_1Vst_1_1Validator.html</filename>
    <base>Steinberg::ITestResult</base>
    <base>Steinberg::Vst::IHostApplication</base>
    <class kind="struct">Steinberg::Vst::Validator::ModuleTestConfig</class>
    <member kind="function">
      <type></type>
      <name>Validator</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>af28d894fd2a793dd760457dda83c36e5</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Validator</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a188a914e53ad8c752e60cca75a9c1016</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>run</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a58e8be2db2660128e4e6456a9c981fb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OBJ_METHODS</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>af2c707bdc88866aa082944ea2c32412a</anchor>
      <arglist>(Validator, FObject) REFCOUNT_METHODS(FObject) tresult queryInterface(const char *_iid</arglist>
    </member>
    <member kind="variable">
      <type>void **obj</type>
      <name>override</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>ab73fdf8f77ef8c89f6be6c636a26f511</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>VST3::Hosting::Module</type>
      <name>Module</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>ab626c416deed7a37c2f1e52f754d4bd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addErrorMessage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>ad2dfcd5513e88f07d6811adb5750963c</anchor>
      <arglist>(const char *msg) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addMessage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a2c9dba5d859ca650cf20f048e13ac370</anchor>
      <arglist>(const char *msg) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>getName</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>abcfd783e3f96ce0afe0bbd6aa6a5a100</anchor>
      <arglist>(String128 name) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>tresult</type>
      <name>createInstance</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a960c7957e1318f6cdee291ff365ce07d</anchor>
      <arglist>(TUID cid, TUID iid, void **obj) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>IPtr&lt; TestSuite &gt;</type>
      <name>createTests</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a609e5d942b477b469958a5ecddaf93d4</anchor>
      <arglist>(ITestPlugProvider *plugProvider, const ConstString &amp;plugName, bool extensive)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addTest</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>afc96923e9a5755b429017d66df8759eb</anchor>
      <arglist>(ITestSuite *testSuite, TestBase *test)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>runTestSuite</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a58f90336ee18c10ad6f66c9841eb3ac6</anchor>
      <arglist>(TestSuite *suite, FIDString nameFilter=nullptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>testModule</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a8539dccb2d9f887d16820e3f241b17b7</anchor>
      <arglist>(Module::Ptr module, const ModuleTestConfig &amp;config)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>argc</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>ad1447518f4372828b8435ae82e48499e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char **</type>
      <name>argv</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>af2efa898e9eed6fe6715279cb1ec35b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>IPtr&lt; PlugInterfaceSupport &gt;</type>
      <name>mPlugInterfaceSupport</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a5552f3d766a2708d4f59dc2ca9865dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>numTestsFailed</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a04333b79129a2a6fbeb8927dcdf9c361</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>numTestsPassed</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>ad88cf3c988d08f5f55d36e4394f489fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>addErrorWarningTextToOutput</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a2c773db003868abb1968b5bd9a9314c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>infoStream</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a115212bd9693823b40af1f6df57b62fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::ostream *</type>
      <name>errorStream</name>
      <anchorfile>classSteinberg_1_1Vst_1_1Validator.html</anchorfile>
      <anchor>a3f198a28958e6e2679a89877626ab60f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::JX10Processor::VOICE</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>period</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ae08ac1ff9a62c213c5768ca3a538e546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>p</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a1922a551816a2725c69a086db7c12a03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pmax</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a02f528afb602dca80f3c7683adb7f9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dp</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>abffc072e7f271def8282d4311cbd0a79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sin0</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ae942b559b92a375f94ba3aaffcbaa775</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sin1</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a0c833cdc4ce8d5e546577309097d51fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sinx</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a84b8fe947530bd2959d52cb8e07c327e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dc</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ac15141f9bd148e7e13656cb126e8d4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>detune</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ab57a62f4202758be879127be7052b4cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>p2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>aee2214de575f7c6752b0c76dcf1b7979</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>pmax2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a6853108f382aabbdcff424263d79a6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dp2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>af213f0d5be1b541711dfd02f7ee88106</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sin02</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a7d23de1e19341bf2fedb78d90c8c4c54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sin12</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a52d4b890b9497c9beaff3eaf28e7dd7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>sinx2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ad2df9c62da642717c7fb89e349847d38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dc2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a93044dccad4bbcbe68c199bc16f1e08e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fc</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>aa7e91fb4ae3d43a619ae7d427767b97e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ff</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a3a6d5e369f6fff75c421ba62dbf656e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f0</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>aeb512f25d6c2de2da169568b97c22958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f1</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a343cbd40689d0f99b5a33e76a7e5fd86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a472bac04d61aeaed4a3e6b72be0b535e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>saw</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ac293fc427b05b83e25540dfbbebcf3e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>env</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>envd</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a37cd4c75f0b9ee76308dac1883a615c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>envl</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a728ffe847a595eaf38996299ad74a6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fenv</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ae9394312428df4f88947d8ab1fceac56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fenvd</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>abf0cb3421905bf4a461f51fc9113e6d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>fenvl</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a3fba2feb52eef8320d68a38f362effaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>lev</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a00f6e6f2de2f23ec7703279c5e7c1ad6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>lev2</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ace21ebc7756114e6dd32f8e1fc7ffb60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>target</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>af0df2177301e4061ab72ade2ea437bcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>note</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a6e8d5a4f873b9f4ddf747217d437ff10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>noteID</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a185db6fd0145d1a2748227c5fcb4d5ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snaPitchbend</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>aeb48ba8e5d811940d547aafe94b28816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snaVolume</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a427f84263b6728b33e49cee0c29c2e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snaPanLeft</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a3fbde0632016d1feec776c236b90e514</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>snaPanRight</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1JX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ab2cc39751956fa79dc7119845aa7da7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::PianoProcessor::VOICE</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>delta</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a2749a5d778ea6502e1d95269dd539c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>frac</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>af83930995710ec3879b82a20eee02b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>end</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aae31c8aaf4f0d8ca823fe4e2cf26de0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>loop</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a9531807d582fba717657d34fc72584cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>env</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>ab3b0edc273e86e845c8bce27fad19fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f0</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aeb512f25d6c2de2da169568b97c22958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f1</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a343cbd40689d0f99b5a33e76a7e5fd86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ff</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a3a6d5e369f6fff75c421ba62dbf656e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>outl</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>ae591e08d901fc29680f78da34dbb2668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>outr</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a388bb4f1d708946f5687b985a59bb6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>note</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a6e8d5a4f873b9f4ddf747217d437ff10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>noteID</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1PianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a185db6fd0145d1a2748227c5fcb4d5ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::DX10Processor::VOICE</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>env</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dmod</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a3239ed419f4374ec16261c9213df533a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mod0</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ae772500aab853e89720a5b24b3f09a87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mod1</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a9040f57e29e354eb4d93b7310714370a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>menv</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a6559dc5ac44f00ea85988e74543922b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mlev</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a6d60b32d03e556dca65414a2a72f8021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>mdec</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a283516433da13e38f12b2859bf2448e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>car</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a05e5a80efb49540ed38cf0a2e1cb9a8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dcar</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a0f089860087d0b1914366064d3655360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cenv</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a50874ba60395e4589fa4480c7c627883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>catt</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>adcf48f772f5cbbed8917e8fe7d1949ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>cdec</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>ae8413f747533d81c8b501b4d58777185</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>note</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1DX10Processor_1_1VOICE.html</anchorfile>
      <anchor>a6e8d5a4f873b9f4ddf747217d437ff10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Steinberg::Vst::mda::EPianoProcessor::VOICE</name>
    <filename>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</filename>
    <member kind="variable">
      <type>int32</type>
      <name>delta</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a2749a5d778ea6502e1d95269dd539c0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>frac</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>af83930995710ec3879b82a20eee02b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>pos</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aa98fea17674bef3e67fbd014da075008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>end</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aae31c8aaf4f0d8ca823fe4e2cf26de0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>loop</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a9531807d582fba717657d34fc72584cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>env</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>af5c922cc1f7054edc9060d83074d7a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>dec</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>ab3b0edc273e86e845c8bce27fad19fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f0</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>aeb512f25d6c2de2da169568b97c22958</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>f1</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a343cbd40689d0f99b5a33e76a7e5fd86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>ff</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a3a6d5e369f6fff75c421ba62dbf656e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>outl</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>ae591e08d901fc29680f78da34dbb2668</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>outr</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a388bb4f1d708946f5687b985a59bb6e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>note</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a6e8d5a4f873b9f4ddf747217d437ff10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int32</type>
      <name>noteID</name>
      <anchorfile>structSteinberg_1_1Vst_1_1mda_1_1EPianoProcessor_1_1VOICE.html</anchorfile>
      <anchor>a185db6fd0145d1a2748227c5fcb4d5ed</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::Voice</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</filename>
    <templarg></templarg>
    <base>VoiceBase&lt; kNumParameters, SamplePrecision, 2, GlobalParameterState &gt;</base>
    <member kind="function">
      <type></type>
      <name>Voice</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>af62a35c7d4ac17a614bf11934e3f6ab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Voice</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a5063ff08093aec1bf535da54f82d2b46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a71e6e1ee23909faf1fbcf67e5c4d9ab8</anchor>
      <arglist>(ParamValue sampleRate) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>afbaee1efbaf1aa7cc8e11aee76f87230</anchor>
      <arglist>(int32 pitch, ParamValue velocity, float tuning, int32 sampleOffset, int32 nId) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>noteOff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a3c2eb11950987e32c7626349c6d9a309</anchor>
      <arglist>(ParamValue velocity, int32 sampleOffset) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>af5633caf11b30f0b3d19d40d824baffc</anchor>
      <arglist>(SamplePrecision *outputBuffers[2], int32 numSamples)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a2c3d80910cba8d54d2cb02d325415b2a</anchor>
      <arglist>() SMTG_OVERRIDE</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNoteExpressionValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>aea29053def27f48c07b912da907f2076</anchor>
      <arglist>(int32 index, ParamValue value) SMTG_OVERRIDE</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>uint32</type>
      <name>n</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a58f1256fe216b2e84819aa621b683de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noisePos</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a6617e80306cebdad8d3a72ecb45c94cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noiseStep</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a39c264df9e6beba8005b456add914dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Filter *</type>
      <name>filter</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a57e1cb65909a3a9e9914a0f476d8dd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SamplePrecision</type>
      <name>trianglePhase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a8f2744a71a9ada3e9a9d3865e0b94512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SamplePrecision</type>
      <name>sinusPhase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>aad56f522f9aa6fe14c5e11d1bf855e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentTriangleF</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a1519b440b3364eb83d975b3ad541e9f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentSinusF</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a5393da516b86c3f92769b125436149b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentVolume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a9484c6c4aff6446c13cb90ef967b0fd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentPanningLeft</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a4be8e32063516e92ae5e2179adb6d2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentPanningRight</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a0e39645a0b7224b7539716681c2c639a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentNoiseVolume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a2805557543885161515af402edc3fc1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentSinusVolume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a282c1b45ddd6617a51b355bae14f1510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentSinusDetune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a073a0a3a4177fcccd3bc8995c3d5d7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentSquareVolume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a458928494f6323049c1a2ec3e49bb9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentTriangleVolume</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a5323c5749093aa9f133988c7c7799c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentTriangleSlope</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a18bcd11ad671a4bf3f53767cde236f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentLPFreq</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>ab9542f3aa98556383842634c8da1aa58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>currentLPQ</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>aa22fe57240f981f1281e79a8594ce22d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>levelFromVel</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a90c2b57fb705c32e75721aca5b78acc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>noteOffVolumeRamp</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1Voice.html</anchorfile>
      <anchor>a08f81da02cfb7213a922ed52942b8b19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::VoiceBase</name>
    <filename>classSteinberg_1_1Vst_1_1VoiceBase.html</filename>
    <templarg>numValues</templarg>
    <templarg>SamplePrecision</templarg>
    <templarg>numChannels</templarg>
    <templarg>GlobalParameterStorage</templarg>
    <member kind="function">
      <type>int32</type>
      <name>getNoteId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a3990428f7edff388c11f77c197e900e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGlobalParameterStorage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a434c51e7e713535e551908b8c1f76baa</anchor>
      <arglist>(GlobalParameterStorage *globalParameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a7b3e63340f3dffc4bb5cd7e5e849e000</anchor>
      <arglist>(ParamValue sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a1b807f11fbbf59cb6c9bd993b8971567</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNoteExpressionValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a509c36bb51295f5e3faebce9b15dc94b</anchor>
      <arglist>(int32 index, ParamValue value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>noteOn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a73e0a4359d0dc41720d03769bbb27417</anchor>
      <arglist>(int32 pitch, ParamValue velocity, float tuning, int32 sampleOffset, int32 noteId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>noteOff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>adc05acdd34ba58b0a917d3a4d227fb6b</anchor>
      <arglist>(ParamValue velocity, int32 sampleOffset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a7b0e029102ad38f4b814c6523aedb53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>ac234616f7c4f0f968aca673ae236cd04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a8b724f00ca7e92e5e451123145bf2d53</anchor>
      <arglist>(const VoiceBase &amp;vb)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a94b21e20d425d55ec761b9d5acc36a05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GlobalParameterStorage *</type>
      <name>globalParameters</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>abed6e720d5becfd5fff36a96044576ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a10cb194b5adb5b7bd968688cdd58de53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>pitch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a2e15c8934dbffc78481b0158a2b7b7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteOnSampleOffset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>acf1898359f6ea52a441e4af28c83f392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteOffSampleOffset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a486d45bd8c68fbd393e051682684eeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tuning</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a0fb775127789ce2215c83775414e6f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>sampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a5107872e5f644007e7c4b2ed42371928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>noteOnVelocity</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a62774a81bf875a00321b2974ee87d4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>noteOffVelocity</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>ae9a7e45b32e54b9b41198aa3f0f033f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>values</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a714732b56dec5c7728ead28dc17cec11</anchor>
      <arglist>[numValues]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VoiceBase&lt; kNumParameters, SamplePrecision, 2, GlobalParameterState &gt;</name>
    <filename>classSteinberg_1_1Vst_1_1VoiceBase.html</filename>
    <member kind="function">
      <type>int32</type>
      <name>getNoteId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a3990428f7edff388c11f77c197e900e8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setGlobalParameterStorage</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a434c51e7e713535e551908b8c1f76baa</anchor>
      <arglist>(GlobalParameterState *globalParameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a7b3e63340f3dffc4bb5cd7e5e849e000</anchor>
      <arglist>(ParamValue sampleRate)</arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>getSampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a1b807f11fbbf59cb6c9bd993b8971567</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setNoteExpressionValue</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a509c36bb51295f5e3faebce9b15dc94b</anchor>
      <arglist>(int32 index, ParamValue value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>noteOn</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a73e0a4359d0dc41720d03769bbb27417</anchor>
      <arglist>(int32 pitch, ParamValue velocity, float tuning, int32 sampleOffset, int32 noteId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>noteOff</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>adc05acdd34ba58b0a917d3a4d227fb6b</anchor>
      <arglist>(ParamValue velocity, int32 sampleOffset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a7b0e029102ad38f4b814c6523aedb53d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>ac234616f7c4f0f968aca673ae236cd04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a8b724f00ca7e92e5e451123145bf2d53</anchor>
      <arglist>(const VoiceBase &amp;vb)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~VoiceBase</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a94b21e20d425d55ec761b9d5acc36a05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GlobalParameterState *</type>
      <name>globalParameters</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>abed6e720d5becfd5fff36a96044576ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteId</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a10cb194b5adb5b7bd968688cdd58de53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>pitch</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a2e15c8934dbffc78481b0158a2b7b7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteOnSampleOffset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>acf1898359f6ea52a441e4af28c83f392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>noteOffSampleOffset</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a486d45bd8c68fbd393e051682684eeb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>float</type>
      <name>tuning</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a0fb775127789ce2215c83775414e6f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>sampleRate</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a5107872e5f644007e7c4b2ed42371928</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>noteOnVelocity</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a62774a81bf875a00321b2974ee87d4f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>noteOffVelocity</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>ae9a7e45b32e54b9b41198aa3f0f033f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ParamValue</type>
      <name>values</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceBase.html</anchorfile>
      <anchor>a714732b56dec5c7728ead28dc17cec11</anchor>
      <arglist>[numValues]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::VoiceProcessor</name>
    <filename>classSteinberg_1_1Vst_1_1VoiceProcessor.html</filename>
    <member kind="function">
      <type></type>
      <name>VoiceProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>adc8cb490ac3b4777e484c7d68c9fab73</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VoiceProcessor</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>aa0f1925c785d52e33d430e24a55cc7e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>a6b98eb31cf38ba96a28b303c13c64e13</anchor>
      <arglist>(ProcessData &amp;data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>a057fc4070dc2a34eea400b9a5f7c2573</anchor>
      <arglist>(Event evt)=0</arglist>
    </member>
    <member kind="function">
      <type>int32</type>
      <name>getActiveVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>a4494bc201d9f4f307c6fcaaf21487afd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clearOutputNeeded</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>a507479b90e66719ae962ad5b81e76e0d</anchor>
      <arglist>(bool val)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int32</type>
      <name>activeVoices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>aa86ea8cc7dd3cf5f2033f261daec4165</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>mClearOutputNeeded</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessor.html</anchorfile>
      <anchor>a2c940dd02450b042f786670ea167a9c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::VoiceProcessorImplementation</name>
    <filename>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>numChannels</templarg>
    <templarg>maxVoices</templarg>
    <templarg></templarg>
    <base>Steinberg::Vst::VoiceProcessor</base>
    <member kind="function">
      <type></type>
      <name>VoiceProcessorImplementation</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a1d61d362224a59b0409dd36fef8a9562</anchor>
      <arglist>(float sampleRate, GlobalParameterStorage *globalParameters=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VoiceProcessorImplementation</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a5a96da022fed22b7882c63bb557181d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>tresult</type>
      <name>process</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a0849ab0f2ea82cee2cd2c29e1a5a193d</anchor>
      <arglist>(ProcessData &amp;data) override</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>processEvent</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a0ee90f2ec55c3d3e1474d37fe9585de0</anchor>
      <arglist>(Event evt) override</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>VoiceClass *</type>
      <name>getVoice</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>ae766dc58c41b24f353977f8d818443a3</anchor>
      <arglist>(int32 noteId)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>VoiceClass *</type>
      <name>findVoice</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a543bc2ae29df00825aa4409281f6921d</anchor>
      <arglist>(int32 noteId)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VoiceClass</type>
      <name>voices</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VoiceProcessorImplementation.html</anchorfile>
      <anchor>a03e282472adb6318ffa662623225b257</anchor>
      <arglist>[maxVoices]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::NoteExpressionSynth::VoiceStatics</name>
    <filename>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</filename>
    <member kind="enumvalue">
      <name>kNumFrequencies</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a816ae0069f5637892a32344b8a28325f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumFrequencies</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>ac36f475ca5b446f4fde4c9b90bec77c8a816ae0069f5637892a32344b8a28325f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>normalizedLevel2Gain</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>aa6650e33a573e54abe697f01ed01249a</anchor>
      <arglist>(float normalized)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static float</type>
      <name>freqTab</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>ae3ec698753264d988d32756c88e7a1f8</anchor>
      <arglist>[kNumFrequencies]</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>scaleHeadRoom</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>a083829764df27ee35ed5e76d6223f8f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>scaleNorm2GainC1</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>ac94ca4a7f4ae0fde708128b72102a2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const float</type>
      <name>scaleNorm2GainC2</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>a536c7051c56c9d22512a0597d905b556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static LogScale&lt; ParamValue &gt;</type>
      <name>freqLogScale</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>a17baf16be5ad8e5a7c376d2bfe894956</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>kNormTuningOneOctave</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>a3d5ca94d33d5e124305a6ef08d2958c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const double</type>
      <name>kNormTuningOneTune</name>
      <anchorfile>classSteinberg_1_1Vst_1_1NoteExpressionSynth_1_1VoiceStatics.html</anchorfile>
      <anchor>a7ca02bb1ad97593cdafda8b7fc813304</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class" objc="yes">
    <name>VSTInterAppAudioAppDelegate</name>
    <filename>interfaceVSTInterAppAudioAppDelegate.html</filename>
    <base>VSTInterAppAudioAppDelegateBase</base>
  </compound>
  <compound kind="class" objc="yes">
    <name>VSTInterAppAudioHostUIControllerViewController</name>
    <filename>interfaceVSTInterAppAudioHostUIControllerViewController.html</filename>
    <member kind="function" virtualness="virtual">
      <type>IBAction</type>
      <name>hideView:</name>
      <anchorfile>interfaceVSTInterAppAudioHostUIControllerViewController.html</anchorfile>
      <anchor>a9eac0e829d06d8e0538efa3bcbc657f5</anchor>
      <arglist>(id sender)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>IBAction</type>
      <name>switchToHost:</name>
      <anchorfile>interfaceVSTInterAppAudioHostUIControllerViewController.html</anchorfile>
      <anchor>af99bc7bdec85c3d63133aca2486de9ea</anchor>
      <arglist>(id sender)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>IBAction</type>
      <name>play:</name>
      <anchorfile>interfaceVSTInterAppAudioHostUIControllerViewController.html</anchorfile>
      <anchor>ac7716abe4e439ff5eba215cd839884e7</anchor>
      <arglist>(id sender)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>IBAction</type>
      <name>rewind:</name>
      <anchorfile>interfaceVSTInterAppAudioHostUIControllerViewController.html</anchorfile>
      <anchor>ac2dc241cbcb38748163fb9cc70fed609</anchor>
      <arglist>(id sender)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>IBAction</type>
      <name>record:</name>
      <anchorfile>interfaceVSTInterAppAudioHostUIControllerViewController.html</anchorfile>
      <anchor>a32783e8fb3b7abf8fd8fdc1f843d7bc4</anchor>
      <arglist>(id sender)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Steinberg::Vst::VstModule</name>
    <filename>classSteinberg_1_1Vst_1_1VstModule.html</filename>
    <member kind="function">
      <type></type>
      <name>VstModule</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VstModule.html</anchorfile>
      <anchor>a07265715a7ea82a5e5fbf8e1e441e20a</anchor>
      <arglist>(const char *path)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VstModule</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VstModule.html</anchorfile>
      <anchor>add6511b047a5b81b539de2e0705b14d7</anchor>
      <arglist>() override</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VstModule.html</anchorfile>
      <anchor>a5bc2a781be2586924afce4e4a4ea6697</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>IPluginFactory *</type>
      <name>getFactory</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VstModule.html</anchorfile>
      <anchor>a80f99ded9633f3811b38a4d6a6f4f801</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>OBJ_METHODS(VstModule, FObject) protected IPluginFactory *</type>
      <name>factory</name>
      <anchorfile>classSteinberg_1_1Vst_1_1VstModule.html</anchorfile>
      <anchor>adf38eeb88391ed02bef501e3e2f00395</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Steinberg</name>
    <filename>namespaceSteinberg.html</filename>
    <namespace>Steinberg::HostChecker</namespace>
    <namespace>Steinberg::Panner</namespace>
    <namespace>Steinberg::Vst</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>ac6189c9d2e3b7153cab8913a42d8c4f4</anchor>
      <arglist>(const ViewRect &amp;r1, const ViewRect &amp;r2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>a8b3291e5d46b20e550cfdc886ad9ca0f</anchor>
      <arglist>(const ViewRect &amp;r1, const ViewRect &amp;r2)</arglist>
    </member>
    <member kind="variable">
      <type>FUnknown *</type>
      <name>gStandardPluginContext</name>
      <anchorfile>namespaceSteinberg.html</anchorfile>
      <anchor>ae321ca2b045da80954622c101138b2b7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::HostChecker</name>
    <filename>namespaceSteinberg_1_1HostChecker.html</filename>
    <member kind="variable">
      <type>const int32</type>
      <name>kMaxLatency</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>ae3d4ad032b2586752aaefe7d98b3b352</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a82a59297717d21868266e8a4fd1da4f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnBitCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a72e8435dc9b0315802adde434a4fcd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const uint32</type>
      <name>kParamWarnStepCount</name>
      <anchorfile>namespaceSteinberg_1_1HostChecker.html</anchorfile>
      <anchor>a4bc22a30a6391416bcaa23b915d31916</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Panner</name>
    <filename>namespaceSteinberg_1_1Panner.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst</name>
    <filename>namespaceSteinberg_1_1Vst.html</filename>
    <namespace>Steinberg::Vst::AudioHost</namespace>
    <namespace>Steinberg::Vst::EditorHost</namespace>
    <namespace>Steinberg::Vst::LegacyMIDICCOut</namespace>
    <namespace>Steinberg::Vst::mda</namespace>
    <namespace>Steinberg::Vst::NoteExpressionSynth</namespace>
    <class kind="class">Steinberg::Vst::ADelayController</class>
    <class kind="class">Steinberg::Vst::ADelayProcessor</class>
    <class kind="class">Steinberg::Vst::AGain</class>
    <class kind="class">Steinberg::Vst::AGainController</class>
    <class kind="class">Steinberg::Vst::AGainUIMessageController</class>
    <class kind="class">Steinberg::Vst::AGainWithSideChain</class>
    <class kind="class">Steinberg::Vst::EditorSizeController</class>
    <class kind="class">Steinberg::Vst::HostCheckerController</class>
    <class kind="class">Steinberg::Vst::HostCheckerProcessor</class>
    <class kind="class">Steinberg::Vst::IDelayTestController</class>
    <class kind="class">Steinberg::Vst::LogScale</class>
    <class kind="class">Steinberg::Vst::LogScaleParameter</class>
    <class kind="class">Steinberg::Vst::PitchNamesController</class>
    <class kind="class">Steinberg::Vst::PitchNamesProcessor</class>
    <class kind="class">Steinberg::Vst::Plug</class>
    <class kind="class">Steinberg::Vst::PlugController</class>
    <class kind="class">Steinberg::Vst::SyncDelayController</class>
    <class kind="class">Steinberg::Vst::SyncDelayProcessor</class>
    <class kind="struct">Steinberg::Vst::SyncEntry</class>
    <class kind="class">Steinberg::Vst::TestSuite</class>
    <class kind="class">Steinberg::Vst::Validator</class>
    <class kind="class">Steinberg::Vst::VoiceBase</class>
    <class kind="class">Steinberg::Vst::VoiceProcessor</class>
    <class kind="class">Steinberg::Vst::VoiceProcessorImplementation</class>
    <class kind="class">Steinberg::Vst::VstModule</class>
    <member kind="typedef">
      <type>std::vector&lt; float &gt;</type>
      <name>SizeFactors</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>a3e856c7ffbe25183e8d732833ec765d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDelayId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea7d4228d4da0ae0131ef1783f79526104</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea57a371feb983eb7350939ef1aab87090</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParam1Tag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a62b2022052e868671bb75cd58084574f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kGeneratePeaksTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ade4c107478667f79e5aff7cf216143c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLatencyTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a895c3f08d5334358ee7628f412529369</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04accae6362415ab072a25d0f720df50d28</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCanResizeTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a7f4718263113cc1893694bc352eac2af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kScoreTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a549f60a171e154b6a8a5fc3fd29a9dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamWhichCouldBeHiddenTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a0bef0d6212b8144c2b717ef8fd375d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriggerHiddenTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a79b0ada10bec303a481a3c7dc8ef13a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriggerProgressTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a19ba37e132970966dad81b0a71234d59</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProgressValueTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ace7e68fad1a025ca53d2f6b5a1e5e44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kCopy2ClipboardTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04abdd12f264dfee05446ae8e7ecb53a35c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartNoteExpressionChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a2c5ab865b4fe4c09237ba13ff1855be1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartKeyswitchChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a838ced30e9360ac386775eb2166b322e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartParamValuesChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a11e59c0c9b5f181b1a7cc9255dd75168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kRestartParamTitlesChangedTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a4aa199a87ec77535f30478d62ddc5d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kProcessWarnTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ae8cff5408066b4167241eedf3679cf3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kLastTag</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a93e21950be830dbb0584b13931e8ec91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUnitId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04a390c94ed7f81f33a64dc96dd65c24aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kUnit2Id</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>abc6126af1d45847bc59afa0aa3216b04ae08509ca4981dea660e42a45553830b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kDelayId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea7d4228d4da0ae0131ef1783f79526104</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kBypassId</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>aaf105ae5beaca1dee30ae54530691fcea57a371feb983eb7350939ef1aab87090</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DEF_CLASS_IID</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>ad4b1aebf3c139f29c168a7b0c7513b89</anchor>
      <arglist>(IDelayTestController) tresult ADelayController</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>THREAD_CHECK_EXIT</name>
      <anchorfile>namespaceSteinberg_1_1Vst.html</anchorfile>
      <anchor>a0468a21b96e7fbd1d36311275775d9a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst::AudioHost</name>
    <filename>namespaceSteinberg_1_1Vst_1_1AudioHost.html</filename>
    <class kind="class">Steinberg::Vst::AudioHost::App</class>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst::EditorHost</name>
    <filename>namespaceSteinberg_1_1Vst_1_1EditorHost.html</filename>
    <class kind="class">Steinberg::Vst::EditorHost::App</class>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst::LegacyMIDICCOut</name>
    <filename>namespaceSteinberg_1_1Vst_1_1LegacyMIDICCOut.html</filename>
    <class kind="class">Steinberg::Vst::LegacyMIDICCOut::Plug</class>
    <class kind="class">Steinberg::Vst::LegacyMIDICCOut::PlugController</class>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst::mda</name>
    <filename>namespaceSteinberg_1_1Vst_1_1mda.html</filename>
    <class kind="class">Steinberg::Vst::mda::AmbienceController</class>
    <class kind="class">Steinberg::Vst::mda::AmbienceProcessor</class>
    <class kind="class">Steinberg::Vst::mda::BandistoController</class>
    <class kind="class">Steinberg::Vst::mda::BandistoProcessor</class>
    <class kind="class">Steinberg::Vst::mda::BaseController</class>
    <class kind="class">Steinberg::Vst::mda::BaseParameter</class>
    <class kind="class">Steinberg::Vst::mda::BeatBoxController</class>
    <class kind="class">Steinberg::Vst::mda::BeatBoxProcessor</class>
    <class kind="class">Steinberg::Vst::mda::ComboController</class>
    <class kind="class">Steinberg::Vst::mda::ComboProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DeEsserController</class>
    <class kind="class">Steinberg::Vst::mda::DeEsserProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DegradeController</class>
    <class kind="class">Steinberg::Vst::mda::DegradeProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DelayController</class>
    <class kind="class">Steinberg::Vst::mda::DelayProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DetuneController</class>
    <class kind="class">Steinberg::Vst::mda::DetuneProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DitherController</class>
    <class kind="class">Steinberg::Vst::mda::DitherProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DubDelayController</class>
    <class kind="class">Steinberg::Vst::mda::DubDelayProcessor</class>
    <class kind="class">Steinberg::Vst::mda::DX10Controller</class>
    <class kind="class">Steinberg::Vst::mda::DX10Processor</class>
    <class kind="class">Steinberg::Vst::mda::DynamicsController</class>
    <class kind="class">Steinberg::Vst::mda::DynamicsProcessor</class>
    <class kind="class">Steinberg::Vst::mda::EPianoController</class>
    <class kind="class">Steinberg::Vst::mda::EPianoProcessor</class>
    <class kind="class">Steinberg::Vst::mda::ImageController</class>
    <class kind="class">Steinberg::Vst::mda::ImageProcessor</class>
    <class kind="class">Steinberg::Vst::mda::IndexedParameter</class>
    <class kind="class">Steinberg::Vst::mda::JX10Controller</class>
    <class kind="class">Steinberg::Vst::mda::JX10Processor</class>
    <class kind="class">Steinberg::Vst::mda::LeslieController</class>
    <class kind="class">Steinberg::Vst::mda::LeslieProcessor</class>
    <class kind="class">Steinberg::Vst::mda::LimiterController</class>
    <class kind="class">Steinberg::Vst::mda::LimiterProcessor</class>
    <class kind="class">Steinberg::Vst::mda::LoudnessController</class>
    <class kind="class">Steinberg::Vst::mda::LoudnessProcessor</class>
    <class kind="class">Steinberg::Vst::mda::MultiBandController</class>
    <class kind="class">Steinberg::Vst::mda::MultiBandProcessor</class>
    <class kind="class">Steinberg::Vst::mda::OverdriveController</class>
    <class kind="class">Steinberg::Vst::mda::OverdriveProcessor</class>
    <class kind="class">Steinberg::Vst::mda::PianoController</class>
    <class kind="class">Steinberg::Vst::mda::PianoProcessor</class>
    <class kind="class">Steinberg::Vst::mda::Processor</class>
    <class kind="class">Steinberg::Vst::mda::ProxyParameter</class>
    <class kind="class">Steinberg::Vst::mda::RePsychoController</class>
    <class kind="class">Steinberg::Vst::mda::RePsychoProcessor</class>
    <class kind="class">Steinberg::Vst::mda::RezFilterController</class>
    <class kind="class">Steinberg::Vst::mda::RezFilterProcessor</class>
    <class kind="class">Steinberg::Vst::mda::RingModController</class>
    <class kind="class">Steinberg::Vst::mda::RingModProcessor</class>
    <class kind="class">Steinberg::Vst::mda::RoundPanController</class>
    <class kind="class">Steinberg::Vst::mda::RoundPanProcessor</class>
    <class kind="class">Steinberg::Vst::mda::SampleAccurateBaseProcessor</class>
    <class kind="class">Steinberg::Vst::mda::ScaledParameter</class>
    <class kind="class">Steinberg::Vst::mda::ShepardController</class>
    <class kind="class">Steinberg::Vst::mda::ShepardProcessor</class>
    <class kind="class">Steinberg::Vst::mda::SpecMeterController</class>
    <class kind="class">Steinberg::Vst::mda::SpecMeterProcessor</class>
    <class kind="class">Steinberg::Vst::mda::SplitterController</class>
    <class kind="class">Steinberg::Vst::mda::SplitterProcessor</class>
    <class kind="class">Steinberg::Vst::mda::StereoController</class>
    <class kind="class">Steinberg::Vst::mda::StereoProcessor</class>
    <class kind="class">Steinberg::Vst::mda::SubSynthController</class>
    <class kind="class">Steinberg::Vst::mda::SubSynthProcessor</class>
    <class kind="struct">Steinberg::Vst::mda::SynthData</class>
    <class kind="class">Steinberg::Vst::mda::TalkBoxController</class>
    <class kind="class">Steinberg::Vst::mda::TalkBoxProcessor</class>
    <class kind="class">Steinberg::Vst::mda::TestToneController</class>
    <class kind="class">Steinberg::Vst::mda::TestToneProcessor</class>
    <class kind="class">Steinberg::Vst::mda::ThruZeroController</class>
    <class kind="class">Steinberg::Vst::mda::ThruZeroProcessor</class>
    <class kind="class">Steinberg::Vst::mda::TrackerController</class>
    <class kind="class">Steinberg::Vst::mda::TrackerProcessor</class>
    <member kind="typedef">
      <type>SampleAccurateBaseProcessor</type>
      <name>BaseProcessor</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1mda.html</anchorfile>
      <anchor>aa0936cf0a422e298f98238f76edfcc44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>TestToneParam</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1mda.html</anchorfile>
      <anchor>ad4a12cdd49d69dab3151c2972b5e76a4</anchor>
      <arglist></arglist>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a650be61892bf690026089544abbd9d26">Mode</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4aa0db49ba470c1c9ae2128c3470339153">Level</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a781dc97dc62331eec3ea9ec4373a3ca8">Channel</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4ae1dffc8709f31a4987c8a88334107e89">F1</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4afe5c3684dce76cdd9f7f42430868aa74">F2</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a8e9014ddfce21beb1b3cd7da888cbdea">Sweep</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a778bbb350586657cc3127ef666a75618">Thru</enumvalue>
      <enumvalue file="namespaceSteinberg_1_1Vst_1_1mda.html" anchor="ad4a12cdd49d69dab3151c2972b5e76a4a69fc24f6dd1ad5005df611acf4229ace">ZerodB</enumvalue>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Steinberg::Vst::NoteExpressionSynth</name>
    <filename>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</filename>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::BrownNoise</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Controller</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::ControllerWithUI</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Filter</class>
    <class kind="struct">Steinberg::Vst::NoteExpressionSynth::GlobalParameterState</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Processor</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::ProcessorWithUIController</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::Voice</class>
    <class kind="class">Steinberg::Vst::NoteExpressionSynth::VoiceStatics</class>
    <member kind="enumvalue">
      <name>kParamReleaseTime</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a91f1716d5c6095299340b475b63dce2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamNoiseVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57aaa0d2fa6e5ca05209a80bcd914c4af06</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSinusVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a412ff72345b594894000c8f47b7f1921</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTriangleVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a1fd60c9fd3b89595fd4fac5452a9eab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSinusDetune</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a36f04f1c4ad888ed7950c98cadc0f5d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamBypassSNA</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a28e3fcf7199688b7cb545bc12d809b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTriangleSlop</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ac3653590a877c6bdf3792f59be40eb90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterType</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57aa1561f024a54fea5cbe44e301597ce49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterFreq</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a77d924fdebf79683bacdc950e8d97927</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterQ</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a6f57b4500838eed6d28cb3d0a18c2eac</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamMasterVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a305960e8a0a7efe8a230c54b0fae7241</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamMasterTuning</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a64027d24fafda77fee5484965c2a1f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamVelToLevel</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ad33a80bac508a5fbe271f14a94203608</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamFilterFreqModDepth</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57af6905f57b2a332b3be3f375a352f497f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamTuningRange</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a90c528610d766ac690f4bdc610b54263</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamActiveVoices</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57ac1b7756581e9cdd3f3bdf949884f4eb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamSquareVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a763d2b0b998e0befac498a6f85fb4586</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumGlobalParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>ab04a0655cd1e3bcac5e8f48c18df1a57a5e08b56cf242bca747e71a1db6d3e44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamMIDILearn</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a385c44f6fb256e5716a2302a5b940388af5404385ef1048d1e74993a409b6f030</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kParamEnableMPE</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a385c44f6fb256e5716a2302a5b940388a529b59e28a1ca482d2acdd7e5a098d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>VoiceParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kVolumeMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da5e10b316568bc305dce5048b0b4aa179</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTuningMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daef4d8aa59cba7c34e5d7cd6844caa877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPanningLeft</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da0ac26f0bf0461b55b596412ebb5c25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kPanningRight</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da28142103b5ea374bc2dfada4f38f43cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNoiseVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da912bfe48653cc16464d18085c3755f6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterFrequencyMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da122461f98d458fb93eae02df5e8337a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterQMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dab46457a150a5aa8387470b45e110689d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dac27d14ab31c50dc10de9c0957203b738</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da41892a7e572e701bbb31e27d7882b939</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kFilterType</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daecbdbeaa9511062f941714bbf20622ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kTriangleSlope</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daa1c0099aaa84b41e977bdbd88193d73f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSinusDetune</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45dace5a49d9700610738ba0da1b54f4df8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kReleaseTimeMod</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daac6a071b53c40d42d7d1a0a57a7253dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kSquareVolume</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45daf461c3668475e9f0359286d19ca24e54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>kNumParameters</name>
      <anchorfile>namespaceSteinberg_1_1Vst_1_1NoteExpressionSynth.html</anchorfile>
      <anchor>a1ce3513d3c756afe6a0aecc8b8e7d45da1dfc7e7be1ba07eb4144e11e6ffa3d84</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>VSTGUI</name>
    <filename>namespaceVSTGUI.html</filename>
    <class kind="class">VSTGUI::EventLogDataBrowserSource</class>
    <class kind="class">VSTGUI::NoteTouchController</class>
    <class kind="class">VSTGUI::PitchNamesDataBrowserSource</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>VST 3 plug-ins Examples</title>
    <filename>index</filename>
    <docanchor file="index" title="ADelay">adelay</docanchor>
    <docanchor file="index" title="AGain">again</docanchor>
    <docanchor file="index" title="TestChannelContext">channelcontext</docanchor>
    <docanchor file="index" title="HostChecker">HostChecker</docanchor>
    <docanchor file="index" title="TestLegacyMIDICCOut">legacymidiccout</docanchor>
    <docanchor file="index" title="mda Plug-ins">mdaplugs</docanchor>
    <docanchor file="index" title="Note Expression Synth">NoteExpressionSynth</docanchor>
    <docanchor file="index" title="Note Expression Text">NoteExpressionText</docanchor>
    <docanchor file="index" title="Panner">Panner</docanchor>
    <docanchor file="index" title="PitchNames">PitchNames</docanchor>
    <docanchor file="index" title="TestPrefetchableSupport">prefetchablesupport</docanchor>
    <docanchor file="index" title="TestProgramChange">programchange</docanchor>
    <docanchor file="index" title="Sync Delay">syncdelay</docanchor>
  </compound>
</tagfile>
